<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fmt="http://www.coda.com/common/schemas/formatmaster" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:build="http://www.coda.com/common/schemas/funcsec" targetNamespace="http://www.coda.com/common/schemas/formatmaster" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/>                              <xsd:complexType name="FormatData">         <xsd:annotation>             <xsd:documentation>                 <p>This element holds formatting information.</p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element name="BackgroundColour" type="com:typeULong">                 <xsd:annotation>                     <xsd:documentation>                         <p>The background colour for the field, in standard RGB format.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="HAlign" type="com:typeComAlignHorizontal">                 <xsd:annotation>                     <xsd:documentation>                         <p>How the value is to be aligned horizontally.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="VAlign" type="com:typeComAlignVertical">                 <xsd:annotation>                     <xsd:documentation>                         <p>How the value is to be aligned vertically.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="LineSpacing" type="com:typeULong">                 <xsd:annotation>                     <xsd:documentation>                         <p>An adjustment to the line spacing, expressed as a percentage (e.g. 100% is normal spacing based on the font).</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="Padding" type="com:typePaddingb">                 <xsd:annotation>                     <xsd:documentation>                         <p>The character to insert as padding. No padding is signified by the empty string.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderTop" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Specifies whether the top edge of the field has a border.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderLeft" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Specifies whether the left edge of the field has a border.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderBottom" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Specifies whether the bottom edge of the field has a border.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderRight" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Specifies whether the right edge of the field has a border.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderStyle" type="com:typeComLineStyle">                 <xsd:annotation>                     <xsd:documentation>                         <p>The style of line used to draw borders.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderColour" type="com:typeULong">                 <xsd:annotation>                     <xsd:documentation>                         <p>The colour used to draw the border, in standard RGB format.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="BorderWeight" type="com:typeComLineWeight">                 <xsd:annotation>                     <xsd:documentation>                         <p>The weight of the lines used to draw borders.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="DateTimeFormat" type="com:typeDataFormat">                 <xsd:annotation>                     <xsd:documentation>                         <p>The formula that specifies how Date/Time values are to be formatted.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="NumberFormat" type="com:typeDataFormat">                 <xsd:annotation>                     <xsd:documentation>                         <p>The formula that specifies how numeric values are to be formatted.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="NegativeColour" type="com:typeULong">                 <xsd:annotation>                     <xsd:documentation>                         <p>The colour used to display negative values, in standard RGB format.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="DisplayAsWords" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to convert numeric values into words.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="DecimalsAsDigits" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>If set, the decimal component of the value is displayed as digits even though the whole number value is displayed as words. This column is only used when DisplayAsWords is set.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="DisplayZeroDigits" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>If set, indicates that you want to always display decimal digits,even for zero values. This column is only used when DisplayAsWords is set.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="AppendOnly" type="com:typeComAppendOnly">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to append the word &apos;only&apos; to the amount in words.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontFamily" type="com:typeTextfield">                 <xsd:annotation>                     <xsd:documentation>                         <p>The name of the font in which to output the value.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontSize" type="com:typeWord">                 <xsd:annotation>                     <xsd:documentation>                         <p>The font size.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontColour" type="com:typeULong">                 <xsd:annotation>                     <xsd:documentation>                         <p>The font colour, in standard RGB format.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontBold" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to display the value in bold.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontItalic" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to display the value in italic.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontUnderline" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to display the value with underlining.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element name="FontStrikethrough" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Whether to display the value with strike-through effect.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>               <xsd:complexType name="FormatMaster">         <xsd:annotation>             <xsd:documentation>                 <p>This element holds a format master. Defines the display format for a data cell.</p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="Code" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>The code for this format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="ReadOnly" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>Specifies whether this master is read-only (system provided masters are read-only).</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Name" type="com:typeName">                 <xsd:annotation>                     <xsd:documentation>                         <p>The name of the format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="ShortName" type="com:typeShortNameB">                 <xsd:annotation>                     <xsd:documentation>                         <p>The short name for the format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Format" type="fmt:FormatData">                 <xsd:annotation>                     <xsd:documentation>                         <p>This element holds formatting information.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element maxOccurs="1" minOccurs="1" name="TimeStamp" type="xsd:short">                 <xsd:annotation>                     <xsd:documentation>The TimeStamp number of this FormatMaster.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="FormatMasterList">         <xsd:annotation>             <xsd:documentation>A list of FormatMasters.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="FormatMaster" type="fmt:FormatMaster">                 <xsd:annotation>                     <xsd:documentation>A single FormatMaster item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="FormatMasterKeyList">         <xsd:annotation>             <xsd:documentation>A list of keys for FormatMaster items.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="FormatMaster" type="fmt:FormatMasterKey">                 <xsd:annotation>                     <xsd:documentation>A single key for a FormatMaster item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="FormatMasterKey">         <xsd:annotation>             <xsd:documentation>A single key for a FormatMaster item.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element minOccurs="0" name="Code" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>The code for this format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>               <xsd:complexType name="FormatMasterItemList">         <xsd:annotation>             <xsd:documentation>A typesafe class for a list of FormatMaster items.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="FormatMasterListItem" type="fmt:FormatMasterListItem">                 <xsd:annotation>                     <xsd:documentation>A single FormatMaster item in the list.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="FormatMasterListItem">         <xsd:annotation>             <xsd:documentation>                 <p>This element holds a format master. Defines the display format for a data cell.</p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element minOccurs="0" name="Code" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>The code for this format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">                 <xsd:annotation>                     <xsd:documentation>                         <p>The short name for the format master.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>                               <xsd:annotation>         <xsd:documentation>Schema for the FormatMaster service.<p>Schema for the FormatMaster service.</p>         </xsd:documentation>     </xsd:annotation>     <xsd:complexType name="GetRequest">         <xsd:annotation>             <xsd:documentation>Get.<p>      Retrieves the specified format master from the database.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="FormatMasterKey" type="fmt:FormatMasterKey">                         <xsd:annotation>                             <xsd:documentation>The key to the FormatMaster object.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:GetRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetResponse">         <xsd:annotation>             <xsd:documentation>The response of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="FormatMaster" type="fmt:FormatMaster">                         <xsd:annotation>                             <xsd:documentation>The return value of the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:GetResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FindRequest">         <xsd:annotation>             <xsd:documentation>Find.<p>      Finds a list of format masters in the database.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="Query" type="com:Query">                         <xsd:annotation>                             <xsd:documentation>The set of query criteria to be used to find the FormatMaster objects that the user is interested in.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FindRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the find function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:FindRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the find function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FindResponse">         <xsd:annotation>             <xsd:documentation>The response of the find function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="FormatMasterList" type="fmt:FormatMasterList">                         <xsd:annotation>                             <xsd:documentation>The return value of the find function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FindResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the find function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:FindResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the find function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteRequest">         <xsd:annotation>             <xsd:documentation>Delete.<p>      Deletes the specified format masters from the database.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="FormatMasterKey" type="fmt:FormatMasterKey">                         <xsd:annotation>                             <xsd:documentation>The key to the FormatMaster object.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the delete function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:DeleteRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the delete function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteResponse">         <xsd:annotation>             <xsd:documentation>The response of the delete function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence/>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the delete function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:DeleteResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the delete function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddRequest">         <xsd:annotation>             <xsd:documentation>Add.<p>      Creates new format masters in the database based on the information you provide.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="FormatMaster" type="fmt:FormatMaster">                         <xsd:annotation>                             <xsd:documentation>The whole FormatMaster object that is to be persisted in the system.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the add function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:AddRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the add function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddResponse">         <xsd:annotation>             <xsd:documentation>The response of the add function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="FormatMaster" type="fmt:FormatMaster">                         <xsd:annotation>                             <xsd:documentation>The return value of the add function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the add function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:AddResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the add function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateRequest">         <xsd:annotation>             <xsd:documentation>Update.<p>      Updates format masters in the database using information you provide.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="FormatMaster" type="fmt:FormatMaster">                         <xsd:annotation>                             <xsd:documentation>The whole FormatMaster object that is to be persisted in the system.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the update function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:UpdateRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the update function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateResponse">         <xsd:annotation>             <xsd:documentation>The response of the update function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="FormatMaster" type="fmt:FormatMaster">                         <xsd:annotation>                             <xsd:documentation>The return value of the update function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the update function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:UpdateResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the update function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ListRequest">         <xsd:annotation>             <xsd:documentation>List.<p>      Retrieves a list of keys for the specified format masters from the database.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="Query" type="com:Query">                         <xsd:annotation>                             <xsd:documentation>The set of query criteria to be used to find the FormatMaster objects that the user is interested in.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ListRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the list function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="fmt:ListRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the list function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ListResponse">         <xsd:annotation>             <xsd:documentation>The response of the list function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="FormatMasterItemList" type="fmt:FormatMasterItemList">                         <xsd:annotation>                             <xsd:documentation>The return value of the list function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ListResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the list function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="fmt:ListResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the list function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FormatMasterRequest">         <xsd:annotation>             <xsd:appinfo build:funcSecValue="423" build:readOnly="true"/>             <xsd:documentation>The FormatMaster service request.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ServiceRequest">                 <xsd:sequence>                     <xsd:element minOccurs="0" name="Get" type="fmt:GetRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="1" build:readOnly="true"/>                             <xsd:documentation>The request to the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Find" type="fmt:FindRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="2" build:readOnly="true"/>                             <xsd:documentation>The request to the find function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Delete" type="fmt:DeleteRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="3" build:readOnly="false"/>                             <xsd:documentation>The request to the delete function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Add" type="fmt:AddRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="4" build:readOnly="false"/>                             <xsd:documentation>The request to the add function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Update" type="fmt:UpdateRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="5" build:readOnly="false"/>                             <xsd:documentation>The request to the update function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="List" type="fmt:ListRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="6" build:readOnly="true"/>                             <xsd:documentation>The request to the list function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FormatMasterResponse">         <xsd:annotation>             <xsd:documentation>The FormatMaster service response.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ServiceResponse">                 <xsd:sequence>                     <xsd:element minOccurs="0" name="Get" type="fmt:GetResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Find" type="fmt:FindResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the find function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Delete" type="fmt:DeleteResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the delete function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Add" type="fmt:AddResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the add function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Update" type="fmt:UpdateResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the update function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="List" type="fmt:ListResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the list function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>          <xsd:element name="FormatMasterRequest" type="fmt:FormatMasterRequest">         <xsd:annotation>             <xsd:documentation>The Root element for the FormatMaster service request</xsd:documentation>         </xsd:annotation>     </xsd:element>     <xsd:element name="FormatMasterResponse" type="fmt:FormatMasterResponse">         <xsd:annotation>             <xsd:documentation>The Root element for the FormatMaster service response</xsd:documentation>         </xsd:annotation>     </xsd:element> </xsd:schema>