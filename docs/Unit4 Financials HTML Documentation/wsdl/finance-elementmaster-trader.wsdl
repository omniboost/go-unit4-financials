<?xml version="1.0" encoding="UTF-8"?>
<definitions targetNamespace="http://www.coda.com/efinance/schemas/elementmaster/trader-12.0/webservice" xmlns:elmws="http://www.coda.com/efinance/schemas/elementmaster/trader-12.0/webservice" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:com="http://www.coda.com/efinance/schemas/common"
    xmlns:ffd="http://www.coda.com/common/schemas/flexifield"
    xmlns:udf="http://www.coda.com/common/schemas/udfmaster"
    xmlns:atc="http://www.coda.com/common/schemas/attachment"
    xmlns:efm="http://www.coda.com/efinance/schemas/elementfiltermaster"
    xmlns:build="http://www.coda.com/common/schemas/funcsec"
    xmlns:elm="http://www.coda.com/efinance/schemas/elementmaster"
    targetNamespace="http://www.coda.com/efinance/schemas/elementmaster/trader-12.0/webservice"
    attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="finance/common/common.xsd"/>
    <xsd:import
        namespace="http://www.coda.com/efinance/schemas/elementmaster" schemaLocation="../wsdl/finance/elementmaster/elementmaster.xsd"/>
    <xsd:import
        namespace="http://www.coda.com/common/schemas/flexifield" schemaLocation="common/flexifield/flexifield.xsd"/>
    <xsd:import
        namespace="http://www.coda.com/common/schemas/attachment" schemaLocation="common/attachment/attachment.xsd"/>
    <xsd:import
        namespace="http://www.coda.com/efinance/schemas/elementfiltermaster" schemaLocation="finance/elementfiltermaster/elementfiltermaster.xsd"/>
    <xsd:import namespace="http://www.coda.com/common/schemas/udfmaster" schemaLocation="common/udfmaster/udfmaster.xsd"/>
    <xsd:element name="AddRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Trader" type="elm:Trader">
                    <xsd:annotation>
                        <xsd:documentation>Contains the information for
                            the trader you want to create.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Validation" minOccurs="0" type="elm:Validation">
                    <xsd:annotation>
                        <xsd:documentation>Contains the document and
                            media master codes selected in the current
                            input session, against which the new trader
                            details will be validated.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ListRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="elm:TraderDetail">
                    <xsd:annotation>
                        <xsd:documentation>A filter that selects the
                            traders to be listed.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GetResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Trader" minOccurs="0" type="elm:Trader">
                    <xsd:annotation>
                        <xsd:documentation>Contains the trader
                            information you have retrieved from the database.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="OptionsResponse">
        <xsd:complexType>
            <xsd:attribute name="transactioncoordinator" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ListResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Keys" type="elm:TraderDetails">
                    <xsd:annotation>
                        <xsd:documentation>Contains extended key
                            information for the listed traders.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PurgeResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="LogTitle" type="com:typeLogTitle">
                    <xsd:annotation>
                        <xsd:documentation>The title of a log file in
                            which details of the purge trader session
                            are recorded.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Filter" minOccurs="0" type="elm:TraderSelectFilter">
                    <xsd:annotation>
                        <xsd:documentation>The filter sent with the
                            PurgeTraderRequest corresponding to this response.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="UpdateResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="CmpCode" type="com:typeGeneralCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the company in
                            which you attempted to update the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="ElmCode" type="com:typeElmCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the umbrella
                            element within which you attempted to update
                            the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="ElmLevel" type="com:typeElmLevel">
                    <xsd:annotation>
                        <xsd:documentation>The level of the umbrella
                            element within which you attempted to update
                            the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Code" type="com:typeTraderCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the trader which
                            you attempted to update.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="TimeStamp" type="com:typeWord">
                    <xsd:annotation>
                        <xsd:documentation>The TimeStamp value for this
                            trader in the database.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SelectRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="elm:TraderSelectFilter">
                    <xsd:annotation>
                        <xsd:documentation>A filter for selecting traders.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AddResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="CmpCode" type="com:typeGeneralCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the company in
                            which you attempted to create the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="ElmCode" type="com:typeElmCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the umbrella
                            element within which you attempted to create
                            the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="ElmLevel" type="com:typeElmLevel">
                    <xsd:annotation>
                        <xsd:documentation>The level of the umbrella
                            element within which you attempted to create
                            the trader.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Code" type="com:typeTraderCode">
                    <xsd:annotation>
                        <xsd:documentation>The code for the trader which
                            you attempted to create.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="TimeStamp" type="com:typeWord">
                    <xsd:annotation>
                        <xsd:documentation>The TimeStamp value for this
                            trader in the database.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="UpdateRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Trader" type="elm:Trader">
                    <xsd:annotation>
                        <xsd:documentation>Contains the information for
                            the trader you want to update.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Validation" minOccurs="0" type="elm:Validation">
                    <xsd:annotation>
                        <xsd:documentation>Contains the document and
                            media master codes selected in the current
                            input session, against which the updated
                            trader details will be validated.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="PurgeRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="LogTitle" type="com:typeLogTitle">
                    <xsd:annotation>
                        <xsd:documentation>The title of a log file in
                            which details of the purge trader session
                            are recorded.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Filter" minOccurs="0" type="elm:TraderSelectFilter">
                    <xsd:annotation>
                        <xsd:documentation>A filter for selecting traders.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Keys" type="elm:TraderKeys">
                    <xsd:annotation>
                        <xsd:documentation>Contains the keys identifying
                            the traders you want to purge.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="SelectResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="elm:TraderSelectFilter">
                    <xsd:annotation>
                        <xsd:documentation>The filter sent with the
                            SelectTraderRequest corresponding to this response.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Details" minOccurs="0" type="elm:TraderSelectDetails">
                    <xsd:annotation>
                        <xsd:documentation>Contains details of the
                            traders selected by the SelectTraderRequest
                            corresponding to this response.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ListAllResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="elm:AllCmpTraderFilter">
                    <xsd:annotation>
                        <xsd:documentation>The filter sent with the
                            ListAllTraderRequest corresponding to this response.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="Codes" type="elm:TraderCodes">
                    <xsd:annotation>
                        <xsd:documentation>The list of trader codes
                            returned by the ListAllTraderRequest
                            corresponding to this response.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Options">
        <xsd:complexType>
            <xsd:attribute name="bulkload" type="xsd:boolean"/>
            <xsd:attribute name="logtitle" type="com:typeLogTitle"/>
            <xsd:attribute name="attachments" type="com:typeAttachments" default="none"/>
            <xsd:attribute name="locale" type="com:typeLocale"/>
            <xsd:attribute name="origin" type="xsd:string"/>
            <xsd:attribute name="handlingdata" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>For internal use only.</xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="user" type="com:typeGeneralCode"/>
            <xsd:attribute name="company" type="com:typeGeneralCode"/>
            <xsd:attribute name="session" type="xsd:string"/>
            <xsd:attribute name="slot" type="xsd:nonNegativeInteger"/>
            <xsd:attribute name="transactionid" type="xsd:string"/>
            <xsd:attribute name="txtimeout" type="xsd:int"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ListAllRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="elm:AllCmpTraderFilter">
                    <xsd:annotation>
                        <xsd:documentation>A filter for selecting all
                            trader codes in the specified company
                            regardless of which umbrella element the
                            traders belong to.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="GetRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Key" type="elm:TraderKey">
                    <xsd:annotation>
                        <xsd:documentation>Contains the key identifying
                            the trader you want to retrieve from the database.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
  </types>
  <message name="SelectResponse">
    <part name="SelectResponse" element="elmws:SelectResponse"/>
  </message>
  <message name="OptionsResponse">
    <part name="OptionsResponse" element="elmws:OptionsResponse"/>
  </message>
  <message name="SelectRequest">
    <part name="SelectRequest" element="elmws:SelectRequest"/>
  </message>
  <message name="PurgeResponse">
    <part name="PurgeResponse" element="elmws:PurgeResponse"/>
  </message>
  <message name="GetRequest">
    <part name="GetRequest" element="elmws:GetRequest"/>
  </message>
  <message name="ListAllResponse">
    <part name="ListAllResponse" element="elmws:ListAllResponse"/>
  </message>
  <message name="UpdateResponse">
    <part name="UpdateResponse" element="elmws:UpdateResponse"/>
  </message>
  <message name="AddRequest">
    <part name="AddRequest" element="elmws:AddRequest"/>
  </message>
  <message name="GetResponse">
    <part name="GetResponse" element="elmws:GetResponse"/>
  </message>
  <message name="AddResponse">
    <part name="AddResponse" element="elmws:AddResponse"/>
  </message>
  <message name="UpdateRequest">
    <part name="UpdateRequest" element="elmws:UpdateRequest"/>
  </message>
  <message name="ListResponse">
    <part name="ListResponse" element="elmws:ListResponse"/>
  </message>
  <message name="Options">
    <part name="Options" element="elmws:Options"/>
  </message>
  <message name="PurgeRequest">
    <part name="PurgeRequest" element="elmws:PurgeRequest"/>
  </message>
  <message name="ListRequest">
    <part name="ListRequest" element="elmws:ListRequest"/>
  </message>
  <message name="ListAllRequest">
    <part name="ListAllRequest" element="elmws:ListAllRequest"/>
  </message>
  <portType name="TraderServicePortTypes">
    <operation name="Add">
      <input message="elmws:AddRequest"/>
      <output message="elmws:AddResponse"/>
    </operation>
    <operation name="ListAll">
      <input message="elmws:ListAllRequest"/>
      <output message="elmws:ListAllResponse"/>
    </operation>
    <operation name="Purge">
      <input message="elmws:PurgeRequest"/>
      <output message="elmws:PurgeResponse"/>
    </operation>
    <operation name="Get">
      <input message="elmws:GetRequest"/>
      <output message="elmws:GetResponse"/>
    </operation>
    <operation name="Select">
      <input message="elmws:SelectRequest"/>
      <output message="elmws:SelectResponse"/>
    </operation>
    <operation name="List">
      <input message="elmws:ListRequest"/>
      <output message="elmws:ListResponse"/>
    </operation>
    <operation name="Update">
      <input message="elmws:UpdateRequest"/>
      <output message="elmws:UpdateResponse"/>
    </operation>
  </portType>
  <binding name="TraderServiceSOAPBinding" type="elmws:TraderServicePortTypes">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="Add">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/Add" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListAll">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/ListAll" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Purge">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/Purge" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Get">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/Get" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Select">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/Select" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="List">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/List" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Update">
<documentation></documentation>
      <soap:operation soapAction="uri-coda-webservice/14.000.0011/finance/Trader/Update" style="document"/>
      <input>
        <soap:header message="elmws:Options" part="Options" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:header message="elmws:OptionsResponse" part="OptionsResponse" use="literal">
        </soap:header>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="TraderService">
    <port name="TraderServicePort" binding="elmws:TraderServiceSOAPBinding">
      <soap:address location="http://localhost:8080/coda/services/finance/elementmaster/trader-12.0"/>
    </port>
  </service>
</definitions>
