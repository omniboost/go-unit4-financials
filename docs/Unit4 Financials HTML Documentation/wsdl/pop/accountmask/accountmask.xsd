<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:poptypes="http://www.coda.com/pop/schemas/common" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:acmask="http://www.coda.com/pop/schemas/accountmask" targetNamespace="http://www.coda.com/pop/schemas/accountmask" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/><xsd:import namespace="http://www.coda.com/pop/schemas/common" schemaLocation="../../../wsdl/pop/common/common.xsd"/>                                   <xsd:complexType name="Mapping">         <xsd:annotation>             <xsd:documentation>                 <p>     An element level mapping.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="ElmLevel" type="com:typeUWordB">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The level of the element for which the mapping is defined.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="MappingType" type="poptypes:typePopAccountMaskMapping">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Property which determines what type of mapping the user has selected. This is     held as a OneOfN value, the user can either select a number of pre-defined values     or a UDF master code.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="ElmCode" type="com:typeElmCodeB">                 <xsd:annotation>                     <xsd:documentation>                         <p>     If the corresponding mapping type is element code then this property     must hold the element master code. If it&apos;s any other type then this     should be empty as it is irrelevant.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="MappingList">         <xsd:annotation>             <xsd:documentation>A list of Mappings.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="Mapping" type="acmask:Mapping">                 <xsd:annotation>                     <xsd:documentation>A single Mapping item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="MappingKeyList">         <xsd:annotation>             <xsd:documentation>A list of keys for Mapping items.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="Mapping" type="acmask:MappingKey">                 <xsd:annotation>                     <xsd:documentation>A single key for a Mapping item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="MappingKey">         <xsd:annotation>             <xsd:documentation>A single key for a Mapping item.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element minOccurs="0" name="MasterCode" type="poptypes:typePopItemcode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the master code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     at the minute as it is used by different domain classes.     This is of type POP_ITEMCODE because the AccountMask can be associated with      masters whose codes are not CODEs (I.e. Items).     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="CompanyCode" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the company code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     as it is used by different domain classes.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="AccountMaskType" type="poptypes:typePopAccountMask">                 <xsd:annotation>                     <xsd:documentation>                         <p>     The type of account mask. Used to display the title of the      account mask.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="ElmLevel" type="com:typeUWordB">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The level of the element for which the mapping is defined.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="AccountMask">         <xsd:annotation>             <xsd:documentation>                 <p>    The account mask object, which holds the mappings and codes    which form the account substitutions.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="MasterCode" type="poptypes:typePopItemcode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the master code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     at the minute as it is used by different domain classes.     This is of type POP_ITEMCODE because the AccountMask can be associated with      masters whose codes are not CODEs (I.e. Items).     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="CompanyCode" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the company code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     as it is used by different domain classes.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="AccountMaskType" type="poptypes:typePopAccountMask">                 <xsd:annotation>                     <xsd:documentation>                         <p>     The type of account mask. Used to display the title of the      account mask.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="DestinationCode" type="com:typeCodeB">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The destination code, for an intercompany account mask.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="Intercompany" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>    Specifies whether this is an intercompany account mask.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element name="MappingList" type="acmask:MappingList">                 <xsd:annotation>                     <xsd:documentation>                         <p>     List of mappings the user has selected. This is     held as a OneOfN value, the user can either select a number of pre-defined values     or a UDF master code.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="ReferenceCount" type="com:typeULongB">                 <xsd:annotation>                     <xsd:documentation>                         <string>The number of other objects in the system that reference this object.</string>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element maxOccurs="1" minOccurs="1" name="TimeStamp" type="xsd:short">                 <xsd:annotation>                     <xsd:documentation>The TimeStamp number of this AccountMask.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="AccountMaskList">         <xsd:annotation>             <xsd:documentation>A list of AccountMasks.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="AccountMask" type="acmask:AccountMask">                 <xsd:annotation>                     <xsd:documentation>A single AccountMask item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="AccountMaskKeyList">         <xsd:annotation>             <xsd:documentation>A list of keys for AccountMask items.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="AccountMask" type="acmask:AccountMaskKey">                 <xsd:annotation>                     <xsd:documentation>A single key for a AccountMask item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="AccountMaskKey">         <xsd:annotation>             <xsd:documentation>A single key for a AccountMask item.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element minOccurs="0" name="MasterCode" type="poptypes:typePopItemcode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the master code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     at the minute as it is used by different domain classes.     This is of type POP_ITEMCODE because the AccountMask can be associated with      masters whose codes are not CODEs (I.e. Items).     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="CompanyCode" type="com:typeCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>     Holds the company code of the parent document master.     This is currently required as we can only associate     account mask objects using aggregation and not composition     as it is used by different domain classes.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>             <xsd:element minOccurs="0" name="AccountMaskType" type="poptypes:typePopAccountMask">                 <xsd:annotation>                     <xsd:documentation>                         <p>     The type of account mask. Used to display the title of the      account mask.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>      </xsd:schema>