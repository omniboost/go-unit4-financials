<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pimtypes="http://www.coda.com/pim/schemas/common" xmlns:inv="http://www.coda.com/pim/schemas/invoice" xmlns:presmas="http://www.coda.com/efinance/schemas/presenter" xmlns:matng="http://www.coda.com/pim/schemas/matching" xmlns:pimusr="http://www.coda.com/pim/schemas/user" xmlns:lrn="http://www.coda.com/pim/schemas/logicalreceiptnote" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:docmas="http://www.coda.com/pim/schemas/documentmaster" xmlns:matching="http://www.coda.com/pim/schemas/matching" xmlns:dbn="http://www.coda.com/pim/schemas/debitnote" xmlns:matmas="http://www.coda.com/pim/schemas/matchingmaster" xmlns:group="http://www.coda.com/pim/schemas/group" xmlns:cmt="http://www.coda.com/pim/schemas/comment" xmlns:selmas="http://www.coda.com/efinance/schemas/selectormaster" xmlns:pimsel="http://www.coda.com/pim/schemas/selector" xmlns:build="http://www.coda.com/common/schemas/funcsec" xmlns:sel="http://www.coda.com/efinance/schemas/selector" xmlns:gsl="http://www.coda.com/efinance/schemas/selectormaster" xmlns:taxmas="http://www.coda.com/pim/schemas/taxmaster" xmlns:sunlinemas="http://www.coda.com/pim/schemas/sundrylinemaster" xmlns:pimcom="http://www.coda.com/pim/schemas/common" targetNamespace="http://www.coda.com/pim/schemas/matching" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/pim/schemas/taxmaster" schemaLocation="../../../wsdl/pim/taxmaster/taxmaster.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/common" schemaLocation="../../../wsdl/pim/common/common.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/sundrylinemaster" schemaLocation="../../../wsdl/pim/sundrylinemaster/sundrylinemaster.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/selector" schemaLocation="../../../wsdl/finance/selector/selector.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/invoice" schemaLocation="../../../wsdl/pim/invoice/invoice.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/group" schemaLocation="../../../wsdl/pim/group/group.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/user" schemaLocation="../../../wsdl/pim/user/user.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/debitnote" schemaLocation="../../../wsdl/pim/debitnote/debitnote.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/selector" schemaLocation="../../../wsdl/pim/selector/selector.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/comment" schemaLocation="../../../wsdl/pim/comment/comment.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/presenter" schemaLocation="../../../wsdl/finance/presenter/presenter.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/matchingmaster" schemaLocation="../../../wsdl/pim/matchingmaster/matchingmaster.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/logicalreceiptnote" schemaLocation="../../../wsdl/pim/logicalreceiptnote/logicalreceiptnote.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/selectormaster" schemaLocation="../../../wsdl/finance/selectormaster/selectormaster.xsd"/><xsd:import namespace="http://www.coda.com/pim/schemas/documentmaster" schemaLocation="../../../wsdl/pim/documentmaster/documentmaster.xsd"/>                          <xsd:complexType name="SelectFoldersRequest">   <xsd:annotation>    <xsd:documentation>     The select function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="MatchingMaster" type="matmas:MatchingMaster">       <xsd:annotation>        <xsd:documentation>The code of the matching master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="SkipSelection" type="xsd:boolean">       <xsd:annotation>        <xsd:documentation>When True, only document headers are retrieved.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectFoldersRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects invoices and LRNs for inclusion in the matching folders.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SelectFoldersRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectFoldersResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="InvoiceSelection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The purchase invoice documents selected by the request.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="LRNSelection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The LRN documents selected by the request.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectFoldersResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SelectFoldersResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="MatchingMaster" type="matmas:MatchingMaster">       <xsd:annotation>        <xsd:documentation>The code of the matching master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="SelectorMaster" type="selmas:SelectorMaster">       <xsd:annotation>        <xsd:documentation>The selector defining the search criteria to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="PresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The presenter used to display the selected documents.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects documents for matching using the information you provide.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SelectRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Selection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The documents selected by the request.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SelectResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectRequest">   <xsd:annotation>    <xsd:documentation>     The select function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="SelectorMaster" type="selmas:SelectorMaster">       <xsd:annotation>        <xsd:documentation>The code for the selector master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="PresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects purchase invoices for single invoice matching.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SingleInvoiceSelectRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Selection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The purchase invoice documents selected for single invoice matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SingleInvoiceSelectResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectWIPInvoicesRequest">   <xsd:annotation>    <xsd:documentation>     The select wip invoices function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="MatchingMaster" type="matmas:MatchingMaster">       <xsd:annotation>        <xsd:documentation>The code of the matching master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="SelectorMaster" type="selmas:SelectorMaster">       <xsd:annotation>        <xsd:documentation>The code for the selector master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="PresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectWIPInvoicesRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects &apos;work in progress&apos; (WIP) matches for interactive matching.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SelectWIPInvoicesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectWIPInvoicesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Selection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The WIP matches selected for interactive matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectWIPInvoicesResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SelectWIPInvoicesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectWIPInvoicesRequest">   <xsd:annotation>    <xsd:documentation>     The select wip invoices function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="SelectorMaster" type="selmas:SelectorMaster">       <xsd:annotation>        <xsd:documentation>The code for the selector master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="PresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectWIPInvoicesRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects &apos;work in progress&apos; (WIP) matches for single invoice matching.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SingleInvoiceSelectWIPInvoicesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectWIPInvoicesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Selection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The WIP matches selected for single invoice matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SingleInvoiceSelectWIPInvoicesResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SingleInvoiceSelectWIPInvoicesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="RunGroupingAssistantRequest">   <xsd:annotation>    <xsd:documentation>     The run grouping assistant function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="MatchingMaster" type="matmas:MatchingMaster">       <xsd:annotation>        <xsd:documentation>The code of the matching master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="Invoices" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The purchase invoice documents available for grouping.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="LRNLines" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The LRN lines available for grouping.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="RunGroupingAssistantRequestVerb">   <xsd:annotation>    <xsd:documentation>Runs the grouping assistant using the grouping criteria on the specified matching master.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:RunGroupingAssistantRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="RunGroupingAssistantResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Group" type="group:Group">       <xsd:annotation>        <xsd:documentation>This element contains a group created by the grouping assistant.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupedInvoice" type="inv:InvoiceKey">       <xsd:annotation>        <xsd:documentation>Identifies the selected purchase invoice documents that have been grouped.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="UngroupedInvoice" type="inv:InvoiceKey">       <xsd:annotation>        <xsd:documentation>Identifies any selected purchase invoices that have not been grouped.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupedLRNLine" type="lrn:LRNLineKey">       <xsd:annotation>        <xsd:documentation>Identifies the selected LRN lines that have been grouped.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="UngroupedLRNLine" type="lrn:LRNLineKey">       <xsd:annotation>        <xsd:documentation>Identifies any selected LRN lines that have not been grouped.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="RunGroupingAssistantResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:RunGroupingAssistantResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectMatchedInvoicesToUndoRequest">   <xsd:annotation>    <xsd:documentation>     The select matched invoices to undo function.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="SelectorMaster" type="selmas:SelectorMaster">       <xsd:annotation>        <xsd:documentation>The code for the selector master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="PresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectMatchedInvoicesToUndoRequestVerb">   <xsd:annotation>    <xsd:documentation>Selects matched purchase invoices for the Undo Matching function.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:SelectMatchedInvoicesToUndoRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectMatchedInvoicesToUndoResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Selection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The purchase invoices selected by the request.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectMatchedInvoicesToUndoResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:SelectMatchedInvoicesToUndoResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ExplodeMatchRequest">   <xsd:annotation>    <xsd:documentation>     Explode a given match - find all invoice type documents and LRN&apos;s with the given match reference.    </xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Invoice" type="inv:InvoiceKey">       <xsd:annotation>        <xsd:documentation>Contains the key identifying the matched invoice that you want to explode.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="ExplodeInvoicePresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use to display the exploded invoice details.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="ExplodeLRNPresenterMaster" type="presmas:Presenter">       <xsd:annotation>        <xsd:documentation>The code for the presenter master you want to use to display the exploded LRN details</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ExplodeMatchRequestVerb">   <xsd:annotation>    <xsd:documentation>Explodes the specified match from within the Undo Matching function.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matng:ExplodeMatchRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ExplodeMatchResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="InvoiceSelection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The purchase invoices in the exploded match.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="LRNSelection" type="sel:Selection">       <xsd:annotation>        <xsd:documentation>The LRNs in the exploded match.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="MatchReference" type="com:typeULong">       <xsd:annotation>        <xsd:documentation>The match reference.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ExplodeMatchResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matng:ExplodeMatchResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="PIMMatchingSelectorRequest">   <xsd:annotation>    <xsd:appinfo build:funcSecValue="810" build:readOnly="true"/>    <xsd:documentation>This service allows you to select documents for matching.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceRequest">     <xsd:sequence>      <xsd:element minOccurs="0" name="SelectFolders" type="matng:SelectFoldersRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="1" build:readOnly="false"/>        <xsd:documentation>Selects invoices and LRNs for inclusion in the matching folders.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Select" type="matng:SelectRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="2" build:readOnly="false"/>        <xsd:documentation>Selects documents for matching using the information you provide.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SingleInvoiceSelect" type="matng:SingleInvoiceSelectRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="3" build:readOnly="false"/>        <xsd:documentation>Selects purchase invoices for single invoice matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SelectWIPInvoices" type="matng:SelectWIPInvoicesRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="4" build:readOnly="false"/>        <xsd:documentation>Selects &apos;work in progress&apos; (WIP) matches for interactive matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SingleInvoiceSelectWIPInvoices" type="matng:SingleInvoiceSelectWIPInvoicesRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="5" build:readOnly="false"/>        <xsd:documentation>Selects &apos;work in progress&apos; (WIP) matches for single invoice matching.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="RunGroupingAssistant" type="matng:RunGroupingAssistantRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="6" build:readOnly="false"/>        <xsd:documentation>Runs the grouping assistant using the grouping criteria on the specified matching master.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SelectMatchedInvoicesToUndo" type="matng:SelectMatchedInvoicesToUndoRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="7" build:readOnly="false"/>        <xsd:documentation>Selects matched purchase invoices for the Undo Matching function.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="ExplodeMatch" type="matng:ExplodeMatchRequestVerb">       <xsd:annotation>        <xsd:appinfo build:funcSecValue="8" build:readOnly="true"/>        <xsd:documentation>Explodes the specified match from within the Undo Matching function.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PIMMatchingSelectorResponse">   <xsd:annotation>    <xsd:documentation>This is the response that is returned when you select documents for matching.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceResponse">     <xsd:sequence>      <xsd:element minOccurs="0" name="SelectFolders" type="matng:SelectFoldersResponseVerb">       <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Select" type="matng:SelectResponseVerb">       <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SingleInvoiceSelect" type="matng:SingleInvoiceSelectResponseVerb">       <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SelectWIPInvoices" type="matng:SelectWIPInvoicesResponseVerb">       <xsd:annotation>        <xsd:documentation>         The response from the select wip invoices function.        </xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SingleInvoiceSelectWIPInvoices" type="matng:SingleInvoiceSelectWIPInvoicesResponseVerb">       <xsd:annotation>        <xsd:documentation>         The response from the select wip invoices function.        </xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="RunGroupingAssistant" type="matng:RunGroupingAssistantResponseVerb">       <xsd:annotation>        <xsd:documentation>         The response from the grouping assistant function.        </xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="SelectMatchedInvoicesToUndo" type="matng:SelectMatchedInvoicesToUndoResponseVerb">       <xsd:annotation>        <xsd:documentation>         The request from the select matched invoices to undo service.        </xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="ExplodeMatch" type="matng:ExplodeMatchResponseVerb">       <xsd:annotation>        <xsd:documentation>         The response from the explode match service.        </xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:element name="PIMMatchingSelectorRequest" type="matng:PIMMatchingSelectorRequest">   <xsd:annotation>    <xsd:documentation>This service allows you to select documents for matching.</xsd:documentation>   </xsd:annotation>  </xsd:element>  <xsd:element name="PIMMatchingSelectorResponse" type="matng:PIMMatchingSelectorResponse">   <xsd:annotation>    <xsd:documentation>This is the response that is returned when you select documents for matching.</xsd:documentation>   </xsd:annotation>  </xsd:element>                                                                                           <xsd:annotation>         <xsd:documentation>Schema for the PIMMatching service.<p>     The services for interactive and background     matching.    </p>         </xsd:documentation>     </xsd:annotation>     <xsd:complexType name="RunBackgroundMatchingRequest">         <xsd:annotation>             <xsd:documentation>RunBackgroundMatching.<p>      Function to kick off the background matching      process from within the interactive matching      client. The user could have modified the       matching master at runtime.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="LogTitle" type="pimtypes:typePimLogtitle">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The title for the log to which this background       run will write.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LogDetail" type="pimtypes:typePimLogDetailLevel">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The level of logging information to write.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The version of the matching master held by the       client should be passed in as they could       have modified it.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RunBackgroundMatchingRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the runBackgroundMatching function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:RunBackgroundMatchingRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the runBackgroundMatching function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RunBackgroundMatchingResponse">         <xsd:annotation>             <xsd:documentation>The response of the runBackgroundMatching function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence/>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RunBackgroundMatchingResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the runBackgroundMatching function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:RunBackgroundMatchingResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the runBackgroundMatching function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetWIPGroupsRequest">         <xsd:annotation>             <xsd:documentation>GetWIPGroups.<p>      Given a list of invoice keys will load up the WIP groups      they are involved in.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupKeyList" type="group:GroupKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys of the wip groups be loaded.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetWIPGroupsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getWIPGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetWIPGroupsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getWIPGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetWIPGroupsResponse">         <xsd:annotation>             <xsd:documentation>The response of the getWIPGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetWIPGroupsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getWIPGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetWIPGroupsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getWIPGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupForSingleInvoiceRequest">         <xsd:annotation>             <xsd:documentation>CreateGroupForSingleInvoice.<p>      Takes the key to an invoice saved on the database and performs a search for LRNs.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice to create the group for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master to use (optional)      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="SelectorMaster" type="pimsel:Selector">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The LRN selector to use (prompts completed) for grouping (if no criteria specified on the matching master).      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupForSingleInvoiceRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the createGroupForSingleInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CreateGroupForSingleInvoiceRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the createGroupForSingleInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupForSingleInvoiceResponse">         <xsd:annotation>             <xsd:documentation>The response of the createGroupForSingleInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>The matchingMaster is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupForSingleInvoiceResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the createGroupForSingleInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CreateGroupForSingleInvoiceResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the createGroupForSingleInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupRequest">         <xsd:annotation>             <xsd:documentation>CreateGroup.<p>      Creates a group from some invoice and lrn      lines.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master to use.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups that this new one will reference. This will be by way of LRN lines that have       been split. It is likely that the group may not be related to any other in which case none       need to be passed in.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceKeyKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys for the invoices to put in the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="LrnLineKeyKeyList" type="lrn:LRNLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys for the lrn lines to put in the group. The keys are passed if       the line hasn&apos;t been loaded up by the client before.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="LrnLineList" type="lrn:LRNLineList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The lrn lines to put in the group. The full line should be passed in if       it has been loaded up by the client before.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the createGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CreateGroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the createGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the createGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CreateGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The return value of the createGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateGroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the createGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CreateGroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the createGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddToGroupRequest">         <xsd:annotation>             <xsd:documentation>AddToGroup.<p>      Adds items to an existing group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to add the items to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceKeyKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys for the invoices to put in the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="LrnLineKeyKeyList" type="lrn:LRNLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys for the lrn lines to put in the group. The keys are passed if       the line hasn&apos;t been loaded up by the client before.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="LrnLineList" type="lrn:LRNLineList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The lrn lines to put in the group. The full line should be passed in if       it has been loaded up by the client before.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddToGroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the addToGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:AddToGroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the addToGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddToGroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the addToGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AddToGroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the addToGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:AddToGroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the addToGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="MoveGroupMembersRequest">         <xsd:annotation>             <xsd:documentation>MoveGroupMembers.<p>      Moves the members of one group (Invoices and M Lines)      into another group. Note, a Group can be both a target and      a source.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups involved in the moves. Note, the direction is inout.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MoveDefintionList" type="matching:PIMMatchingMoveGroupMembersMoveDefintionList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of MoveDefinitions holding information about which        group members should move to which groups.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingMoveGroupMembersMoveDefintionList">         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="1" name="MoveDefintion" type="matching:MoveDefinition">                 <xsd:annotation>                     <xsd:documentation>As the moveDefintion argument is a collection argument, this type is used to hold the instances of the moveDefintion argument.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="MoveGroupMembersRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the moveGroupMembers function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:MoveGroupMembersRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the moveGroupMembers function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="MoveGroupMembersResponse">         <xsd:annotation>             <xsd:documentation>The response of the moveGroupMembers function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="2" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="MoveGroupMembersResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the moveGroupMembers function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:MoveGroupMembersResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the moveGroupMembers function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAssociatedLRNsRequest">         <xsd:annotation>             <xsd:documentation>GetAssociatedLRNs.<p>      Retrieves the lrns associated with a list of MLines. Used by the      matching client to populate information for the exploded group      screen.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups involved with the mLines.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineList" type="group:MLineList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of mLines to retrieve the lrns for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAssociatedLRNsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getAssociatedLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetAssociatedLRNsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getAssociatedLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAssociatedLRNsResponse">         <xsd:annotation>             <xsd:documentation>The response of the getAssociatedLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Association" type="matching:LRNMLineAssociation">                         <xsd:annotation>                             <xsd:documentation>The association is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAssociatedLRNsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getAssociatedLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetAssociatedLRNsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getAssociatedLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateUngroupRequest">         <xsd:annotation>             <xsd:documentation>ValidateUngroup.<p>      Checks if the ungroup actions about to be performed      will invalidate the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to remove items from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of invoices to be removed from the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineKeyList" type="group:MLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of mLines to be removed from the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateUngroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the validateUngroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ValidateUngroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the validateUngroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateUngroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the validateUngroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="ValidateUngroup" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>The return value of the validateUngroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateUngroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the validateUngroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ValidateUngroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the validateUngroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UngroupRequest">         <xsd:annotation>             <xsd:documentation>Ungroup.<p>      Removes invoices and/or mlines from the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to remove items from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of invoices to be removed from the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineKeyList" type="group:MLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of mLines to be removed from the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UngroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the ungroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:UngroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the ungroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UngroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the ungroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>The invoice is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="LrnLine" type="lrn:LRNLine">                         <xsd:annotation>                             <xsd:documentation>The lrnLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UngroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the ungroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:UngroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the ungroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SplitLineRequest">         <xsd:annotation>             <xsd:documentation>SplitLine.<p>      Used by the interactive matching client to split      an MLine, allowing it to be assigned to different      lines within a group or placed in more than one      group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to which the mline belongs.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The m line to be split.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Quantity" type="com:typeNumber">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The quantity to leave on the m line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The value to leave on the m line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice to be part matched, passed so can check sign before splitting line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SplitLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the splitLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:SplitLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the splitLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SplitLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the splitLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="LrnLine" type="lrn:LRNLine">                         <xsd:annotation>                             <xsd:documentation>The lrnLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SplitLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the splitLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:SplitLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the splitLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineRequest">         <xsd:annotation>             <xsd:documentation>PurgeMLine.<p>      Purges an MLine from a group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to purge the m line from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the mLine to be purged from the group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeMLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeMLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupAssignmentsRequest">         <xsd:annotation>             <xsd:documentation>PurgeGroupAssignments.<p>      Purges all assignments for all invoices in the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group from which to purge assignments.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupAssignmentsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeGroupAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeGroupAssignmentsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeGroupAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupAssignmentsResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeGroupAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupAssignmentsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeGroupAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeGroupAssignmentsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeGroupAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceAssignmentsRequest">         <xsd:annotation>             <xsd:documentation>PurgeInvoiceAssignments.<p>      Purges all the assignments on an invoice.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that holds the invoice we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice to purge the assignments for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceAssignmentsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeInvoiceAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeInvoiceAssignmentsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeInvoiceAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceAssignmentsResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeInvoiceAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceAssignmentsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeInvoiceAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeInvoiceAssignmentsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeInvoiceAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceLineAssignmentsRequest">         <xsd:annotation>             <xsd:documentation>PurgeInvoiceLineAssignments.<p>      Purges all the assignments on an invoice line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that holds the invoice line we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceLine" type="inv:InvoiceLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice line to purge the assignments for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceLineAssignmentsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeInvoiceLineAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeInvoiceLineAssignmentsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeInvoiceLineAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceLineAssignmentsResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeInvoiceLineAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceLineAssignmentsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeInvoiceLineAssignments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeInvoiceLineAssignmentsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeInvoiceLineAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineAssignmentRequest">         <xsd:annotation>             <xsd:documentation>PurgeMLineAssignment.<p>      Purges the assignment for an MLine. In practice this means unsetting the InvoiceLine property      on the MLine and deleting any discrepancies we may have created for this MLine.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that holds the invoice line we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the MLine to purge the assignment for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineAssignmentRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeMLineAssignment function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeMLineAssignmentRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeMLineAssignment function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineAssignmentResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeMLineAssignment function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeMLineAssignmentResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeMLineAssignment function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeMLineAssignmentResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeMLineAssignment function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupDiscrepanciesRequest">         <xsd:annotation>             <xsd:documentation>PurgeGroupDiscrepancies.<p>      Purges all discrepancies for all invoices in the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group from which to purge discrepancies.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupDiscrepanciesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeGroupDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeGroupDiscrepanciesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeGroupDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupDiscrepanciesResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeGroupDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeGroupDiscrepanciesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeGroupDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeGroupDiscrepanciesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeGroupDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceDiscrepanciesRequest">         <xsd:annotation>             <xsd:documentation>PurgeInvoiceDiscrepancies.<p>      Purges all the discrepancies on an invoice.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that holds the invoice we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice for which to purge the discrepancies.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceDiscrepanciesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the purgeInvoiceDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PurgeInvoiceDiscrepanciesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the purgeInvoiceDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceDiscrepanciesResponse">         <xsd:annotation>             <xsd:documentation>The response of the purgeInvoiceDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PurgeInvoiceDiscrepanciesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the purgeInvoiceDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PurgeInvoiceDiscrepanciesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the purgeInvoiceDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetMLinesForInvoiceRequest">         <xsd:annotation>             <xsd:documentation>GetMLinesForInvoice.<p>      Returns the MLines for a given invoice. It will return them in a sensible order.      This will be first by invoice line and then within that it will be by discrepancy      type. This ordering will be:      <ul>                         <li/>None      <li/>Write off      <li/>Debit note      <li/>Request for credit      </ul>                 </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master to use.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one that holds the invoice we are interested in        and any other groups that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice we wish to retrieve the MLines for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetMLinesForInvoiceRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getMLinesForInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetMLinesForInvoiceRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getMLinesForInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetMLinesForInvoiceResponse">         <xsd:annotation>             <xsd:documentation>The response of the getMLinesForInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="MLine" type="group:MLine">                         <xsd:annotation>                             <xsd:documentation>The mLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetMLinesForInvoiceResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getMLinesForInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetMLinesForInvoiceResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getMLinesForInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetRequest">         <xsd:annotation>             <xsd:documentation>Get.<p>      Standard get functionality for the invoice.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>The key to the Invoice object.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetResponse">         <xsd:annotation>             <xsd:documentation>The response of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>The return value of the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the get function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetInvoicesRequest">         <xsd:annotation>             <xsd:documentation>GetInvoices.<p>      Gets a number of invoices given their keys.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="InvoiceKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key for the invoice to get.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetInvoicesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getInvoices function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetInvoicesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getInvoices function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetInvoicesResponse">         <xsd:annotation>             <xsd:documentation>The response of the getInvoices function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>The invoice is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetInvoicesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getInvoices function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetInvoicesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getInvoices function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNsRequest">         <xsd:annotation>             <xsd:documentation>GetLRNs.<p>      Gets a number of lrns given their keys.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="LrnKeyList" type="lrn:LRNKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key for the lrn to get.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetLRNsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNsResponse">         <xsd:annotation>             <xsd:documentation>The response of the getLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Lrn" type="lrn:LRN">                         <xsd:annotation>                             <xsd:documentation>The lrn is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getLRNs function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetLRNsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNLinesRequest">         <xsd:annotation>             <xsd:documentation>GetLRNLines.<p>      Gets a number of lrn lines given their keys.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="LrnLineKeyList" type="lrn:LRNLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key for the lrn line to get.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNLinesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetLRNLinesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNLinesResponse">         <xsd:annotation>             <xsd:documentation>The response of the getLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="LrnLine" type="lrn:LRNLine">                         <xsd:annotation>                             <xsd:documentation>The lrnLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetLRNLinesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetLRNLinesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAvailableLRNLinesRequest">         <xsd:annotation>             <xsd:documentation>GetAvailableLRNLines.<p>      Get the lrn lines specified by the keys. If the lrnline does not exist, nothing is returned, but no error is thrown.      This means the length of the lrn line list returned is less thans or equal to the length of the lrn line key list given.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="LrnLineKeyList" type="lrn:LRNLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key for the lrn line to get.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAvailableLRNLinesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the getAvailableLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:GetAvailableLRNLinesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the getAvailableLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAvailableLRNLinesResponse">         <xsd:annotation>             <xsd:documentation>The response of the getAvailableLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="LrnLine" type="lrn:LRNLine">                         <xsd:annotation>                             <xsd:documentation>The lrnLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="GetAvailableLRNLinesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the getAvailableLRNLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:GetAvailableLRNLinesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the getAvailableLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteGroupRequest">         <xsd:annotation>             <xsd:documentation>DeleteGroup.<p>      Deletes a group. If the group physically exists on the      database it will be deleted, otherwise it will just be      broken down into it&apos;s constituent parts. In boths cases      the invoice and lrn lines involved will be returned.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to delete.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteGroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the deleteGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:DeleteGroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the deleteGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteGroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the deleteGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>The invoice is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="LrnLine" type="lrn:LRNLine">                         <xsd:annotation>                             <xsd:documentation>The lrnLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="DeleteGroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the deleteGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:DeleteGroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the deleteGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupsRequest">         <xsd:annotation>             <xsd:documentation>SaveGroups.<p>      Saves groups to the database.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master to save the groups to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The groups to be saved to the database.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="CommitAll" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       Determines whether or not all groups should be saved or just those that are balanced        true - commit all groups        false - commit balanced groups only      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LogTitle" type="pimtypes:typePimLogtitle">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The title for the log to which this interactive       run will write.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the saveGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:SaveGroupsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the saveGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupsResponse">         <xsd:annotation>             <xsd:documentation>The response of the saveGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="FailedGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The failedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="PostFailedGroup" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The postFailedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The GroupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="PostLogs" type="matching:PostLog">                         <xsd:annotation>                             <xsd:documentation>The PostLogs is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the saveGroups function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:SaveGroupsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the saveGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupAsWIPRequest">         <xsd:annotation>             <xsd:documentation>SaveGroupAsWIP.<p>      Saves a Group as Work In Progress.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master to save the groups to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The groups to be saved to the database.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupAsWIPRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the saveGroupAsWIP function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:SaveGroupAsWIPRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the saveGroupAsWIP function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupAsWIPResponse">         <xsd:annotation>             <xsd:documentation>The response of the saveGroupAsWIP function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="SaveGroupAsWIPResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the saveGroupAsWIP function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:SaveGroupAsWIPResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the saveGroupAsWIP function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FinaliseRequest">         <xsd:annotation>             <xsd:documentation>Finalise.<p>      Function corresponding to the finalise matching button on       the interactive matching client. The user could       give the button any label, the text is set on the       matching master.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master currently in use. This could       have been edited by the user at runtime.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The groups to have be finalised.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="CommitAll" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       Determines whether or not all groups should be saved or just those that are balanced        true - commit all groups        false - commit balanced groups only       Note, this setting will be ignored unless the finalise action equals PIM_MATCHMAS_FINALISE_ASSIGN_BALANCE_AND_COMMIT       </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LogTitle" type="pimtypes:typePimLogtitle">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The title for the log to which this interactive       run will write.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FinaliseRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the finalise function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:FinaliseRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the finalise function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FinaliseResponse">         <xsd:annotation>             <xsd:documentation>The response of the finalise function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="FailedGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The failedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="CommitedGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The commitedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="UncommitedGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The uncommitedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="PostFailedGroup" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The postFailedGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The GroupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="PostLogs" type="matching:PostLog">                         <xsd:annotation>                             <xsd:documentation>The PostLogs is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="FinaliseResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the finalise function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:FinaliseResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the finalise function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesRequest">         <xsd:annotation>             <xsd:documentation>AssignLines.<p>      Runs assignment on the groups passed in.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the assignment rules defined on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The groups to run assignment upon.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the assignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:AssignLinesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the assignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesResponse">         <xsd:annotation>             <xsd:documentation>The response of the assignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the assignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:AssignLinesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the assignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesWithFilterRequest">         <xsd:annotation>             <xsd:documentation>AssignLinesWithFilter.<p>      Runs assignment on a specific group. Also the client      must pass in the objects within that group that are      allowed to be used during assignment. This is because      the user can select which invoices, invoice lines and      lrn lines should be auto grouped and which should be      left alone.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the assignment rules defined on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       run assignment on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to run assignment on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesWithFilterRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the assignLinesWithFilter function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:AssignLinesWithFilterRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the assignLinesWithFilter function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesWithFilterResponse">         <xsd:annotation>             <xsd:documentation>The response of the assignLinesWithFilter function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="AssignLinesWithFilterResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the assignLinesWithFilter function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:AssignLinesWithFilterResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the assignLinesWithFilter function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ManuallyAssignLinesRequest">         <xsd:annotation>             <xsd:documentation>ManuallyAssignLines.<p>      Runs manual assignment on the headers and lines passed in.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the assignment rules defined on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       run assignment on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to run assignment on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of invoice keys that should be used during assignment.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceLineKeyList" type="inv:InvoiceLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of invoice line keys that should be used during assignment.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineKeyList" type="group:MLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of MLine keys that should be used during assignment.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ManuallyAssignLinesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the manuallyAssignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ManuallyAssignLinesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the manuallyAssignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ManuallyAssignLinesResponse">         <xsd:annotation>             <xsd:documentation>The response of the manuallyAssignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ManuallyAssignLinesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the manuallyAssignLines function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ManuallyAssignLinesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the manuallyAssignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesWithTaxTolerancesRequest">         <xsd:annotation>             <xsd:documentation>ApplyDiscrepanciesWithTaxTolerances.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master currently in use. This could       have been edited by the user at runtime.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       apply discrepancies on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to apply discrepancies to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="DiscrepancyDetailList" type="matching:PIMMatchingApplyDiscrepanciesWithTaxTolerancesDiscrepancyDetailList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of discrepancy detail objects which describe       the discrepancies the user wishes to apply.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingApplyDiscrepanciesWithTaxTolerancesDiscrepancyDetailList">         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="1" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                 <xsd:annotation>                     <xsd:documentation>As the discrepancyDetail argument is a collection argument, this type is used to hold the instances of the discrepancyDetail argument.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesWithTaxTolerancesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyDiscrepanciesWithTaxTolerancesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesWithTaxTolerancesResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                         <xsd:annotation>                             <xsd:documentation>The discrepancyDetail is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesWithTaxTolerancesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyDiscrepanciesWithTaxTolerancesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesRequest">         <xsd:annotation>             <xsd:documentation>ApplyDiscrepancies.<p>      Applies line level discrepancies as specified by the user      to a group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       apply discrepancies on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to apply discrepancies to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="DiscrepancyDetailList" type="matching:PIMMatchingApplyDiscrepanciesDiscrepancyDetailList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of discrepancy detail objects which describe       the discrepancies the user wishes to apply.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingApplyDiscrepanciesDiscrepancyDetailList">         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="1" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                 <xsd:annotation>                     <xsd:documentation>As the discrepancyDetail argument is a collection argument, this type is used to hold the instances of the discrepancyDetail argument.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyDiscrepanciesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                         <xsd:annotation>                             <xsd:documentation>The discrepancyDetail is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDiscrepanciesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyDiscrepancies function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyDiscrepanciesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyTaxTolerancesRequest">         <xsd:annotation>             <xsd:documentation>ApplyTaxTolerances.<p>      Applies tax tolerances to the m lines in the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="EditGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to apply the tax tolerances to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of related groups.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyTaxTolerancesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyTaxTolerancesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyTaxTolerancesResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="EditGroup" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The editGroup is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyTaxTolerancesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyTaxTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyTaxTolerancesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentDiscrepancyRequest">         <xsd:annotation>             <xsd:documentation>ApplyDocumentDiscrepancy.<p>      Applies a document level discrepancy as specified by the user      to a group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       apply the discrepancy on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to apply the discrepancy to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to apply the discrepancy to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The reason code to be applied to the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="ReasonDescription" type="com:typeDescription">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The description for the reason code.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The value to apply the discrepancy for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Account" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code for the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Tax" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The tax to use for the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentDiscrepancyRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyDocumentDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyDocumentDiscrepancyRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyDocumentDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentDiscrepancyResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyDocumentDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentDiscrepancyResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyDocumentDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyDocumentDiscrepancyResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyDocumentDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithMasterRequest">         <xsd:annotation>             <xsd:documentation>CreateSundryLineWithMaster.<p>      Creates a sundry line on an invoice using the sundry      line master specified.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice we are going to add       the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The value to create the sundry line for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LineSense" type="pimtypes:typePimLineDrCrIndicator">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The sense of the line to create.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="TaxKey" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The tax to use for the sundry line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="SundryLineMaster" type="sunlinemas:SundryLineMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The sundry line master to use when creating the sundry line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithMasterRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the createSundryLineWithMaster function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CreateSundryLineWithMasterRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the createSundryLineWithMaster function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithMasterResponse">         <xsd:annotation>             <xsd:documentation>The response of the createSundryLineWithMaster function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithMasterResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the createSundryLineWithMaster function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CreateSundryLineWithMasterResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the createSundryLineWithMaster function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithAccountCodeRequest">         <xsd:annotation>             <xsd:documentation>CreateSundryLineWithAccountCode.<p>      Creates a sundry line on an invoice using the sundry      line master specified.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice we are going to add       the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The value to create the sundry line for.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LineSense" type="pimtypes:typePimLineDrCrIndicator">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The sense of the line to create.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="TaxKey" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The tax to use for the sundry line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountCode" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code to use when creating the sundry line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithAccountCodeRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the createSundryLineWithAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CreateSundryLineWithAccountCodeRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the createSundryLineWithAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithAccountCodeResponse">         <xsd:annotation>             <xsd:documentation>The response of the createSundryLineWithAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CreateSundryLineWithAccountCodeResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the createSundryLineWithAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CreateSundryLineWithAccountCodeResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the createSundryLineWithAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueRequest">         <xsd:annotation>             <xsd:documentation>CalculateTaxValue.<p>      Calculates a tax value based.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="NetValueDTO" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The net value to calculate the tax value from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="TaxKey" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the tax master to get the effective       rate from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountCode" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The       </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice for which we are calculating tax.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the calculateTaxValue function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CalculateTaxValueRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the calculateTaxValue function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueResponse">         <xsd:annotation>             <xsd:documentation>The response of the calculateTaxValue function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CalculateTaxValue" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>The return value of the calculateTaxValue function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the calculateTaxValue function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CalculateTaxValueResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the calculateTaxValue function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueForTaxBalancedInvoiceRequest">         <xsd:annotation>             <xsd:documentation>CalculateTaxValueForTaxBalancedInvoice.<p>      Calculates a tax value based.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="NetValueDTO" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The net value to calculate the tax value from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="TaxKey" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the tax master to get the effective       rate from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountCode" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The       </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice for which we are calculating tax.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueForTaxBalancedInvoiceRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CalculateTaxValueForTaxBalancedInvoiceRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueForTaxBalancedInvoiceResponse">         <xsd:annotation>             <xsd:documentation>The response of the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CalculateTaxValueForTaxBalancedInvoice" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>The return value of the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxValueForTaxBalancedInvoiceResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CalculateTaxValueForTaxBalancedInvoiceResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxForSundyLineRequest">         <xsd:annotation>             <xsd:documentation>CalculateTaxForSundyLine.<p>      Calculate the tax for a sundry line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMasterKey" type="matmas:MatchingMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to add the sundry line to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="NetValueDTO" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The net value to calculate the tax value from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="LineSense" type="pimtypes:typePimLineDrCrIndicator">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The sundry line sense.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="TaxKey" type="taxmas:TaxMasterKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the tax master to get the effective       rate from.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountCode" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code of the sundry line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxForSundyLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the calculateTaxForSundyLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CalculateTaxForSundyLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the calculateTaxForSundyLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxForSundyLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the calculateTaxForSundyLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CalculateTaxForSundyLine" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>The return value of the calculateTaxForSundyLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CalculateTaxForSundyLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the calculateTaxForSundyLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CalculateTaxForSundyLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the calculateTaxForSundyLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="BalanceUnassignedInvoiceLineRequest">         <xsd:annotation>             <xsd:documentation>BalanceUnassignedInvoiceLine.<p>      Balances an unassigned invoice line by applying      a discrepancy for the value of the line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice line we are going to balance.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice line we wish to balance.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceLineKey" type="inv:InvoiceLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice line that we wish to balance.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply to the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The reason code to be applied to the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="BalanceUnassignedInvoiceLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the balanceUnassignedInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:BalanceUnassignedInvoiceLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the balanceUnassignedInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="BalanceUnassignedInvoiceLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the balanceUnassignedInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="BalanceUnassignedInvoiceLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the balanceUnassignedInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:BalanceUnassignedInvoiceLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the balanceUnassignedInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertToSundryLineRequest">         <xsd:annotation>             <xsd:documentation>ConvertToSundryLine.<p>      Converts a matchable line to a sundry line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice line we are going to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice line we wish to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceLineKey" type="inv:InvoiceLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice line that we wish to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertToSundryLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the convertToSundryLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ConvertToSundryLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the convertToSundryLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertToSundryLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the convertToSundryLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertToSundryLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the convertToSundryLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ConvertToSundryLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the convertToSundryLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditInvoiceLineRequest">         <xsd:annotation>             <xsd:documentation>EditInvoiceLine.<p>      Applies edits made by the user on an invoice line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice line we are        editing.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceLine" type="inv:InvoiceLine">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The edited version of the invoice line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditInvoiceLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the editInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:EditInvoiceLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the editInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditInvoiceLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the editInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditInvoiceLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the editInvoiceLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:EditInvoiceLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the editInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyEditsAndToleranceCheckRequest">         <xsd:annotation>             <xsd:documentation>ApplyEditsAndToleranceCheck.<p>      Applies any edits made to the invoie lines.       Creates any discrepancies based on the discrepancy details sent.      Applies taxtolerance checking to any invoices that were altered by the above, and also ensures that       &apos;invoiceToAlwaysToleranceCheck&apos; always has tax tolerance checking done even if there were no edits to apply.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice line we are        editing.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice line we wish to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceToAlwaysToleranceCheckKeyList" type="inv:InvoiceKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to apply the discrepancy to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="InvoiceLineList" type="inv:InvoiceLineList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The edited version of the invoice line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="DiscrepancyDetailList" type="matching:PIMMatchingApplyEditsAndToleranceCheckDiscrepancyDetailList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The list of discrepancy detail objects which describe       the discrepancies the user wishes to apply.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingApplyEditsAndToleranceCheckDiscrepancyDetailList">         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                 <xsd:annotation>                     <xsd:documentation>As the discrepancyDetail argument is a collection argument, this type is used to hold the instances of the discrepancyDetail argument.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ApplyEditsAndToleranceCheckRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyEditsAndToleranceCheck function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyEditsAndToleranceCheckRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyEditsAndToleranceCheck function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyEditsAndToleranceCheckResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyEditsAndToleranceCheck function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                         <xsd:annotation>                             <xsd:documentation>The discrepancyDetail is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                         <xsd:annotation>                             <xsd:documentation>The groupError is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyEditsAndToleranceCheckResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyEditsAndToleranceCheck function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyEditsAndToleranceCheckResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyEditsAndToleranceCheck function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RefreshGroupRequest">         <xsd:annotation>             <xsd:documentation>RefreshGroup.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to refresh.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RefreshGroupRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the refreshGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:RefreshGroupRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the refreshGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RefreshGroupResponse">         <xsd:annotation>             <xsd:documentation>The response of the refreshGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="RefreshGroupResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the refreshGroup function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:RefreshGroupResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the refreshGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditMLineRequest">         <xsd:annotation>             <xsd:documentation>EditMLine.<p>      Applies edits made by the user on an MLine.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the Mine we are        editing.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLine">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The edited version of the MLine.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditMLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the editMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:EditMLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the editMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditMLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the editMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="EditMLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the editMLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:EditMLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the editMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckDocumentTolerancesRequest">         <xsd:annotation>             <xsd:documentation>CheckDocumentTolerances.<p>      Checks document level tolerances for a given discrepancy and invoice.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="User" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>      The user whose tolerances we are going to check.     </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DiscrepancyType" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to apply the tax tolerances to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Company" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice ID.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceID" type="com:typeDbGuid">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice ID.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DiscrepancyValue" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The discrepancy value.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckDocumentTolerancesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the checkDocumentTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CheckDocumentTolerancesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the checkDocumentTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckDocumentTolerancesResponse">         <xsd:annotation>             <xsd:documentation>The response of the checkDocumentTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CheckDocumentTolerances" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>The return value of the checkDocumentTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckDocumentTolerancesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the checkDocumentTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CheckDocumentTolerancesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the checkDocumentTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckLineTolerancesRequest">         <xsd:annotation>             <xsd:documentation>CheckLineTolerances.<p>      Checks line level tolerances for a given discrepancy and invoice line.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="User" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>      The user whose tolerances we are going to check.     </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DiscrepancyType" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to apply the tax tolerances to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Company" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice ID.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MLineID" type="com:typeDbGuid">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The discrepancy mLine ID.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckLineTolerancesRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the checkLineTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:CheckLineTolerancesRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the checkLineTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckLineTolerancesResponse">         <xsd:annotation>             <xsd:documentation>The response of the checkLineTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="CheckLineTolerances" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>The return value of the checkLineTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CheckLineTolerancesResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the checkLineTolerances function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:CheckLineTolerancesResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the checkLineTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateLRNLineCommentsRequest">         <xsd:annotation>             <xsd:documentation>UpdateLRNLineComments.<p>      Update the additive comments on an LRN Line. Return the LRNLine time stamp.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="LrnLineKey" type="lrn:LRNLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The LRN Line key.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="CommentsList" type="cmt:CommentList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The comments.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateLRNLineCommentsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the updateLRNLineComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:UpdateLRNLineCommentsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the updateLRNLineComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateLRNLineCommentsResponse">         <xsd:annotation>             <xsd:documentation>The response of the updateLRNLineComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="UpdateLRNLineComments" type="com:typeUWord">                         <xsd:annotation>                             <xsd:documentation>The return value of the updateLRNLineComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Comments" type="cmt:Comment">                         <xsd:annotation>                             <xsd:documentation>The Comments is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateLRNLineCommentsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the updateLRNLineComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:UpdateLRNLineCommentsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the updateLRNLineComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateInvoiceHeaderPrintableCommentsRequest">         <xsd:annotation>             <xsd:documentation>UpdateInvoiceHeaderPrintableComments.<p>      Update the printable comments on an Invoice Header. Return the Invoice time stamp.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice key.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="PrintableCommentList" type="matching:PIMMatchingUpdateInvoiceHeaderPrintableCommentsPrintableCommentList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The printable comments.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingUpdateInvoiceHeaderPrintableCommentsPrintableCommentList">         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="1" name="PrintableComment" type="com:typeTextB">                 <xsd:annotation>                     <xsd:documentation>As the printableComment argument is a collection argument, this type is used to hold the instances of the printableComment argument.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="UpdateInvoiceHeaderPrintableCommentsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the updateInvoiceHeaderPrintableComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:UpdateInvoiceHeaderPrintableCommentsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the updateInvoiceHeaderPrintableComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateInvoiceHeaderPrintableCommentsResponse">         <xsd:annotation>             <xsd:documentation>The response of the updateInvoiceHeaderPrintableComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="UpdateInvoiceHeaderPrintableComments" type="com:typeUWord">                         <xsd:annotation>                             <xsd:documentation>The return value of the updateInvoiceHeaderPrintableComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="PrintableComment" type="com:typeTextB">                         <xsd:annotation>                             <xsd:documentation>The printableComment is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="UpdateInvoiceHeaderPrintableCommentsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the updateInvoiceHeaderPrintableComments function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:UpdateInvoiceHeaderPrintableCommentsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the updateInvoiceHeaderPrintableComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="IsInvoiceGreaterThanReceiptRequest">         <xsd:annotation>             <xsd:documentation>IsInvoiceGreaterThanReceipt.<p>      Is the invoice greater than the total receipt value assigned to it? Note this could come from several LRN&apos;s.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group to which the invoice belongs.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice key.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="IsInvoiceGreaterThanReceiptRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the isInvoiceGreaterThanReceipt function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:IsInvoiceGreaterThanReceiptRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the isInvoiceGreaterThanReceipt function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="IsInvoiceGreaterThanReceiptResponse">         <xsd:annotation>             <xsd:documentation>The response of the isInvoiceGreaterThanReceipt function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="IsInvoiceGreaterThanReceipt" type="com:typeBoolean">                         <xsd:annotation>                             <xsd:documentation>The return value of the isInvoiceGreaterThanReceipt function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="IsInvoiceGreaterThanReceiptResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the isInvoiceGreaterThanReceipt function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:IsInvoiceGreaterThanReceiptResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the isInvoiceGreaterThanReceipt function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewDebitNoteRequest">         <xsd:annotation>             <xsd:documentation>PreviewDebitNote.<p>      Create a debit note from a given invoice which is not committed       to the database. i.e. a copy of the debit note which will be       created when the discrepancies are resloved on commit.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewDebitNoteRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the previewDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PreviewDebitNoteRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the previewDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewDebitNoteResponse">         <xsd:annotation>             <xsd:documentation>The response of the previewDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="Debitnote" type="dbn:DebitNote">                         <xsd:annotation>                             <xsd:documentation>The debitnote is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewDebitNoteResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the previewDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PreviewDebitNoteResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the previewDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewGroupLevelDebitNoteRequest">         <xsd:annotation>             <xsd:documentation>PreviewGroupLevelDebitNote.<p>      Create a group level debit note from a given invoice list which is not committed       to the database. i.e. a copy of the debit note which will be       created when the discrepancies are resloved on commit.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       List of groups including the one we are interested in and       any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewGroupLevelDebitNoteRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the previewGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:PreviewGroupLevelDebitNoteRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the previewGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewGroupLevelDebitNoteResponse">         <xsd:annotation>             <xsd:documentation>The response of the previewGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="Debitnote" type="dbn:DebitNote">                         <xsd:annotation>                             <xsd:documentation>The debitnote is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="DebitNoteMLine" type="group:MLine">                         <xsd:annotation>                             <xsd:documentation>The debitNoteMLine is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PreviewGroupLevelDebitNoteResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the previewGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:PreviewGroupLevelDebitNoteResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the previewGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateGroupLevelDebitNoteRequest">         <xsd:annotation>             <xsd:documentation>ValidateGroupLevelDebitNote.<p>      Validate a group level debit note.      </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="MlinesList" type="group:MLineList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Debitnote" type="dbn:DebitNote">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The debit note.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DebitnoteEdits" type="group:GroupLevelDebitNoteEdits">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The debit note edits (user editable stuff).      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateGroupLevelDebitNoteRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the validateGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ValidateGroupLevelDebitNoteRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the validateGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateGroupLevelDebitNoteResponse">         <xsd:annotation>             <xsd:documentation>The response of the validateGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence/>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateGroupLevelDebitNoteResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the validateGroupLevelDebitNote function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ValidateGroupLevelDebitNoteResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the validateGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateDiscrepancyTaxDetailsRequest">         <xsd:annotation>             <xsd:documentation>ValidateDiscrepancyTaxDetails.<p>     Checks to ensure that the sum of the net values for the debit     note and RFC mlines is equal to the sum of all the goods line     values entered against each tax code.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>      List of groups including the one we are interested in and      any others that it may reference directly or indirectly.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Invoice" type="inv:Invoice">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The invoice to be validated.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateDiscrepancyTaxDetailsRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the validateDiscrepancyTaxDetails function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ValidateDiscrepancyTaxDetailsRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the validateDiscrepancyTaxDetails function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateDiscrepancyTaxDetailsResponse">         <xsd:annotation>             <xsd:documentation>The response of the validateDiscrepancyTaxDetails function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ValidateDiscrepancyTaxDetailsResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the validateDiscrepancyTaxDetails function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ValidateDiscrepancyTaxDetailsResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the validateDiscrepancyTaxDetails function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeLightRequest">         <xsd:annotation>             <xsd:documentation>ResolveAccountCodeLight.<p>      Resolve an account code that may contain soft mapping/wildcards.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="SoftAccount" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code to resolve.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="CompanyCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DocumentNumber" type="com:typeDocNumAlpha">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DocumentMaster" type="docmas:DocumentMasterKey">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="SupplierCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="DepartmentCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement1" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement2" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement3" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement4" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement5" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="UdfElement6" type="com:typeElmCodeB">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeLightRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the resolveAccountCodeLight function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ResolveAccountCodeLightRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the resolveAccountCodeLight function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeLightResponse">         <xsd:annotation>             <xsd:documentation>The response of the resolveAccountCodeLight function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="SoftAccount" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>The softAccount is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeLightResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the resolveAccountCodeLight function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ResolveAccountCodeLightResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the resolveAccountCodeLight function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeRequest">         <xsd:annotation>             <xsd:documentation>ResolveAccountCode.<p>      Resolve an account code that may contain soft mapping/wildcards.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one we are going to       apply the discrepancy on and any other groups that it relates to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that we wish to apply the discrepancy to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to apply the discrepancy to.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="SoftAccount" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code to resolve.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the resolveAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ResolveAccountCodeRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the resolveAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeResponse">         <xsd:annotation>             <xsd:documentation>The response of the resolveAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="SoftAccount" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>The softAccount is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ResolveAccountCodeResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the resolveAccountCode function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ResolveAccountCodeResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the resolveAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ChangeDiscrepancyRequest">         <xsd:annotation>             <xsd:documentation>ChangeDiscrepancy.<p>      Change the discrepancy type of a given discrepancy.  The ID of the discrepancy line      with the new type will not be the same as the mline id passed     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="DiscrepancyMLine" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The ID of the discrepancy MLine to change.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="User" type="pimusr:UserKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The User requesting the change.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The reason code for the new discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Comment" type="com:typeTextB">                         <xsd:annotation>                             <xsd:documentation>                                 <p>        User added comment when the discrepancy is changed.       </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ChangeDiscrepancyRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the changeDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ChangeDiscrepancyRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the changeDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ChangeDiscrepancyResponse">         <xsd:annotation>             <xsd:documentation>The response of the changeDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence/>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ChangeDiscrepancyResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the changeDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ChangeDiscrepancyResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the changeDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentTotalToLineDiscrepancyRequest">         <xsd:annotation>             <xsd:documentation>ApplyDocumentTotalToLineDiscrepancy.<p>      Applies a document level discrepancy total across all the selected lines. Each line      getting a proportion of the total. The account mask is used to filter out valid lines      from those passed into the service, as well as some hard rules.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group we are going to apply the discrepancy on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceKey" type="inv:InvoiceKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice that we wish to apply the discrepancy to. The account mask must also be passed       in to pick out which lines will have the discreapancy applied.              NB - invoiceKey and MLineKey are mutually exclusive, an error will be thrown if they are both passed in.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineKeyKeyList" type="group:MLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys of the mlines that we want to attach a discrepancy to. The account mask is not used if these are passed in.              NB - invoiceKey and MLineKey are mutually exclusive, an error will be thrown if they are both passed in.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The reason code to be applied to the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="ReasonDescription" type="com:typeDescription">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The description for the reason code.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The overall discrepancy value to split across the lines.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Account" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code to be applied to each discrepancy line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountMask" type="com:typeText">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account mask useed to select the actual lines to be used.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Comment" type="com:typeTextB">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       An optional comment to be added to each discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentTotalToLineDiscrepancyRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyDocumentTotalToLineDiscrepancyRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentTotalToLineDiscrepancyResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="DiscrepancyLinesKey" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>The discrepancyLines is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Warnings" type="matching:DocumentToLineDiscrepancyWarning">                         <xsd:annotation>                             <xsd:documentation>The warnings is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyDocumentTotalToLineDiscrepancyResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyDocumentTotalToLineDiscrepancyResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyGroupTotalToLineDiscrepancyRequest">         <xsd:annotation>             <xsd:documentation>ApplyGroupTotalToLineDiscrepancy.<p>      Applies a group level discrepancy total across all the selected lines. Each line      getting a proportion of the total. The account mask is used to filter out valid lines      from those passed into the service, as well as some hard rules.            Specific lines can either be passed in, or it will default to all lines in the group.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master with the reason codes defined.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The group we are going to apply the discrepancy on.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="MLineKeyKeyList" type="group:MLineKeyList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The keys of the mlines that we want to attach a discrepancy to. The account mask is not used if these are passed in.              NB - invoiceKey and MLineKey are mutually exclusive, an error will be thrown if they are both passed in.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ResolutionMethod" type="pimtypes:typePimMlineDiscrepancy">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The resolution method to apply, i.e. write-off, debit note or RFC.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The reason code to be applied to the discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="ReasonDescription" type="com:typeDescription">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The description for the reason code.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The overall discrepancy value to split across the lines.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="Account" type="pimtypes:typePimAccountCode">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account code to be applied to each discrepancy line.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="AccountMask" type="com:typeText">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The account mask useed to select the actual lines to be used.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="0" name="Comment" type="com:typeTextB">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       An optional comment to be added to each discrepancy.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyGroupTotalToLineDiscrepancyRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ApplyGroupTotalToLineDiscrepancyRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyGroupTotalToLineDiscrepancyResponse">         <xsd:annotation>             <xsd:documentation>The response of the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="DiscrepancyLinesKey" type="group:MLineKey">                         <xsd:annotation>                             <xsd:documentation>The discrepancyLines is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Warnings" type="matching:DocumentToLineDiscrepancyWarning">                         <xsd:annotation>                             <xsd:documentation>The warnings is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ApplyGroupTotalToLineDiscrepancyResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ApplyGroupTotalToLineDiscrepancyResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertSundryLineToMatchableLineRequest">         <xsd:annotation>             <xsd:documentation>ConvertSundryLineToMatchableLine.<p>      Converts a sundry line to a matchable line     </p>                 <p>      Provides an undo service for the conversion of a matchable line to a sundry line     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="GroupList" type="group:GroupList">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       A list of groups. It should contain the one with the invoice line we are going to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the group that contains the invoice line we wish to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="InvoiceLineKey" type="inv:InvoiceLineKey">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The key to the invoice line that we wish to convert.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element maxOccurs="1" minOccurs="1" name="MatchingMaster" type="matmas:MatchingMaster">                         <xsd:annotation>                             <xsd:documentation>                                 <p>       The matching master.      </p>                             </xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertSundryLineToMatchableLineRequestVerb">         <xsd:annotation>             <xsd:documentation>The request of the convertSundryLineToMatchableLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Request" type="matching:ConvertSundryLineToMatchableLineRequest">                         <xsd:annotation>                             <xsd:documentation>The details of the request for the convertSundryLineToMatchableLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertSundryLineToMatchableLineResponse">         <xsd:annotation>             <xsd:documentation>The response of the convertSundryLineToMatchableLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="1" name="Group" type="group:Group">                         <xsd:annotation>                             <xsd:documentation>The group is an out argument, so the server will put it here.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="ConvertSundryLineToMatchableLineResponseVerb">         <xsd:annotation>             <xsd:documentation>The response verb of the convertSundryLineToMatchableLine function.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="matching:ConvertSundryLineToMatchableLineResponse">                         <xsd:annotation>                             <xsd:documentation>The details of the response for the convertSundryLineToMatchableLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingRequest">         <xsd:annotation>             <xsd:appinfo build:funcSecValue="809" build:readOnly="true"/>             <xsd:documentation>The PIMMatching service request.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ServiceRequest">                 <xsd:sequence>                     <xsd:element minOccurs="0" name="RunBackgroundMatching" type="matching:RunBackgroundMatchingRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="1" build:readOnly="false"/>                             <xsd:documentation>The request to the runBackgroundMatching function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetWIPGroups" type="matching:GetWIPGroupsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="2" build:readOnly="true"/>                             <xsd:documentation>The request to the getWIPGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateGroupForSingleInvoice" type="matching:CreateGroupForSingleInvoiceRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="3" build:readOnly="false"/>                             <xsd:documentation>The request to the createGroupForSingleInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateGroup" type="matching:CreateGroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="4" build:readOnly="false"/>                             <xsd:documentation>The request to the createGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AddToGroup" type="matching:AddToGroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="5" build:readOnly="false"/>                             <xsd:documentation>The request to the addToGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="MoveGroupMembers" type="matching:MoveGroupMembersRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="6" build:readOnly="false"/>                             <xsd:documentation>The request to the moveGroupMembers function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetAssociatedLRNs" type="matching:GetAssociatedLRNsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="7" build:readOnly="true"/>                             <xsd:documentation>The request to the getAssociatedLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateUngroup" type="matching:ValidateUngroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="8" build:readOnly="true"/>                             <xsd:documentation>The request to the validateUngroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Ungroup" type="matching:UngroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="9" build:readOnly="false"/>                             <xsd:documentation>The request to the ungroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SplitLine" type="matching:SplitLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="10" build:readOnly="false"/>                             <xsd:documentation>The request to the splitLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeMLine" type="matching:PurgeMLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="11" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeGroupAssignments" type="matching:PurgeGroupAssignmentsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="56" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeGroupAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceAssignments" type="matching:PurgeInvoiceAssignmentsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="12" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeInvoiceAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceLineAssignments" type="matching:PurgeInvoiceLineAssignmentsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="13" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeInvoiceLineAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeMLineAssignment" type="matching:PurgeMLineAssignmentRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="14" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeMLineAssignment function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeGroupDiscrepancies" type="matching:PurgeGroupDiscrepanciesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="57" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeGroupDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceDiscrepancies" type="matching:PurgeInvoiceDiscrepanciesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="58" build:readOnly="false"/>                             <xsd:documentation>The request to the purgeInvoiceDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetMLinesForInvoice" type="matching:GetMLinesForInvoiceRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="15" build:readOnly="true"/>                             <xsd:documentation>The request to the getMLinesForInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Get" type="matching:GetRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="16" build:readOnly="true"/>                             <xsd:documentation>The request to the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetInvoices" type="matching:GetInvoicesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="17" build:readOnly="true"/>                             <xsd:documentation>The request to the getInvoices function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetLRNs" type="matching:GetLRNsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="18" build:readOnly="true"/>                             <xsd:documentation>The request to the getLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetLRNLines" type="matching:GetLRNLinesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="19" build:readOnly="true"/>                             <xsd:documentation>The request to the getLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetAvailableLRNLines" type="matching:GetAvailableLRNLinesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="20" build:readOnly="true"/>                             <xsd:documentation>The request to the getAvailableLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="DeleteGroup" type="matching:DeleteGroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="21" build:readOnly="false"/>                             <xsd:documentation>The request to the deleteGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SaveGroups" type="matching:SaveGroupsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="22" build:readOnly="false"/>                             <xsd:documentation>The request to the saveGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SaveGroupAsWIP" type="matching:SaveGroupAsWIPRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="23" build:readOnly="false"/>                             <xsd:documentation>The request to the saveGroupAsWIP function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Finalise" type="matching:FinaliseRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="24" build:readOnly="false"/>                             <xsd:documentation>The request to the finalise function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AssignLines" type="matching:AssignLinesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="25" build:readOnly="false"/>                             <xsd:documentation>The request to the assignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AssignLinesWithFilter" type="matching:AssignLinesWithFilterRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="26" build:readOnly="false"/>                             <xsd:documentation>The request to the assignLinesWithFilter function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ManuallyAssignLines" type="matching:ManuallyAssignLinesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="27" build:readOnly="false"/>                             <xsd:documentation>The request to the manuallyAssignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDiscrepanciesWithTaxTolerances" type="matching:ApplyDiscrepanciesWithTaxTolerancesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="54" build:readOnly="false"/>                             <xsd:documentation>The request to the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDiscrepancies" type="matching:ApplyDiscrepanciesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="28" build:readOnly="false"/>                             <xsd:documentation>The request to the applyDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyTaxTolerances" type="matching:ApplyTaxTolerancesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="39" build:readOnly="false"/>                             <xsd:documentation>The request to the applyTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDocumentDiscrepancy" type="matching:ApplyDocumentDiscrepancyRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="29" build:readOnly="false"/>                             <xsd:documentation>The request to the applyDocumentDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateSundryLineWithMaster" type="matching:CreateSundryLineWithMasterRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="30" build:readOnly="false"/>                             <xsd:documentation>The request to the createSundryLineWithMaster function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateSundryLineWithAccountCode" type="matching:CreateSundryLineWithAccountCodeRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="31" build:readOnly="false"/>                             <xsd:documentation>The request to the createSundryLineWithAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxValue" type="matching:CalculateTaxValueRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="32" build:readOnly="false"/>                             <xsd:documentation>The request to the calculateTaxValue function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxValueForTaxBalancedInvoice" type="matching:CalculateTaxValueForTaxBalancedInvoiceRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="33" build:readOnly="false"/>                             <xsd:documentation>The request to the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxForSundyLine" type="matching:CalculateTaxForSundyLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="34" build:readOnly="false"/>                             <xsd:documentation>The request to the calculateTaxForSundyLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="BalanceUnassignedInvoiceLine" type="matching:BalanceUnassignedInvoiceLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="35" build:readOnly="false"/>                             <xsd:documentation>The request to the balanceUnassignedInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ConvertToSundryLine" type="matching:ConvertToSundryLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="36" build:readOnly="false"/>                             <xsd:documentation>The request to the convertToSundryLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="EditInvoiceLine" type="matching:EditInvoiceLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="37" build:readOnly="false"/>                             <xsd:documentation>The request to the editInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyEditsAndToleranceCheck" type="matching:ApplyEditsAndToleranceCheckRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="59" build:readOnly="false"/>                             <xsd:documentation>The request to the applyEditsAndToleranceCheck function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="RefreshGroup" type="matching:RefreshGroupRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="60" build:readOnly="false"/>                             <xsd:documentation>The request to the refreshGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="EditMLine" type="matching:EditMLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="38" build:readOnly="false"/>                             <xsd:documentation>The request to the editMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CheckDocumentTolerances" type="matching:CheckDocumentTolerancesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="40" build:readOnly="true"/>                             <xsd:documentation>The request to the checkDocumentTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CheckLineTolerances" type="matching:CheckLineTolerancesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="41" build:readOnly="true"/>                             <xsd:documentation>The request to the checkLineTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="UpdateLRNLineComments" type="matching:UpdateLRNLineCommentsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="42" build:readOnly="false"/>                             <xsd:documentation>The request to the updateLRNLineComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="UpdateInvoiceHeaderPrintableComments" type="matching:UpdateInvoiceHeaderPrintableCommentsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="43" build:readOnly="false"/>                             <xsd:documentation>The request to the updateInvoiceHeaderPrintableComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="IsInvoiceGreaterThanReceipt" type="matching:IsInvoiceGreaterThanReceiptRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="44" build:readOnly="true"/>                             <xsd:documentation>The request to the isInvoiceGreaterThanReceipt function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PreviewDebitNote" type="matching:PreviewDebitNoteRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="45" build:readOnly="true"/>                             <xsd:documentation>The request to the previewDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PreviewGroupLevelDebitNote" type="matching:PreviewGroupLevelDebitNoteRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="51" build:readOnly="true"/>                             <xsd:documentation>The request to the previewGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateGroupLevelDebitNote" type="matching:ValidateGroupLevelDebitNoteRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="52" build:readOnly="true"/>                             <xsd:documentation>The request to the validateGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateDiscrepancyTaxDetails" type="matching:ValidateDiscrepancyTaxDetailsRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="46" build:readOnly="true"/>                             <xsd:documentation>The request to the validateDiscrepancyTaxDetails function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ResolveAccountCodeLight" type="matching:ResolveAccountCodeLightRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="53" build:readOnly="false"/>                             <xsd:documentation>The request to the resolveAccountCodeLight function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ResolveAccountCode" type="matching:ResolveAccountCodeRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="47" build:readOnly="false"/>                             <xsd:documentation>The request to the resolveAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ChangeDiscrepancy" type="matching:ChangeDiscrepancyRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="48" build:readOnly="false"/>                             <xsd:documentation>The request to the changeDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDocumentTotalToLineDiscrepancy" type="matching:ApplyDocumentTotalToLineDiscrepancyRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="49" build:readOnly="false"/>                             <xsd:documentation>The request to the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyGroupTotalToLineDiscrepancy" type="matching:ApplyGroupTotalToLineDiscrepancyRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="50" build:readOnly="false"/>                             <xsd:documentation>The request to the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ConvertSundryLineToMatchableLine" type="matching:ConvertSundryLineToMatchableLineRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="55" build:readOnly="false"/>                             <xsd:documentation>The request to the convertSundryLineToMatchableLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="PIMMatchingResponse">         <xsd:annotation>             <xsd:documentation>The PIMMatching service response.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ServiceResponse">                 <xsd:sequence>                     <xsd:element minOccurs="0" name="RunBackgroundMatching" type="matching:RunBackgroundMatchingResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the runBackgroundMatching function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetWIPGroups" type="matching:GetWIPGroupsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getWIPGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateGroupForSingleInvoice" type="matching:CreateGroupForSingleInvoiceResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the createGroupForSingleInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateGroup" type="matching:CreateGroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the createGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AddToGroup" type="matching:AddToGroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the addToGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="MoveGroupMembers" type="matching:MoveGroupMembersResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the moveGroupMembers function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetAssociatedLRNs" type="matching:GetAssociatedLRNsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getAssociatedLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateUngroup" type="matching:ValidateUngroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the validateUngroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Ungroup" type="matching:UngroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the ungroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SplitLine" type="matching:SplitLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the splitLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeMLine" type="matching:PurgeMLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeGroupAssignments" type="matching:PurgeGroupAssignmentsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeGroupAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceAssignments" type="matching:PurgeInvoiceAssignmentsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeInvoiceAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceLineAssignments" type="matching:PurgeInvoiceLineAssignmentsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeInvoiceLineAssignments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeMLineAssignment" type="matching:PurgeMLineAssignmentResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeMLineAssignment function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeGroupDiscrepancies" type="matching:PurgeGroupDiscrepanciesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeGroupDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PurgeInvoiceDiscrepancies" type="matching:PurgeInvoiceDiscrepanciesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the purgeInvoiceDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetMLinesForInvoice" type="matching:GetMLinesForInvoiceResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getMLinesForInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Get" type="matching:GetResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the get function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetInvoices" type="matching:GetInvoicesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getInvoices function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetLRNs" type="matching:GetLRNsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getLRNs function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetLRNLines" type="matching:GetLRNLinesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="GetAvailableLRNLines" type="matching:GetAvailableLRNLinesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the getAvailableLRNLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="DeleteGroup" type="matching:DeleteGroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the deleteGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SaveGroups" type="matching:SaveGroupsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the saveGroups function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="SaveGroupAsWIP" type="matching:SaveGroupAsWIPResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the saveGroupAsWIP function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="Finalise" type="matching:FinaliseResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the finalise function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AssignLines" type="matching:AssignLinesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the assignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="AssignLinesWithFilter" type="matching:AssignLinesWithFilterResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the assignLinesWithFilter function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ManuallyAssignLines" type="matching:ManuallyAssignLinesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the manuallyAssignLines function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDiscrepanciesWithTaxTolerances" type="matching:ApplyDiscrepanciesWithTaxTolerancesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyDiscrepanciesWithTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDiscrepancies" type="matching:ApplyDiscrepanciesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyDiscrepancies function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyTaxTolerances" type="matching:ApplyTaxTolerancesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyTaxTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDocumentDiscrepancy" type="matching:ApplyDocumentDiscrepancyResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyDocumentDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateSundryLineWithMaster" type="matching:CreateSundryLineWithMasterResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the createSundryLineWithMaster function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CreateSundryLineWithAccountCode" type="matching:CreateSundryLineWithAccountCodeResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the createSundryLineWithAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxValue" type="matching:CalculateTaxValueResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the calculateTaxValue function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxValueForTaxBalancedInvoice" type="matching:CalculateTaxValueForTaxBalancedInvoiceResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the calculateTaxValueForTaxBalancedInvoice function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CalculateTaxForSundyLine" type="matching:CalculateTaxForSundyLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the calculateTaxForSundyLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="BalanceUnassignedInvoiceLine" type="matching:BalanceUnassignedInvoiceLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the balanceUnassignedInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ConvertToSundryLine" type="matching:ConvertToSundryLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the convertToSundryLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="EditInvoiceLine" type="matching:EditInvoiceLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the editInvoiceLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyEditsAndToleranceCheck" type="matching:ApplyEditsAndToleranceCheckResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyEditsAndToleranceCheck function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="RefreshGroup" type="matching:RefreshGroupResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the refreshGroup function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="EditMLine" type="matching:EditMLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the editMLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CheckDocumentTolerances" type="matching:CheckDocumentTolerancesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the checkDocumentTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="CheckLineTolerances" type="matching:CheckLineTolerancesResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the checkLineTolerances function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="UpdateLRNLineComments" type="matching:UpdateLRNLineCommentsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the updateLRNLineComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="UpdateInvoiceHeaderPrintableComments" type="matching:UpdateInvoiceHeaderPrintableCommentsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the updateInvoiceHeaderPrintableComments function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="IsInvoiceGreaterThanReceipt" type="matching:IsInvoiceGreaterThanReceiptResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the isInvoiceGreaterThanReceipt function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PreviewDebitNote" type="matching:PreviewDebitNoteResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the previewDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="PreviewGroupLevelDebitNote" type="matching:PreviewGroupLevelDebitNoteResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the previewGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateGroupLevelDebitNote" type="matching:ValidateGroupLevelDebitNoteResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the validateGroupLevelDebitNote function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ValidateDiscrepancyTaxDetails" type="matching:ValidateDiscrepancyTaxDetailsResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the validateDiscrepancyTaxDetails function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ResolveAccountCodeLight" type="matching:ResolveAccountCodeLightResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the resolveAccountCodeLight function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ResolveAccountCode" type="matching:ResolveAccountCodeResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the resolveAccountCode function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ChangeDiscrepancy" type="matching:ChangeDiscrepancyResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the changeDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyDocumentTotalToLineDiscrepancy" type="matching:ApplyDocumentTotalToLineDiscrepancyResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyDocumentTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ApplyGroupTotalToLineDiscrepancy" type="matching:ApplyGroupTotalToLineDiscrepancyResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the applyGroupTotalToLineDiscrepancy function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element minOccurs="0" name="ConvertSundryLineToMatchableLine" type="matching:ConvertSundryLineToMatchableLineResponseVerb">                         <xsd:annotation>                             <xsd:documentation>The response from the convertSundryLineToMatchableLine function.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>          <xsd:element name="PIMMatchingRequest" type="matching:PIMMatchingRequest">         <xsd:annotation>             <xsd:documentation>The Root element for the PIMMatching service request</xsd:documentation>         </xsd:annotation>     </xsd:element>     <xsd:element name="PIMMatchingResponse" type="matching:PIMMatchingResponse">         <xsd:annotation>             <xsd:documentation>The Root element for the PIMMatching service response</xsd:documentation>         </xsd:annotation>     </xsd:element>                                                                                           <xsd:complexType name="PostLog">         <xsd:annotation>             <xsd:documentation>                 <p>     provides log title mapped to the group it refers to.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                 <xsd:annotation>                     <xsd:documentation>                         <p>      Unique ID for the group that has suffered the problem(s)     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="LogTitle" type="com:typeText">                 <xsd:annotation>                     <xsd:documentation>                         <p>      the log title.      </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="PostLogList">         <xsd:annotation>             <xsd:documentation>A list of PostLogs.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="PostLog" type="matching:PostLog">                 <xsd:annotation>                     <xsd:documentation>A single PostLog item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="MLineMoveDefinition">         <xsd:annotation>             <xsd:documentation>                 <p>     Base struct that defines the a list of M lines that are     to move from the source Group to the target Group    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="matching:MoveDefinition">                 <xsd:sequence>                                          <xsd:element name="MLineList" type="group:MLineList">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="MLineMoveDefinitionList">         <xsd:annotation>             <xsd:documentation>A list of MLineMoveDefinitions.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="MLineMoveDefinition" type="matching:MLineMoveDefinition">                 <xsd:annotation>                     <xsd:documentation>A single MLineMoveDefinition item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="InvoiceMoveDefinition">         <xsd:annotation>             <xsd:documentation>                 <p>     Base struct that defines the a list of Invoices that are     to move from the source Group to the target Group    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="matching:MoveDefinition">                 <xsd:sequence>                                          <xsd:element name="InvoiceList" type="inv:InvoiceList">                         <xsd:annotation>                             <xsd:documentation/>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="InvoiceMoveDefinitionList">         <xsd:annotation>             <xsd:documentation>A list of InvoiceMoveDefinitions.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="InvoiceMoveDefinition" type="matching:InvoiceMoveDefinition">                 <xsd:annotation>                     <xsd:documentation>A single InvoiceMoveDefinition item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="MoveDefinition">         <xsd:annotation>             <xsd:documentation>                 <p>     Base struct that defines the movement of members between 2 groups    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="SourceGroupId" type="com:typeDbGuid">                 <xsd:annotation>                     <xsd:documentation>                         <p>A unique ID used internally by Coda to identify the source group.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="TargetGroupId" type="com:typeDbGuid">                 <xsd:annotation>                     <xsd:documentation>                         <p>A unique ID used internally by Coda to identify the target group.</p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="MoveDefinitionList">         <xsd:annotation>             <xsd:documentation>A list of MoveDefinitions.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="MoveDefinition" type="matching:MoveDefinition">                 <xsd:annotation>                     <xsd:documentation>A single MoveDefinition item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="LRNMLineAssociation">         <xsd:annotation>             <xsd:documentation>                 <p>     Structure that explicitly links an LRN to the MLines it     refers to via its lines.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="LRN" type="lrn:LRN">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The LRN.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element name="MLineList" type="group:MLineList">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The list of MLines associated with the LRN.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="LRNMLineAssociationList">         <xsd:annotation>             <xsd:documentation>A list of LRNMLineAssociations.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="LRNMLineAssociation" type="matching:LRNMLineAssociation">                 <xsd:annotation>                     <xsd:documentation>A single LRNMLineAssociation item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="GroupError">         <xsd:annotation>             <xsd:documentation>                 <p>     Wraps up 1 or more validation errors and links them to a specific Group ID.     </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="GroupKey" type="group:GroupKey">                 <xsd:annotation>                     <xsd:documentation>                         <p>      Unique ID for the group that has suffered the problem(s)     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="ValidationError" type="matching:ValidationError">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The reason for the error.      </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="GroupErrorList">         <xsd:annotation>             <xsd:documentation>A list of GroupErrors.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupError" type="matching:GroupError">                 <xsd:annotation>                     <xsd:documentation>A single GroupError item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="DiscrepancyDetail">         <xsd:annotation>             <xsd:documentation>                 <p>     Holds the information regarding a discrepancy the user     wishes to apply.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLineKey">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The key to the MLine to apply the discrepancy to.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Value" type="com:Money">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The new value the user has entered.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Quantity" type="com:typeNumber">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The new quantity the user has entered.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="UnitPrice" type="com:Money">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The new unit price the user has entered.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Discrepancy" type="pimtypes:typePimMlineDiscrepancy">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The discrepancy to apply, i.e. price, quantity or      value.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="ReasonCode" type="com:typeCodeB">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The reason code to be applied, if any.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="ReasonDescription" type="com:typeDescription">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The reason description (optional).     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Comment" type="com:typeTextB">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The comment applied to this discrepancy.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="AccountFailure" type="com:typeBoolean">                 <xsd:annotation>                     <xsd:documentation>                         <p>      True if we failed to resolve an account for the discrepancy when we tried to apply it.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="FailedAccountMask" type="pimtypes:typeAccodeWildNull">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The account mask we failed to resolve.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="0" name="Account" type="pimtypes:typePimAccountCode">                 <xsd:annotation>                     <xsd:documentation>                         <p>      Optional account code to use for the discrepancy.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="DiscrepancyDetailList">         <xsd:annotation>             <xsd:documentation>A list of DiscrepancyDetails.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="DiscrepancyDetail" type="matching:DiscrepancyDetail">                 <xsd:annotation>                     <xsd:documentation>A single DiscrepancyDetail item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="ValidationError">         <xsd:annotation>             <xsd:documentation>                 <p>     Holds a number of Reason codes that describe problems/exceptions    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element name="TextList" type="matching:ValidationErrorTextList">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The Reason code     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element name="PathList" type="matching:ValidationErrorPathList">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The XPath to the element that is at fault     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element name="HintList" type="matching:ValidationErrorHintList">                 <xsd:annotation>                     <xsd:documentation>                         <p>      a hint     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ValidationErrorTextList">         <xsd:annotation>             <xsd:documentation>A list of ValidationErrors.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" name="Text" type="matching:ValidationErrorContent">                 <xsd:annotation>                     <xsd:documentation>A single ValidationErrorContent item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ValidationErrorPathList">         <xsd:annotation>             <xsd:documentation>A list of ValidationErrors.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" name="Path" type="com:typeText">                 <xsd:annotation>                     <xsd:documentation>A single typeText item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ValidationErrorHintList">         <xsd:annotation>             <xsd:documentation>A list of ValidationErrors.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" name="Hint" type="com:typeText">                 <xsd:annotation>                     <xsd:documentation>A single typeText item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ValidationErrorList">         <xsd:annotation>             <xsd:documentation>A list of ValidationErrors.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="ValidationError" type="matching:ValidationError">                 <xsd:annotation>                     <xsd:documentation>A single ValidationError item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="ValidationErrorContent">         <xsd:annotation>             <xsd:documentation>                 <p>     Holds a Reason code    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="Code" type="com:typeText">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The Reason code     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element maxOccurs="1" minOccurs="1" name="Content" type="com:typeText">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The Reason text     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="ValidationErrorContentList">         <xsd:annotation>             <xsd:documentation>A list of ValidationErrorContents.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="ValidationErrorContent" type="matching:ValidationErrorContent">                 <xsd:annotation>                     <xsd:documentation>A single ValidationErrorContent item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>          <xsd:complexType name="DocumentToLineDiscrepancyWarning">         <xsd:annotation>             <xsd:documentation>                 <p>     Warning about an mline that has been created.    </p>             </xsd:documentation>         </xsd:annotation>         <xsd:sequence>                          <xsd:element maxOccurs="1" minOccurs="1" name="MLine" type="group:MLineKey">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The key to the MLine to apply the discrepancy to.     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>                          <xsd:element name="WarningList" type="matching:DocumentToLineDiscrepancyWarningWarningList">                 <xsd:annotation>                     <xsd:documentation>                         <p>      The Reason text     </p>                     </xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="DocumentToLineDiscrepancyWarningWarningList">         <xsd:annotation>             <xsd:documentation>A list of DocumentToLineDiscrepancyWarnings.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" name="Warning" type="matching:ValidationErrorContent">                 <xsd:annotation>                     <xsd:documentation>A single ValidationErrorContent item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>     <xsd:complexType name="DocumentToLineDiscrepancyWarningList">         <xsd:annotation>             <xsd:documentation>A list of DocumentToLineDiscrepancyWarnings.</xsd:documentation>         </xsd:annotation>         <xsd:sequence>             <xsd:element maxOccurs="unbounded" minOccurs="0" name="DocumentToLineDiscrepancyWarning" type="matching:DocumentToLineDiscrepancyWarning">                 <xsd:annotation>                     <xsd:documentation>A single DocumentToLineDiscrepancyWarning item.</xsd:documentation>                 </xsd:annotation>             </xsd:element>         </xsd:sequence>     </xsd:complexType>      </xsd:schema>