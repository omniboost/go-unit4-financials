<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:stm="http://www.coda.com/efinance/schemas/statementmaster" xmlns:build="http://www.coda.com/common/schemas/funcsec" targetNamespace="http://www.coda.com/efinance/schemas/statementmaster" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/>              <xsd:complexType name="AddStatementMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="StatementMaster" type="stm:StatementMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the statement master you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddStatementMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates new statement type masters in the database, using the statement type information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:AddStatementMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddStatementMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to create the statement type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the statement type master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this statement type master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddStatementMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:AddStatementMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateStatementMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="StatementMaster" type="stm:StatementMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the statement type master you want to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateStatementMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates the statement type masters in the database, using the statement type information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:UpdateStatementMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateStatementMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to update the statement type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the statement type master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this statement type master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateStatementMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:UpdateStatementMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetStatementMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the statement type master you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetStatementMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified statement type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:GetStatementMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetStatementMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company from which you attempted to retrieve the statement type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the statement type master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="StatementMaster" type="stm:StatementMaster">             <xsd:annotation>               <xsd:documentation>Contains the statement type master you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetStatementMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:GetStatementMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteStatementMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the statement type master you want to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteStatementMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified statement type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:DeleteStatementMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteStatementMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to delete the statement type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the statement type master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteStatementMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:DeleteStatementMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListStatementMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Filter" type="com:ReqKeysWithShortName">             <xsd:annotation>               <xsd:documentation>A filter that selects the statement type masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListStatementMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves key information for the specified statement type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:ListStatementMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListStatementMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Filter" type="com:ReqKeysWithShortName">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the statement type masters for listing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Keys" type="com:KeyData">             <xsd:annotation>               <xsd:documentation>Contains the key information for the listed statement type masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListStatementMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:ListStatementMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="StatementMasterRequest">     <xsd:annotation>    <xsd:appinfo build:funcSecValue="351" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain statement type masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceRequest">         <xsd:sequence>           <xsd:element minOccurs="0" name="Add" type="stm:AddStatementMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="242" build:readOnly="false"/>               <xsd:documentation>Creates new statement type masters in the database, using the statement type information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="stm:UpdateStatementMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="243" build:readOnly="false"/>               <xsd:documentation>Updates the statement type masters in the database, using the statement type information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="stm:GetStatementMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="241" build:readOnly="true"/>               <xsd:documentation>Retrieves the specified statement type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="stm:DeleteStatementMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="244" build:readOnly="false"/>               <xsd:documentation>Deletes the specified statement type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="List" type="stm:ListStatementMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="240" build:readOnly="true"/>               <xsd:documentation>Retrieves key information for the specified statement type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="StatementMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain statement type masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceResponse">         <xsd:sequence>           <xsd:element minOccurs="0" name="Add" type="stm:AddStatementMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="stm:UpdateStatementMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="stm:GetStatementMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="stm:DeleteStatementMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="List" type="stm:ListStatementMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:element name="StatementMasterRequest" type="stm:StatementMasterRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain statement type masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>   <xsd:element name="StatementMasterResponse" type="stm:StatementMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain statement type masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>                <xsd:complexType name="AddTransactionMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="TransactionMaster" type="stm:TransactionMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the transaction type master you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddTransactionMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates new transaction type masters in the database, using the transaction type information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:AddTransactionMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddTransactionMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to create the transaction type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the transaction type master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this transaction type master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="AddTransactionMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:AddTransactionMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateTransactionMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="TransactionMaster" type="stm:TransactionMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the transaction type master you want to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateTransactionMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates transaction type masters in the database using the transaction type information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:UpdateTransactionMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateTransactionMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to update the transaction type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the transaction type master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this transaction type master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UpdateTransactionMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:UpdateTransactionMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetTransactionMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the transaction type master you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetTransactionMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified transaction type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:GetTransactionMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetTransactionMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company from which you attempted to retrieve the transaction type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the transaction type master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="TransactionMaster" type="stm:TransactionMaster">             <xsd:annotation>               <xsd:documentation>Contains the transaction type master you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetTransactionMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:GetTransactionMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteTransactionMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the transaction type master you want to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteTransactionMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified transaction type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:DeleteTransactionMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteTransactionMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to delete the transaction type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the transaction type master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="DeleteTransactionMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:DeleteTransactionMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListTransactionMasterRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Filter" type="com:ReqKeysWithShortName">             <xsd:annotation>               <xsd:documentation>A filter that selects the transaction type masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListTransactionMasterRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves key information for the specified transaction type masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="stm:ListTransactionMasterRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListTransactionMasterResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Filter" type="com:ReqKeysWithShortName">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the transaction type masters for listing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Keys" type="com:KeyData">             <xsd:annotation>               <xsd:documentation>Contains the key information for the listed transaction type masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ListTransactionMasterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="stm:ListTransactionMasterResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="TransactionMasterRequest">     <xsd:annotation>    <xsd:appinfo build:funcSecValue="349" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain transaction type masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceRequest">         <xsd:sequence>           <xsd:element minOccurs="0" name="Add" type="stm:AddTransactionMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="230" build:readOnly="false"/>               <xsd:documentation>Creates new transaction type masters in the database, using the transaction type information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="stm:UpdateTransactionMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="231" build:readOnly="false"/>               <xsd:documentation>Updates transaction type masters in the database using the transaction type information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="stm:GetTransactionMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="229" build:readOnly="true"/>               <xsd:documentation>Retrieves the specified transaction type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="stm:DeleteTransactionMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="232" build:readOnly="false"/>               <xsd:documentation>Deletes the specified transaction type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="List" type="stm:ListTransactionMasterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="228" build:readOnly="true"/>               <xsd:documentation>Retrieves key information for the specified transaction type masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="TransactionMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain transaction type masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceResponse">         <xsd:sequence>           <xsd:element minOccurs="0" name="Add" type="stm:AddTransactionMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="stm:UpdateTransactionMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="stm:GetTransactionMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="stm:DeleteTransactionMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="List" type="stm:ListTransactionMasterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:element name="TransactionMasterRequest" type="stm:TransactionMasterRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain transaction type masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>   <xsd:element name="TransactionMasterResponse" type="stm:TransactionMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain transaction type masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>             <xsd:complexType name="StatementMaster">     <xsd:annotation>       <xsd:documentation>This element holds a statement type master.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company in which the statement type master exists.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for this statement type master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp for this master in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The full name of the master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ShortName" type="com:typeShortName">         <xsd:annotation>           <xsd:documentation>The abbreviated name of the master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="PreCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the default presenter you want this statement type master to use.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Balancing" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that statements of this type are self-balancing.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:element name="StatementMaster" type="stm:StatementMaster">     <xsd:annotation>       <xsd:documentation>This element holds a statement type master.</xsd:documentation>     </xsd:annotation>   </xsd:element>                <xsd:complexType name="Key">     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode"/>       <xsd:element name="StmCode" type="com:typeElmCode"/>       <xsd:element name="ExternalCode" type="com:typeElmCode"/>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="CopyExtRefList">     <xsd:annotation>       <xsd:documentation>The list of external references which you want to copy.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="6" minOccurs="0" name="CopyExtRef" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the external reference is copied from the last source line to the contra lines, if you specified Calculated in the ContraLineSrc.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="TransactionMaster">     <xsd:annotation>       <xsd:documentation>This element holds a transaction type master.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company in which the transaction type master exists.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for this transaction type master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for the transaction type master in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The full name of the master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ShortName" type="com:typeShortName">         <xsd:annotation>           <xsd:documentation>The abbreviated name of the master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StmCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the statement type master that you want to use with this transaction type.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ExternalCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The transaction identifier that appears in the statement for lines of this type.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocSrcType" type="com:typeCtDocumType">         <xsd:annotation>           <xsd:documentation>Where the document for posting the statement lines is derived from: Specify, or From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the document used to post the statement lines, if the DocSrcType is Specify.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocNumType" type="com:typeCtDocumentNumbering">         <xsd:annotation>           <xsd:documentation>How often a separate document is created, determining the number of documents: Document per item, Document per process, or From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Location" type="com:typePostingLocation">         <xsd:annotation>           <xsd:documentation>The location to which the document will be posted: Books or Intray.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Reconcile" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that lines of this transaction type may be automatically reconciled after posting.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ExtensionDLL" type="com:typeExtDLL">         <xsd:annotation>           <xsd:documentation>The full path for the DLL file you want to use.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcAccSrc" type="com:typeCtAcccodeSource">         <xsd:annotation>           <xsd:documentation>How the account code to which the source lines are posted is derived: Specified, Lookup Account or From File.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcAccCode" type="com:typeAcCode">         <xsd:annotation>           <xsd:documentation>The code of the account to which source lines of this type are posted, if you have selected Specified in SrcAccSrc.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SrcDesc" type="com:typeDescr">         <xsd:annotation>           <xsd:documentation>The description to be used instead of any description that is in the statement file. You must enter at least one printable character.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcLineType" type="com:typeCtDoclinetypeNotax">         <xsd:annotation>           <xsd:documentation>The line type of the source lines: Summary, Analysis or taken From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcCheckExtRefs" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that external references are checked for source lines of this type when you validate a statement. The checking rules specified on the document master are used.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcValidateAcc" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the account code is validated for source lines of this type when you validate a statement. The standard Financials validation is used.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SrcExtValidation" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies that the user extension named in UserExtension is called for source lines of this type when you validate a statement. This user extension can check and modify any of the external references.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraLineSrc" type="com:typeCtContraSource">         <xsd:annotation>           <xsd:documentation>How the value of the contra line is derived: Calculated or From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraAccSrc" type="com:typeCtAcccodeContra">         <xsd:annotation>           <xsd:documentation>How the account code to which contra lines are posted is derived: Specified, Lookup account, or From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraAccCode" type="com:typeAcCode">         <xsd:annotation>           <xsd:documentation>The code of the account to which contra lines of this type are posted, if you have selected Specified in ContraAccSrc.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ContraDesc" type="com:typeDescr">         <xsd:annotation>           <xsd:documentation>The description to be used instead of any description that is in the statement file. You must enter at least one printable character.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="CopyExtRefList" type="stm:CopyExtRefList">         <xsd:annotation>           <xsd:documentation>The list of external references which you want to copy.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraLineType" type="com:typeCtDoclinetypeNotax">         <xsd:annotation>           <xsd:documentation>The line type of the contra lines: Summary, Analysis or taken From file.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraCheckExtRefs" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies that external references are checked for contra lines of this type when you validate a statement. The checking rules specified in the document master are used.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraValidateAcc" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies that the account code is validated for contra lines of this type when you validate a statement. The standard Financials validation is used.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraExtValidation" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies that the user extension master named in UserExtension is called for contra lines of this type when you validate a statement. This implementation can check and modify any of the external references.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="RelaxTriangulation" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the EMU triangulation rules for currency conversion do not apply to the calculation of the contra line values.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserExtension" type="com:ExtensionRef">         <xsd:annotation>           <xsd:documentation>The code of the extension master you want to use for validation.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:element name="TransactionMaster" type="stm:TransactionMaster">     <xsd:annotation>       <xsd:documentation>This element holds a transaction type master.</xsd:documentation>     </xsd:annotation>   </xsd:element>  </xsd:schema>