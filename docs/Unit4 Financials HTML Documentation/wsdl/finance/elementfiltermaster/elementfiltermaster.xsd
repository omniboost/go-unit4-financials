<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:build="http://www.coda.com/common/schemas/funcsec" xmlns:efm="http://www.coda.com/efinance/schemas/elementfiltermaster" xmlns:elm="http://www.coda.com/efinance/schemas/elementmaster" targetNamespace="http://www.coda.com/efinance/schemas/elementfiltermaster" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/elementmaster" schemaLocation="../../../wsdl/finance/elementmaster/elementmaster.xsd"/>        <xsd:complexType name="ElementFilterKey">     <xsd:annotation>       <xsd:documentation>This element contains key information for identifying element filter masters.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the element filter master is maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The element level to which the element filter master relates.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ElementFilterListFilter">     <xsd:annotation>       <xsd:documentation>A filter for identifying the element filter masters to be listed.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ListFilter">     <xsd:sequence>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ElementFilterItem">     <xsd:annotation>       <xsd:documentation>A row in the list of criteria used by the element filter master.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Logical" type="com:typeCtAccessLog">         <xsd:annotation>           <xsd:documentation>A logical operator, either AND or OR.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="LBracket" type="com:typeCtLeftBracketVocab">         <xsd:annotation>           <xsd:documentation>The number of opening brackets to insert at this point (for grouping purposes).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Vocab" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>A number identifying an element level or an element group level.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Function" type="com:typeCtAccessOp">         <xsd:annotation>           <xsd:documentation>A number identifying the relational operator that specifies the kind of comparison made between element codes matching the Vocab item, and the supplied Value.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Value" type="xsd:string">         <xsd:annotation>           <xsd:documentation>A pattern value that is compared to element codes matching the Vocab item. You can use wildcards only with the LIKE and NOTLIKE functions.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="TBracket" type="com:typeCtRightBracketVocab">         <xsd:annotation>           <xsd:documentation>The number of closing brackets to insert at this point (for grouping purposes).</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ElementFilterList">     <xsd:annotation>       <xsd:documentation>This element holds the list of criteria used by the element filter master.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="ElementFilterItem" type="efm:ElementFilterItem">         <xsd:annotation>           <xsd:documentation>A row in the list of criteria used by the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ElementFilterMaster">     <xsd:annotation>       <xsd:documentation>This element holds an element filter master.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for this element filter master in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the element filter master is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The element level to which the element filter master applies.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The full name for the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The abbreviated name for the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElementFilterList" type="efm:ElementFilterList">         <xsd:annotation>           <xsd:documentation>This element holds the list of criteria used by the element filter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>                   <xsd:complexType name="ListRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Filter" type="efm:ElementFilterListFilter">             <xsd:annotation>               <xsd:documentation>A filter that selects the element filters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="ListRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves extended key information for the specified element filter masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:ListRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="ListResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Filter" type="efm:ElementFilterListFilter">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the element filter masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Keys" type="com:KeyData">             <xsd:annotation>               <xsd:documentation>Contains key information for the listed element filter masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="ListResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:ListResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="AddRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="ElementFilterMaster" type="efm:ElementFilterMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the element filter master you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="AddRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates new element filter masters in the database using the information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:AddRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="AddResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to create the element filter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the new element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the element filter master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element filter master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="AddResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:AddResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="UpdateRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="ElementFilterMaster" type="efm:ElementFilterMaster">             <xsd:annotation>               <xsd:documentation>Contains the information for the element filter master you want to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="UpdateRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates element filter masters in the database using the information you provide.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyRequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:UpdateRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="UpdateResponse">     <xsd:complexContent>       <xsd:extension base="com:MultiCompanyResponse">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to update the element filter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the updated element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the element filter master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element filter master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="UpdateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:UpdateResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="GetRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="efm:ElementFilterKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element filter master you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="GetRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element filter masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:GetRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="GetResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company from which you attempted to retrieve the specified element filter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="ElementFilterMaster" type="efm:ElementFilterMaster">             <xsd:annotation>               <xsd:documentation>Contains the element filter master you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="GetResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:GetResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="DeleteRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="efm:ElementFilterKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element filter master you want to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="DeleteRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified element filter masters from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:DeleteRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="DeleteResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to delete the element filter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the element filter master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="DeleteResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:DeleteResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="TestRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="ElementFilterMaster" type="efm:ElementFilterMaster">             <xsd:annotation>               <xsd:documentation>Contains the element filter master you want to test.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="MaxKeys" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The maximum number of elements to be returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="TestRequestVerb">     <xsd:annotation>       <xsd:documentation>Validates the logic of the element filter criteria and lists the elements that meet those criteria.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="efm:TestRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="TestResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which the element filter master is maintained.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The element level to which the element filter master applies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the element filter master that you have attempted to test.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="MaxKeys" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The maximum number of elements to be returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Keys" type="elm:elmKeyData">             <xsd:annotation>               <xsd:documentation>Contains extended key information for the listed element.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="TestResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="efm:TestResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:complexType name="ElementFilterMasterRequest">     <xsd:annotation>       <xsd:appinfo build:funcSecValue="385" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain element filter masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceRequest">         <xsd:sequence>           <xsd:element minOccurs="0" name="List" type="efm:ListRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="488" build:readOnly="true"/>               <xsd:documentation>Retrieves extended key information for the specified element filter masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Add" type="efm:AddRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="484" build:readOnly="false"/>               <xsd:documentation>Creates new element filter masters in the database using the information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="efm:UpdateRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="487" build:readOnly="false"/>               <xsd:documentation>Updates element filter masters in the database using the information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="efm:GetRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="486" build:readOnly="true"/>               <xsd:documentation>Retrieves the specified element filter masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="efm:DeleteRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="485" build:readOnly="false"/>               <xsd:documentation>Deletes the specified element filter masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Test" type="efm:TestRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="512" build:readOnly="true"/>               <xsd:documentation>Validates the logic of the element filter criteria and lists the elements that meet those criteria.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="ElementFilterMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain element filter masters.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceResponse">         <xsd:sequence>           <xsd:element minOccurs="0" name="List" type="efm:ListResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Add" type="efm:AddResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Update" type="efm:UpdateResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Get" type="efm:GetResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Delete" type="efm:DeleteResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Test" type="efm:TestResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>      <xsd:element name="ElementFilterMasterRequest" type="efm:ElementFilterMasterRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain element filter masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>   <xsd:element name="ElementFilterMasterResponse" type="efm:ElementFilterMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain element filter masters.</xsd:documentation>     </xsd:annotation>   </xsd:element> </xsd:schema>