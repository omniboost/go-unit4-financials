<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:pre="http://www.coda.com/efinance/schemas/presenter" xmlns:build="http://www.coda.com/common/schemas/funcsec" targetNamespace="http://www.coda.com/efinance/schemas/presenter" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/>      <xsd:complexType name="UserExit">     <xsd:annotation>       <xsd:documentation>This element contains details of a user exit routine which can be invoked from Browse details.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="File" type="xsd:string">         <xsd:annotation>           <xsd:documentation>The path and filename of the DLL to run from this user exit. If a .DLL file is named here, it MUST NOT be changed by the XMLi programmer, since it is not maintainable in Financials or XMLi. It is maintained only in the Client/server version, and must be resent to the server with the .DLL intact, so that future use of this presenter by a Client/Server user is not adversely affected.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ActionCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The name of the action code argument passed to a user-defined exit routine in a DLL file. You can leave this blank to pass an empty action code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Caption" type="com:typeShortName">         <xsd:annotation>           <xsd:documentation>A label for this user exit routine.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="UserExtension" type="com:ExtensionRef">         <xsd:annotation>           <xsd:documentation>The code of the user extension which will be available to users when this presenter is used in Browse Details.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="UserExitList">     <xsd:annotation>       <xsd:documentation>This element contains details of user exit routines which can be invoked from Browse details.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="4" minOccurs="0" name="Exit" type="pre:UserExit">         <xsd:annotation>           <xsd:documentation>This element contains details of a user exit routine which can be invoked from Browse details.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ManipulateByListItem">     <xsd:annotation>       <xsd:documentation>This element contains details of a vocabulary item to sort by.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="VocabID" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>The name of a vocabulary item by which the data will be sorted.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The flexi-field master code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFColumnName" type="com:typeFlexiColumnName">         <xsd:annotation>           <xsd:documentation>The flexi-field column name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFElmLevel" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The flexi-field element level.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="SortOrder" type="com:typeCtBalSortOrder">         <xsd:annotation>           <xsd:documentation>The sort order.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="SubTotal" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If set, indicates that subtotals are displayed at each break in the sorted list for this vocabulary item.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="HideDetail" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If set, detail lines are hidden.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="SubColourSet" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If set, subtotal lines are displayed in a different colour.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="SubColour" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The colour of a subtotal line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="VocabName" type="xsd:string">         <xsd:annotation>           <xsd:documentation>The vocabulary item name.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ManipulateByList">     <xsd:annotation>       <xsd:documentation>This element contains a list of vocabulary items controlling the sort order and presentation of data lines.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="ManipulateBy" type="pre:ManipulateByListItem">         <xsd:annotation>           <xsd:documentation>This element contains details of a vocabulary item to sort by. This is still notionally 3 but Workflow needed to use 6. Users can&apos;t define more than 3.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="Master">   <xsd:sequence>    <xsd:element name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for this presenter master in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company in which the presenter master exists.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for this presenter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The full name for the presenter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The abbreviated name for the presenter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Restrict" type="com:typeBaseEnumList">         <xsd:annotation>           <xsd:documentation>Unused (For future use)</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Exits" type="pre:UserExitList">         <xsd:annotation>           <xsd:documentation>This element contains details of user exit routines which can be invoked from Browse details.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ManipulateByList" type="pre:ManipulateByList">         <xsd:annotation>           <xsd:documentation>This element contains details of how the information will be sorted, and whether monetary values will be totalled.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AllowColumnSort" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that sorting on column headings is enabled.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="GrandTotal" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that grand totals are displayed for columns containing monetary values, quantities, or calculations.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="GrandColourSet" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the grand total should be a different colour.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="GrandColour" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The colour of the grand total.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="UseAbsoluteNumbers" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that sorting should ignore negative numbers.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AllowTitleWrap" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that titles can wrap across multiple lines.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreateDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date the master was created.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ModifyDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date the master was last updated.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="User" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code of the user who last modified the presenter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DataClass" type="xsd:string">         <xsd:annotation>           <xsd:documentation>Specifies the type of data required and limits the vocabulary items that can be used to obtain it. If this element is omitted, a default of dataclass_all will be used.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Shared" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that this master is shared.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FlexiFieldMasterList" type="pre:FlexiFieldMasterList">         <xsd:annotation>           <xsd:documentation>Contains a list of flexi-field masters.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="VocabListItem">     <xsd:annotation>       <xsd:documentation>This element contains a vocabulary item used by this presenter master, and its display settings.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="VocabID" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>Specifies the vocabulary item to use in this presenter master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The flexi-field master code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFColumnName" type="com:typeFlexiColumnName">         <xsd:annotation>           <xsd:documentation>The flexi-field column name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FFElmLevel" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The flexi-field element level.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Protected" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether users may change the vocabulary item at run time. When TRUE, the value is protected and cannot be changed.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ColTitle" type="com:typeText">         <xsd:annotation>           <xsd:documentation>Specifies the title to use for this vocabulary item. This defaults to the first 20 characters of the vocabulary name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="DispWidth" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The number of characters (or width) reserved for displaying the information determined by this vocabulary item.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="DispOffset" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The character position where the displayed information will start. The required number of characters of information, determined by DispWidth, is presented from this position onwards. The offset is measured from the left. This number cannot be greater than the DispWidth value.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Cumulative" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that an accumulated value will be displayed. This is only valid when the VocabID is Document, Dual, Element, or Home value.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ReverseSign" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the sign on column values is reversed. For example, an original value of 100 is displayed as -100, and an original value of -100 is displayed as 100.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="VocabList">     <xsd:annotation>       <xsd:documentation>This element contains details of the vocabulary items used by this presenter master.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Vocab" type="pre:VocabListItem">         <xsd:annotation>           <xsd:documentation>This element contains a vocabulary item used by this presenter master, and its display settings.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="Presenter">     <xsd:annotation>       <xsd:documentation>This element holds a presenter master.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="pre:Master">     <xsd:sequence>      <xsd:element name="VocabList" type="pre:VocabList">             <xsd:annotation>               <xsd:documentation>This element contains details of the vocabulary items used by this presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PresenterListFilter">     <xsd:annotation>       <xsd:documentation>This element contains the selection parameters for the presenters you want to include in a list.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ReqKeys">     <xsd:sequence>      <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">             <xsd:annotation>               <xsd:documentation>The abbreviated name of the presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Product" type="com:typeApplicationNameb">             <xsd:annotation>               <xsd:documentation>The product to which the presenter relates.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="ViewType" type="com:typeGenericOon">             <xsd:annotation>               <xsd:documentation>The type of the objects that vocabulary items can be based on.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="DataView" type="com:typeTextfield">             <xsd:annotation>               <xsd:documentation>The dataview from which the presenter draws its vocabulary items.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="LastModifiedFrom" type="com:typeDateB">             <xsd:annotation>               <xsd:documentation>The earliest modification date for masters you want to include in your selection.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="LastModifiedTo" type="com:typeDateB">             <xsd:annotation>               <xsd:documentation>The latest modification date for masters you want to include in your selection.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TableName" type="com:typeTextWild">             <xsd:annotation>               <xsd:documentation>The name of a Link table.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FlexiFieldMasterList">     <xsd:annotation>       <xsd:documentation>Contains a list of flexi-field masters.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The flexi-field master code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:element name="Presenter" type="pre:Presenter">     <xsd:annotation>       <xsd:documentation>This element holds a presenter master.</xsd:documentation>     </xsd:annotation>   </xsd:element>              <xsd:complexType name="AddRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Presenter" type="pre:Presenter">             <xsd:annotation>               <xsd:documentation>Contains the information for the presenter master you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates new presenter masters in the database using the information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyRequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="pre:AddRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddResponse">   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyResponse">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to create the presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the presenter master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this presenter master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="pre:AddResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="UpdateRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Presenter" type="pre:Presenter">             <xsd:annotation>               <xsd:documentation>Contains the information for the presenter master you want to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates presenter masters in the database using the information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyRequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="pre:UpdateRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateResponse">   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyResponse">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to update the presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the presenter master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this presenter master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="pre:UpdateResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the presenter masters you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified presenter masters from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="pre:GetRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to retrieve the presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the presenter master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Presenter" type="pre:Presenter">             <xsd:annotation>               <xsd:documentation>Contains the presenter master you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="pre:GetResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="DeleteRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="com:Key">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the presenter master you want to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified presenter master from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="pre:DeleteRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the company in which you attempted to delete the presenter master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code of the presenter master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="pre:DeleteResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="ListRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="pre:PresenterListFilter">             <xsd:annotation>               <xsd:documentation>A filter that selects the presenter masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves key information for the specified presenter masters from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="pre:ListRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Filter" type="pre:PresenterListFilter">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the presenter masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Keys" type="com:KeyData">             <xsd:annotation>               <xsd:documentation>Contains the key information for the listed presenter masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="pre:ListResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="PresenterRequest">     <xsd:annotation>       <xsd:appinfo build:funcSecValue="317" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain presenter masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceRequest">     <xsd:sequence>      <xsd:element minOccurs="0" name="Add" type="pre:AddRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="90" build:readOnly="false"/>               <xsd:documentation>Creates new presenter masters in the database using the information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Update" type="pre:UpdateRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="91" build:readOnly="false"/>               <xsd:documentation>Updates presenter masters in the database using the information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Get" type="pre:GetRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="92" build:readOnly="true"/>               <xsd:documentation>Retrieves the specified presenter masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Delete" type="pre:DeleteRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="93" build:readOnly="false"/>               <xsd:documentation>Deletes the specified presenter master from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="List" type="pre:ListRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="78" build:readOnly="true"/>               <xsd:documentation>Retrieves key information for the specified presenter masters from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PresenterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain presenter masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceResponse">     <xsd:sequence>      <xsd:element minOccurs="0" name="Add" type="pre:AddResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Update" type="pre:UpdateResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Get" type="pre:GetResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Delete" type="pre:DeleteResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="List" type="pre:ListResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:element name="PresenterRequest" type="pre:PresenterRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain presenter masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>  <xsd:element name="PresenterResponse" type="pre:PresenterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain presenter masters.</xsd:documentation>     </xsd:annotation>   </xsd:element> </xsd:schema>