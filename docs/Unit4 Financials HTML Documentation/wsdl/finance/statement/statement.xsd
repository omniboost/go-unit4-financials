<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:spr="http://www.coda.com/efinance/schemas/statement" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:gsl="http://www.coda.com/efinance/schemas/selectormaster" xmlns:txn="http://www.coda.com/efinance/schemas/transaction" xmlns:sel="http://www.coda.com/efinance/schemas/selector" xmlns:build="http://www.coda.com/common/schemas/funcsec" targetNamespace="http://www.coda.com/efinance/schemas/statement" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/selector" schemaLocation="../../../wsdl/finance/selector/selector.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/selectormaster" schemaLocation="../../../wsdl/finance/selectormaster/selectormaster.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/transaction" schemaLocation="../../../wsdl/finance/transaction/transaction.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/>              <xsd:complexType name="StatementLineKey">     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode"/>       <xsd:element name="StatementMasterCode" type="com:typeGeneralCode"/>       <xsd:element name="ReferenceNumberCode" type="com:typeGeneralCode"/>       <xsd:element name="DocCode" type="com:typeGeneralCode"/>       <xsd:element name="DocNumber" type="com:typeDocNum"/>       <xsd:element name="DocLineNumber" type="xsd:int"/>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Tax">     <xsd:annotation>       <xsd:documentation>An item on the list of tax details.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element minOccurs="0" name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the tax master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Value" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The value of the tax payable, in document currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Taxes">     <xsd:annotation>       <xsd:documentation>Contains the tax details if this is a tax line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="9" minOccurs="0" name="Tax" type="spr:Tax">         <xsd:annotation>           <xsd:documentation>An item on the list of tax details.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Currency">     <xsd:annotation>       <xsd:documentation>One currency value held against this line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="ElmLevel" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The level at which the element exists.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="CurrCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Value" type="com:typeMoneyB">         <xsd:annotation>           <xsd:documentation>The value of the line in this currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Rate" type="com:typeRateB">         <xsd:annotation>           <xsd:documentation>The exchange rate for this currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Currencies">     <xsd:annotation>       <xsd:documentation>The list of values in other currencies held for the account code on this line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="8" minOccurs="0" name="Currency" type="spr:Currency">         <xsd:annotation>           <xsd:documentation>One currency value held against this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Discount">     <xsd:sequence>       <xsd:element minOccurs="0" name="Date" type="com:typeDate"/>       <xsd:element minOccurs="0" name="Rate" type="com:typeMoney"/>       <xsd:element minOccurs="0" name="Value" type="com:typeMoney"/>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Discounts">     <xsd:annotation>       <xsd:documentation>The list of discounts held for this line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="5" minOccurs="0" name="Discount" type="txn:Discount">         <xsd:annotation>           <xsd:documentation>One discount held for this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Ten99Taxes">     <xsd:annotation>       <xsd:documentation>Contains details of 1099 tax associated with this line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="3" minOccurs="0" name="Ten99Tax" type="spr:Tax">         <xsd:annotation>           <xsd:documentation>One 1099 tax item.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="StatementLine">     <xsd:annotation>       <xsd:documentation>Contains details of a statement line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="StatementMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the statement master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementNumber" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The reference number of the statement you want to post.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Version" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The version of the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company to which the line will be posted.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the document containing this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocNumber" type="com:typeDocNum">         <xsd:annotation>           <xsd:documentation>The number of the document containing this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocLineNumber" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The number of this line within the document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="TransactionCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The external party&apos;s code for this transaction line. The transaction type master tells the system how to process lines containing this code. This entry is used to identify a line in the oas_trantype table through the externalcode entry.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="AccountLookup" type="com:typeAcCodeLookup">         <xsd:annotation>           <xsd:documentation>A free-format lookup code, which, depending on the transaction type set up, is used by the system to look up the account code.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="AccountCode" type="com:typeAcCode">         <xsd:annotation>           <xsd:documentation>The account code for this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SourceOrContra" type="com:typeCtSprSource">         <xsd:annotation>           <xsd:documentation>Is this a source line or a contra line?</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The value of the line in the statement currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="RecReference" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The reconciliation integer. This starts at 0 and is then system maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="RecStatus" type="com:typeCtStatRec">         <xsd:annotation>           <xsd:documentation>The reconciliation status of this statement line: Reconciled, Available or Null.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The value of the line in document currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocRate" type="com:typeRate">         <xsd:annotation>           <xsd:documentation>The currency exchange rate used to produce the home value from the document value.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="HomeValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The value of the line in home currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DualValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The value of the line in dual currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DualRate" type="com:typeRate">         <xsd:annotation>           <xsd:documentation>The currency exchange rate used to produce the dual currency from the home currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserStatus" type="com:typeStatUser">         <xsd:annotation>           <xsd:documentation>A single character user identifier.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="LineType" type="com:typeCtRecLineType">         <xsd:annotation>           <xsd:documentation>The type of line: summary, analysis or tax.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DebitCredit" type="com:typeCtDocLineDrCr">         <xsd:annotation>           <xsd:documentation>Whether the sense of this line is Debit or Credit.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DueDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date the amount is due.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ValueDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date the amount clears.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Taxes" type="spr:Taxes">         <xsd:annotation>           <xsd:documentation>Contains the tax details if this is a tax line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Description" type="com:typeDescr">         <xsd:annotation>           <xsd:documentation>The document line description.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef1" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 1.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef2" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 2.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef3" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 3.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef4" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 4.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef5" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 5.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExtRef6" type="com:typeExtRef">         <xsd:annotation>           <xsd:documentation>The document line&apos;s external reference 6.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserRef1" type="com:typeUserRef">         <xsd:annotation>           <xsd:documentation>The first free-format string available on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserRef2" type="com:typeUserRef">         <xsd:annotation>           <xsd:documentation>The second free-format string available on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserRef3" type="com:typeUserRef">         <xsd:annotation>           <xsd:documentation>The third free-format string available on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Currencies" type="spr:Currencies">         <xsd:annotation>           <xsd:documentation>The list of values in other currencies held for the account code on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Discounts" type="spr:Discounts">         <xsd:annotation>           <xsd:documentation>The list of discounts held for this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocSumTax" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The sum of tax values in the document currency. This is the total tax on the document line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="TaxLineCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code that identifies a tax master, if this is a tax line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocTaxTurnover" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The tax turnover in the document currency, if this is a tax line. It is the sum of document line values for the tax code held in the TaxLineCode field.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Ten99Taxes" type="spr:Ten99Taxes">         <xsd:annotation>           <xsd:documentation>Contains details of 1099 tax associated with this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="MediaCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code that identifies the media master used by the pay line if the account code contains a matchable element.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="BankCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code that identifies the company bank master if the account code contains a matchable element.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ElmBankTag" type="com:typeUWord">         <xsd:annotation>           <xsd:documentation>The number that identifies which element bank to use in the bank list attached to the matchable element.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ElmAddrTag" type="com:typeUWord">         <xsd:annotation>           <xsd:documentation>The number that identifies which element address to use in the address list attached to the matchable element.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Posted" type="com:typeCtStmPosted">         <xsd:annotation>           <xsd:documentation>The posting status of the line: not yet posted, posted to Books or Intray, or failed.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Period" type="com:typePeriod">         <xsd:annotation>           <xsd:documentation>The period to which the document was posted.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date of the document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Authoriser" type="com:typeAuthInit">         <xsd:annotation>           <xsd:documentation>The user name of the authoriser.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocCurrCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the document currency.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="PostedDocCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the posted document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="PostedDocNumber" type="com:typeDocNum">         <xsd:annotation>           <xsd:documentation>The number of the posted document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="PostedDocLineNumber" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The number of this line on the posted document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="TraderCode" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>The code of the temporary supplier or customer on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>                       <xsd:complexType name="Key">     <xsd:annotation>       <xsd:documentation>The key containing the selection criteria for the Reference Number map.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementMasterCode" type="com:typeCodeWild">         <xsd:annotation>           <xsd:documentation>The search string for the statement master that you want statement processing to use. You can use wildcards.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ReferenceNumberCode" type="com:typeCodeWild">         <xsd:annotation>           <xsd:documentation>The search string for the reference number of the statement that you want to post. You can use wildcards.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FullKey">     <xsd:annotation>       <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the statement master you want statement processing to use.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementPostingMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the statement posting master you want statement processing to use.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ReferenceNumberCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The reference number of the statement you want to post.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="TextLines">     <xsd:annotation>       <xsd:documentation>Contains concatenated text items from the statement.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="TextLine" type="com:typeDescr">         <xsd:annotation>           <xsd:documentation>A line of text from the statement header.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="ReferenceNumbers">     <xsd:annotation>       <xsd:documentation>The list of statement reference numbers valid for this statement master.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="ReferenceNumber" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>A statement reference number on the list.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="ReferenceNumberMapEntry">     <xsd:annotation>       <xsd:documentation>An item on the Reference Number map.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="StatementMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the statement master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ReferenceNumbers" type="spr:ReferenceNumbers">         <xsd:annotation>           <xsd:documentation>The list of statement reference numbers valid for this statement master.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="ReferenceNumberMap">     <xsd:annotation>       <xsd:documentation>The list of statement masters, with valid reference numbers mapped against each statement master.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="ReferenceNumberMapEntry" type="spr:ReferenceNumberMapEntry">         <xsd:annotation>           <xsd:documentation>An item on the Reference Number map.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Header">     <xsd:annotation>       <xsd:documentation>This element contains details of the statement header.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="TextLines" type="spr:TextLines">         <xsd:annotation>           <xsd:documentation>Contains concatenated text items from the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Date" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The statement date, as in the statement tables.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Version" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The statement version, as in the statement tables.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="CurrCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the currency used by the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Status" type="com:typeCtSprUsage">         <xsd:annotation>           <xsd:documentation>The status of the statement: In Use or Not in Use.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="OpeningBalance" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The opening balance on the statement header.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ClosingBalance" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The closing balance on the statement header.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Movement" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The difference between the opening balance and the closing balance.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="StartDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date from which the statement starts.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="StartTime" type="com:typeTime">         <xsd:annotation>           <xsd:documentation>The time from which the statement starts.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="GetDetailsParams">     <xsd:annotation>       <xsd:documentation>Contains your requirements for selecting the statement lines you are interested in.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="FullKey" type="spr:FullKey">         <xsd:annotation>           <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="LogTitle" type="com:typeLogTitle">         <xsd:annotation>           <xsd:documentation>The title of the log under which details of the process are recorded.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="YearAndPeriod" type="com:typePeriod">         <xsd:annotation>           <xsd:documentation>The year and period to which statements are posted.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SuppressStatementLineVocabInformation" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that you do not want the response to contain the details of the vocabulary items on the transaction line</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="LockToken" type="com:typeText">         <xsd:annotation>           <xsd:documentation>A random alpha-numeric string given to you when the statement is locked, for unlocking the statement when use of it is complete and you want to start another process.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="GenerateParams">     <xsd:annotation>       <xsd:documentation>Contains the requirements for generating documents for posting.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Folders" type="spr:FolderList">         <xsd:annotation>           <xsd:documentation>The list of folders containing the statement lines.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SuppressTransactionLineVocabInformation" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that you do not want the response to contain the details of the vocabulary items on the transaction line (StatementLineCellList).</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="DetailsStatistics">     <xsd:annotation>       <xsd:documentation>Contains the general statistics for the statement.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="LinesLoaded" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The number of statement lines loaded.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="LinesRejected" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The number of lines rejected because of an error.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="LinesTotal" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The total number of lines in the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="TotalStatementValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The total value of the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="LinesTotalAcrossFolders" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The total number of lines for posting in all folders.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="TotalErrors" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The total number of lines with errors.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FolderSummary">     <xsd:annotation>       <xsd:documentation>Contains a summary of the information held in the folder.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="StatementValue" type="com:typeMoney">         <xsd:annotation>           <xsd:documentation>The total value of the lines in the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Lines" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The total number of lines in the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Errors" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The number of lines that are marked as &apos;Error&apos;.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FolderLineStatus">     <xsd:annotation>       <xsd:documentation>Contains the status settings of the statement line.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Error" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that an error occurred when the statement was validated.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="PostingLocation" type="com:typePostingLocation">         <xsd:annotation>           <xsd:documentation>The location to which the line will be posted: Books or Intray.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Reconcile" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, the line will be reconciled after posting.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Generated" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that a posting document has been generated for this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Selected" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that this line is selected for posting.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SystemSequenceNumber" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The sequence number of this line within statement processing.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ExternalSequenceNumber" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The sequence number of this line from the oas_stmdocline table.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ProposalIDReference" type="xsd:long">         <xsd:annotation>           <xsd:documentation>The reference number of the proposal containing this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="CanReconcileToBooks" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that, if Reconcile is set to TRUE, the system reconciles the transaction after posting it to the Books.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="CanReconcileToIntray" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that, if Reconcile is set to TRUE, the system reconciles the transaction after posting it to the Intray.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FolderLine">     <xsd:annotation>       <xsd:documentation>A line displayed within the folder.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="StatementLine" type="spr:StatementLine">         <xsd:annotation>           <xsd:documentation>Contains details of the statement line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="StatementLineCellList" type="sel:CellList">         <xsd:annotation>           <xsd:documentation>Contains an alternative view of the statement line, where the information is converted to strings held in a list of cells. This format may be more flexible for your purposes. You can suppress this information using SuppressTransactionLineVocabInformation.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Status" type="spr:FolderLineStatus">         <xsd:annotation>           <xsd:documentation>Contains the status settings of the statement line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="UserExtensionResults" type="spr:UserExtensionResults">         <xsd:annotation>           <xsd:documentation>Contains information about the user extensions: whether they were successful, and the values they returned.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FolderLines">     <xsd:annotation>       <xsd:documentation>Contains details of the lines in the folder.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="Line" type="spr:FolderLine">         <xsd:annotation>           <xsd:documentation>A line displayed within the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Folder">     <xsd:annotation>       <xsd:documentation>A folder on the list.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Title" type="com:typeDescr">         <xsd:annotation>           <xsd:documentation>The title of the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Type" type="com:typeCtStmFolderType">         <xsd:annotation>           <xsd:documentation>The type of folder: whether it is user-defined, or contains posted lines or remaining lines.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Id" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The numerical identifier for this folder in the list.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Summary" type="spr:FolderSummary">         <xsd:annotation>           <xsd:documentation>Contains a summary of the information held in the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Lines" type="spr:FolderLines">         <xsd:annotation>           <xsd:documentation>Contains details of the lines in the folder.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementPresenterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the presenter master used to display statement lines.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="DocumentPresenterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the presenter master used to display document lines.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="StatementLinesHeader" type="sel:SelectionRow">         <xsd:annotation>           <xsd:documentation>The column heading for all statement lines, which is determined by the display criteria in the presenter master used for the statement lines. Only those vocabulary items included in the presenter will be used in the header.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="FolderList">     <xsd:annotation>       <xsd:documentation>The list of folders containing the statement lines.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="Folder" type="spr:Folder">         <xsd:annotation>           <xsd:documentation>A folder on the list.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="UserExtension">     <xsd:annotation>       <xsd:documentation>Contains information about one user extension.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="TransactionTypeMasterCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the transaction type master.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ExtensionCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the user extension.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SourceExternalValidate" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that a user extension is used to validate the source account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SourceLookupAccount" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that a user extension is used to look up the source account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraExternalValidate" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that a user extension is used to validate the contra account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraLookupAccount" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that a user extension is used to look up the contra account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ContraLineSrc" type="com:typeCtContraSource">         <xsd:annotation>           <xsd:documentation>How the contra line is derived:</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="UserExtensionError">     <xsd:annotation>       <xsd:documentation>Contains details of an error which caused the user extension to fail.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="ErrorCode" type="com:typeCtUserExtensionError">         <xsd:annotation>           <xsd:documentation>The code that indicates the type of error.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ErrorText" type="com:typeTextAnyB">         <xsd:annotation>           <xsd:documentation>Explanatory text relating to the user extension error.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="UserExtensionResults">     <xsd:annotation>       <xsd:documentation>Contains information about the user extensions: whether they were successful, and the values they returned.        If only the source side is present for this statement line, then all the contra elements         should be omitted. Similarly, if only the contra side is present for this statement line,         then all the source elements should be omitted.   Error element, if present, indicates that there was an instruction to the User Extension          (either to validate or lookup an account) that could not be satisfied due to a problem with the User Extension          (either it has not been set up yet, or cannot be located).   </xsd:documentation>     </xsd:annotation>          <xsd:sequence>       <xsd:element minOccurs="0" name="SourceExternalValidateOK" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that the user extension used to validate the statement was successful.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SourceLookupAccountOK" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that the user extension used to look up the account code was successful.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SourceAccount" type="com:typeAcCode">         <xsd:annotation>           <xsd:documentation>The code of the source account, returned by the user extension.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="SourceTraderCode" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>The code of the temporary customer or supplier associated with the source account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ContraExternalValidateOK" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that the user extension used to validate the contra account for the statement was successful.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ContraLookupAccountOK" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, indicates that the user extension used to look up the contra account was successful.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ContraAccount" type="com:typeAcCode">         <xsd:annotation>           <xsd:documentation>The code of the contra account, returned by the user extension.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ContraTraderCode" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>The code of the temporary customer or supplier associated with the contra account.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="Error" type="spr:UserExtensionError">         <xsd:annotation>           <xsd:documentation>Contains details of an error which caused the user extension to fail.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="UserExtensions">     <xsd:annotation>       <xsd:documentation>Contains information about the user extensions used by statement processing.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="UserExtension" type="spr:UserExtension">         <xsd:annotation>           <xsd:documentation>Contains information about one user extension.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Details">     <xsd:annotation>       <xsd:documentation>Contains information about and the results of the Generate command.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Statistics" type="spr:DetailsStatistics">         <xsd:annotation>           <xsd:documentation>Contains the general statistics for the statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Folders" type="spr:FolderList">         <xsd:annotation>           <xsd:documentation>Contains information about the folders and the lines they contain.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="UserExtensions" type="spr:UserExtensions">         <xsd:annotation>           <xsd:documentation>Contains information about the user extensions used by statement processing.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="LogID" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The number of the log containing details of the Generate process.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="TransactionLine">     <xsd:annotation>       <xsd:documentation>A transaction line, containing a proposed transaction, and other information.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Line" type="txn:Line">         <xsd:annotation>           <xsd:documentation>The document line, containing the transaction.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="LineCellList" type="sel:CellList">         <xsd:annotation>           <xsd:documentation>Contains an alternative view of the document line, where the information is converted to strings held in a list of cells. This format may be more flexible for your purposes. You can suppress this information using SuppressTransactionLineVocabInformation.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Error" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that an error occurred on this line.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="SystemCalculated" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the line was calculated by the system.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Reconcile" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that the line will be reconciled after posting.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="StatementSequenceNumber" type="com:typeLong">         <xsd:annotation>           <xsd:documentation>The sequence number of this line on the original statement.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="TransactionLineList">     <xsd:annotation>       <xsd:documentation>This element contains the document lines</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="TransactionLine" type="spr:TransactionLine">         <xsd:annotation>           <xsd:documentation>A transaction line, containing a proposed transaction, and other information.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="Transaction">     <xsd:annotation>       <xsd:documentation>The document containing the proposed transactions.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Header" type="txn:Header">         <xsd:annotation>           <xsd:documentation>The header details of the document.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="Lines" type="spr:TransactionLineList">         <xsd:annotation>           <xsd:documentation>This element contains the document lines</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="DocProposal">     <xsd:annotation>       <xsd:documentation>Contains one document proposal from the list of document proposals.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element name="Doc" type="spr:Transaction">         <xsd:annotation>           <xsd:documentation>The document containing the proposed transactions.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="DocLinesHeader" type="sel:SelectionRow">         <xsd:annotation>           <xsd:documentation>The column heading for all document lines in this document. This is determined by the display criteria in the presenter master used for the document lines. Only those vocabulary items included in the presenter will be used in the header.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="ProposalID" type="xsd:long">         <xsd:annotation>           <xsd:documentation>The identifying number of the proposal.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="NumberOfCalculatedContraLines" type="com:typeLong">         <xsd:annotation>           <xsd:documentation>The number of contra lines that have been calculated.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element name="PostingLocation" type="com:typePostingLocation">         <xsd:annotation>           <xsd:documentation>The location to which the document will be posted: Books or Intray.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:complexType name="DocProposals">     <xsd:annotation>       <xsd:documentation>Contains details of the proposed documents for posting the statement details to the Books or the Intray.</xsd:documentation>     </xsd:annotation>     <xsd:sequence>       <xsd:element maxOccurs="unbounded" minOccurs="0" name="DocProposal" type="spr:DocProposal">         <xsd:annotation>           <xsd:documentation>Contains one document proposal from the list of document proposals.</xsd:documentation>         </xsd:annotation>       </xsd:element>     </xsd:sequence>   </xsd:complexType>    <xsd:element name="Key" type="spr:Key">     <xsd:annotation>       <xsd:documentation>The key containing the selection criteria for the Reference Number map.</xsd:documentation>     </xsd:annotation>   </xsd:element>   <xsd:element name="Header" type="spr:Header">     <xsd:annotation>       <xsd:documentation>This element contains details of the statement header.</xsd:documentation>     </xsd:annotation>   </xsd:element>                         <xsd:complexType name="GetHeaderRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetHeaderRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the information in the statement header.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:GetHeaderRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetHeaderResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Header" type="spr:Header">             <xsd:annotation>               <xsd:documentation>Contains details of the statement header.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetHeaderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:GetHeaderResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetReferenceNumbersRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="spr:Key">             <xsd:annotation>               <xsd:documentation>The key containing the selection criteria for the Reference Number map.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetReferenceNumbersRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the Reference Number map, which consists of a list of statement type masters and their associated statement reference numbers.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:GetReferenceNumbersRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetReferenceNumbersResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Key" type="spr:Key">             <xsd:annotation>               <xsd:documentation>The key containing the selection criteria for the Reference Number map. This contains statement master codes and the statement reference numbers valid for each.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="ReferenceNumberMap" type="spr:ReferenceNumberMap">             <xsd:annotation>               <xsd:documentation>The list of statement reference numbers mapped against statement masters, which you have received from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetReferenceNumbersResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:GetReferenceNumbersResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetDetailsRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Params" type="spr:GetDetailsParams">             <xsd:annotation>               <xsd:documentation>The parameters for retrieving the statement lines you are interested in.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetDetailsRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves information about statement lines, using the parameters you specify.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:GetDetailsRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetDetailsResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Details" type="spr:Details">             <xsd:annotation>               <xsd:documentation>Contains information about the statement lines and statement value.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GetDetailsResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:GetDetailsResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ValidateRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="GetDetailsParams" type="spr:GetDetailsParams">             <xsd:annotation>               <xsd:documentation>The parameters for retrieving the statement lines you want to validate.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Folders" type="spr:FolderList">             <xsd:annotation>               <xsd:documentation>Contains information about the folders in which the statement lines are held.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="LogID" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The name of the log to which the details of the Validate process will be written.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ValidateRequestVerb">     <xsd:annotation>       <xsd:documentation>Validates the generated documents in accordance with the options specified in the transaction type master.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:ValidateRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ValidateResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="FullKey" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Folders" type="spr:FolderList">             <xsd:annotation>               <xsd:documentation>The list of folders containing the statement lines, which have attempted to validate.               The folders element for this response will be taken from the Folders element of ValidateRequest.           The status values may be modified to indicate an error, or a change of posting location from           books to Intray.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="ValidateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:ValidateResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GenerateRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="GetDetailsParams" type="spr:GetDetailsParams">             <xsd:annotation>               <xsd:documentation>The parameters for retrieving the statement lines for which you want to generate document proposals.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Params" type="spr:GenerateParams">             <xsd:annotation>               <xsd:documentation>Contains the parameters for generating documents for the statement lines.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="LogID" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The name of the log to which the details of the Generate process will be written.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GenerateRequestVerb">     <xsd:annotation>       <xsd:documentation>Generates a document or documents for the statement lines.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:GenerateRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GenerateResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="FullKey" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="DocProposals" type="spr:DocProposals">             <xsd:annotation>               <xsd:documentation>The generated documents containing the proposed transactions.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Folders" type="spr:FolderList">             <xsd:annotation>               <xsd:documentation>Contains the list of folders and information about the lines held in the folders.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="GenerateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:GenerateResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="PostRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="GetDetailsParams" type="spr:GetDetailsParams">             <xsd:annotation>               <xsd:documentation>The parameters for retrieving the statement lines you want to post.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Folders" type="spr:FolderList">             <xsd:annotation>               <xsd:documentation>The list of folders containing the statement lines.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="DocProposals" type="spr:DocProposals">             <xsd:annotation>               <xsd:documentation>The proposed documents which were created using the Generate request.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="LogID" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The name of the log to which the details of the Post process will be written.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="PostRequestVerb">     <xsd:annotation>       <xsd:documentation>Posts the documents which have been generated.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:PostRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="PostResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="FullKey" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the masters and the statement you want to use in Statement Processing</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Folders" type="spr:FolderList">             <xsd:annotation>               <xsd:documentation>Contains the list of folders and information on the lines held in the folders.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="PostResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:PostResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="BrowseRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="SelType" type="gsl:DetailsLocation">             <xsd:annotation>               <xsd:documentation>The source of the data you want to browse: Books, Intray or Archive.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="GslCode" type="com:typeGeneralCodeB">             <xsd:annotation>               <xsd:documentation>The code of the selector master you are using to select the statement lines.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="WholeDocuments" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If TRUE, specifies that you want to browse whole documents.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="RowLimit" type="com:typeULong">             <xsd:annotation>               <xsd:documentation>The maximum number of lines you want to retrieve for browsing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="ApplicationFilter" type="gsl:VocListData">             <xsd:annotation>               <xsd:documentation>The search criteria to be applied by the application when selecting the data. These are as set up in the selector master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="UserFilter" type="gsl:VocListData">             <xsd:annotation>               <xsd:documentation>The additional search criteria specified by the user, to be applied when selecting the data. This may be, for example, a document code or a range of codes.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="HierarchyFilter" type="gsl:VocListData">             <xsd:annotation>               <xsd:documentation>The additional search criteria which will be applied to select data within specified hierarchies.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Columns" type="sel:CellList">             <xsd:annotation>               <xsd:documentation>The columns in which the retrieved data will be displayed.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="BrowseRequestVerb">     <xsd:annotation>       <xsd:documentation>Allows you to browse statement information.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:BrowseRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="BrowseResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element minOccurs="0" name="Selection" type="sel:Selection">             <xsd:annotation>               <xsd:documentation>This element contains the data you have selected for browsing, which is returned from the server.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="BrowseResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:BrowseResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="LockRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the code of the company, the masters and the statement, identifying the statement you want to lock for your own use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="LockRequestVerb">     <xsd:annotation>       <xsd:documentation>Locks the statement you want to use, and prevents other users from accessing it during your process.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:LockRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="LockResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the codes of the company, the masters and the statement, identifying the statement you want to lock for your own use in Statement Processing.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="LockToken" type="com:typeText">             <xsd:annotation>               <xsd:documentation>A random alpha-numeric string which is returned when you send a request to lock a statement. You need the LockToken if you want to initiate any further processing for the locked statement, as it indicates that you are the user with write-access to that table.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="LockResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:LockResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UnlockRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the code of the company, the masters and the statement, identifying the statement you want to unlock.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UnlockRequestVerb">     <xsd:annotation>       <xsd:documentation>Unlocks the statement when you have finished using it, allowing other users to access it.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" name="Request" type="spr:UnlockRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UnlockResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="Key" type="spr:FullKey">             <xsd:annotation>               <xsd:documentation>The key containing the code of the company, the masters and the statement, identifying the statement you want to unlock.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="UnlockResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="spr:UnlockResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="StatementRequest">     <xsd:annotation>       <xsd:appinfo build:funcSecValue="350" build:readOnly="true"/>       <xsd:documentation>This service allows you to run and monitor statement processing.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceRequest">         <xsd:sequence>           <xsd:element minOccurs="0" name="GetHeader" type="spr:GetHeaderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="233" build:readOnly="true"/>               <xsd:documentation>Retrieves the information in the statement header.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="GetReferenceNumbers" type="spr:GetReferenceNumbersRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="234" build:readOnly="true"/>               <xsd:documentation>Retrieves the Reference Number map, which consists of a list of statement type masters and their associated statement reference numbers.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="GetDetails" type="spr:GetDetailsRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="235" build:readOnly="true"/>               <xsd:documentation>Retrieves information about statement lines, using the parameters you specify.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Validate" type="spr:ValidateRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="236" build:readOnly="true"/>               <xsd:documentation>Validates the generated documents in accordance with the options specified in the transaction type master.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Generate" type="spr:GenerateRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="237" build:readOnly="false"/>               <xsd:documentation>Generates a document or documents for the statement lines.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Post" type="spr:PostRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="238" build:readOnly="false"/>               <xsd:documentation>Posts the documents which have been generated.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Browse" type="spr:BrowseRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="239" build:readOnly="true"/>               <xsd:documentation>Allows you to browse statement information.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Lock" type="spr:LockRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="456" build:readOnly="false"/>               <xsd:documentation>Locks the statement you want to use, and prevents other users from accessing it during your process.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Unlock" type="spr:UnlockRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="457" build:readOnly="false"/>               <xsd:documentation>Unlocks the statement when you have finished using it, allowing other users to access it.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:complexType name="StatementResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you run or monitor statement processing functions.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ServiceResponse">         <xsd:sequence>           <xsd:element minOccurs="0" name="GetHeader" type="spr:GetHeaderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="GetReferenceNumbers" type="spr:GetReferenceNumbersResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="GetDetails" type="spr:GetDetailsResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Validate" type="spr:ValidateResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Generate" type="spr:GenerateResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Post" type="spr:PostResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Browse" type="spr:BrowseResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Lock" type="spr:LockResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="Unlock" type="spr:UnlockResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>    <xsd:element name="StatementRequest" type="spr:StatementRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to run and monitor statement processing.</xsd:documentation>     </xsd:annotation>   </xsd:element>   <xsd:element name="StatementResponse" type="spr:StatementResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you run or monitor statement processing functions.</xsd:documentation>     </xsd:annotation>   </xsd:element>  </xsd:schema>