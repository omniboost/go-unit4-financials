<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:com="http://www.coda.com/efinance/schemas/common" xmlns:ffd="http://www.coda.com/common/schemas/flexifield" xmlns:udf="http://www.coda.com/common/schemas/udfmaster" xmlns:atc="http://www.coda.com/common/schemas/attachment" xmlns:efm="http://www.coda.com/efinance/schemas/elementfiltermaster" xmlns:build="http://www.coda.com/common/schemas/funcsec" xmlns:elm="http://www.coda.com/efinance/schemas/elementmaster" targetNamespace="http://www.coda.com/efinance/schemas/elementmaster" elementFormDefault="qualified"><xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="../../../wsdl/finance/common/common.xsd"/><xsd:import namespace="http://www.coda.com/common/schemas/flexifield" schemaLocation="../../../wsdl/common/flexifield/flexifield.xsd"/><xsd:import namespace="http://www.coda.com/common/schemas/attachment" schemaLocation="../../../wsdl/common/attachment/attachment.xsd"/><xsd:import namespace="http://www.coda.com/efinance/schemas/elementfiltermaster" schemaLocation="../../../wsdl/finance/elementfiltermaster/elementfiltermaster.xsd"/><xsd:import namespace="http://www.coda.com/common/schemas/udfmaster" schemaLocation="../../../wsdl/common/udfmaster/udfmaster.xsd"/>          <xsd:complexType name="Trader">     <xsd:annotation>       <xsd:documentation>This element holds a trader.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for this trader in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the trader is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElmCode" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The code of the umbrella element within which the trader is held.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElmLevel" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The level of the umbrella element within which the trader is held. A number from 1 to 8 inclusive.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>The trader code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Name" type="com:typeAddressName">         <xsd:annotation>           <xsd:documentation>The name for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Tax" type="elm:Tax">         <xsd:annotation>           <xsd:documentation>Holds tax information for the specified trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>           <xsd:element minOccurs="0" name="Address" type="elm:TraderAddress">         <xsd:annotation>           <xsd:documentation>Holds address information for the specified trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>           <xsd:element minOccurs="0" name="Bank" type="elm:TraderBank">         <xsd:annotation>           <xsd:documentation>Holds information about the specified trader&apos;s bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>        </xsd:complexType>  <xsd:complexType name="Tax">     <xsd:annotation>       <xsd:documentation>Holds tax information for the specified trader.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="VAT" type="com:typeVATB">         <xsd:annotation>           <xsd:documentation>The tax number for this trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Ten99Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the 1099 tax master that applies to the specified trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FederalTax" type="com:typeFederalTax">         <xsd:annotation>           <xsd:documentation>The Federal tax ID of the specified trader. The format of a Federal tax ID is NN-NNNNNNN, where N is any digit. Typically, a Federal tax ID is used by suppliers who have employees.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SocialSecurity" type="com:typeSocialSecurity">         <xsd:annotation>           <xsd:documentation>The Social security number of the specified trader. The format of a Social security number is NNN-NN-NNNN, where N is any digit. Typically, a Social security number is used by suppliers who do not have employees.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SecondTIN" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether a second tax identification notice (TIN) has been sent.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="TraderAddress">     <xsd:annotation>       <xsd:documentation>Holds address information for the specified trader.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The post code for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Tel" type="com:typeTel">         <xsd:annotation>           <xsd:documentation>The telephone number for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Fax" type="com:typeFax">         <xsd:annotation>           <xsd:documentation>The fax number for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Country" type="com:typeTextB">         <xsd:annotation>           <xsd:documentation>The code for the country master for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Language" type="com:typeLanguage">         <xsd:annotation>           <xsd:documentation>The language used at this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EMail" type="com:typeEMailAddrB">         <xsd:annotation>           <xsd:documentation>The email address for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="TraderBank">     <xsd:annotation>       <xsd:documentation>Holds information about the specified trader&apos;s bank.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="AccountNumber" type="com:typeBankAccNum">         <xsd:annotation>           <xsd:documentation>The bank account number.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SortCode" type="com:typeBankSort">         <xsd:annotation>           <xsd:documentation>The bank&apos;s sort code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AccountName" type="com:typeBankAccName">         <xsd:annotation>           <xsd:documentation>An account name for the bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AccountRef" type="com:typeBankAccRef">         <xsd:annotation>           <xsd:documentation>The bank account reference, which is used when making payments or collections by electronic transfer.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="BankName" type="com:typeBankName">         <xsd:annotation>           <xsd:documentation>A name for the person or company at this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The postal code for this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Country" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for a country master for this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SWIFT" type="com:typeBankSwift">         <xsd:annotation>           <xsd:documentation>The bank&apos;s SWIFT address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IBAN" type="com:typeIBANB">         <xsd:annotation>           <xsd:documentation>The International Bank Account Number (IBAN) of the bank account.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SEPAIdentifier" type="com:typeSEPAIdB">         <xsd:annotation>           <xsd:documentation>The SEPA identifier.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="TraderKey">     <xsd:annotation>       <xsd:documentation>This element is a key consisting of a company code, element code, element level and trader code which uniquely identifies a trader.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the trader is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElmCode" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The code for the umbrella element within which the trader is held.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElmLevel" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The level of the umbrella element within which the trader is held.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>A code identifying the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderKeys">     <xsd:annotation>       <xsd:documentation>This element contains a list of trader keys, identifying the traders being purged by the PurgeTraderRequest.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Key" type="elm:TraderKey">         <xsd:annotation>           <xsd:documentation>This element is a key consisting of a company code, element code, element level and trader code which uniquely identifies a trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderDetail">     <xsd:annotation>       <xsd:documentation>Contains parameters you can complete to determine which traders are listed by a ListTraderRequest.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Key" type="elm:TraderKey">         <xsd:annotation>           <xsd:documentation>This element is a key consisting of a company code, element code, element level and trader code which uniquely identifies a trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Name" type="com:typeAddressName">         <xsd:annotation>           <xsd:documentation>The trader name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The first address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The second address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The postal code for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Telephone" type="com:typeTel">         <xsd:annotation>           <xsd:documentation>The telephone number for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EMail" type="com:typeEMailAddr">         <xsd:annotation>           <xsd:documentation>The e-mail address for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderDetails">     <xsd:annotation>       <xsd:documentation>Contains extended key information for the listed traders.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Detail" type="elm:TraderDetail">         <xsd:annotation>           <xsd:documentation>Contains extended key information for a listed trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderSelectFilter">     <xsd:annotation>       <xsd:documentation>A filter for selecting traders.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="LastUsed" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>Filter for traders that were last used on or before this date.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Created" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>Filter for traders that were created on or before this date.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CmpCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>Filter for traders in this company. This can be wildcarded.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ElmCode" type="com:typeElmCodeWild">         <xsd:annotation>           <xsd:documentation>Filter for traders in this umbrella element. This can be wildcarded.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ElmLevel" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>Filter for traders in umbrella elements at this element level.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Code" type="com:typeTraderCodeWild">         <xsd:annotation>           <xsd:documentation>Filter for a trader with this trader code. This can be wildcarded.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="MaxRows" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The maximum number of traders to be returned from the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderSelectDetail">     <xsd:annotation>       <xsd:documentation>Contains details of a trader selected by the TraderSelectFilter defined in the SelectTraderRequest.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Key" type="elm:TraderKey">         <xsd:annotation>           <xsd:documentation>This element is a key consisting of a company code, element code, element level and trader code which uniquely identifies a trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Name" type="com:typeAddressName">         <xsd:annotation>           <xsd:documentation>The trader name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The first address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The second address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The third address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The fourth address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The fifth address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The sixth address line for the trader.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="LastUsed" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date when the trader was last used.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Created" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date when the trader was created.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderSelectDetails">     <xsd:annotation>       <xsd:documentation>Contains details of the traders selected by the TraderSelectFilter defined in the SelectTraderRequest.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Detail" type="elm:TraderSelectDetail">         <xsd:annotation>           <xsd:documentation>Contains details of a trader selected by the TraderSelectFilter defined in the SelectTraderRequest.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="Validation">     <xsd:annotation>       <xsd:documentation>Contains the document and media master codes selected in the current input session, against which the new or updated trader details will be validated.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="DocCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the document master being used in this input session.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="MediaCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the media master being used in this input session.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="AllCmpTraderFilter">     <xsd:annotation>       <xsd:documentation>A filter for selecting all trader codes in the specified company regardless of which umbrella element the traders belong to.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the company to search for trader codes.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Code" type="com:typeTraderCodeWild">         <xsd:annotation>           <xsd:documentation>The trader code to search for in the specified company. This can be wildcarded.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="MaxCodes" type="xsd:integer">         <xsd:annotation>           <xsd:documentation>The maximum number of trader codes to be returned from the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="TraderCodes">     <xsd:annotation>       <xsd:documentation>Contains the list of trader codes returned by the ListAllTraderRequest.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Code" type="com:typeTraderCode">         <xsd:annotation>           <xsd:documentation>A trader code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:element name="Trader" type="elm:Trader">     <xsd:annotation>       <xsd:documentation>This element holds a trader.</xsd:documentation>     </xsd:annotation>   </xsd:element>           <xsd:complexType name="AddTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Trader" type="elm:Trader">             <xsd:annotation>               <xsd:documentation>Contains the information for the trader you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Validation" type="elm:Validation">             <xsd:annotation>               <xsd:documentation>Contains the document and media master codes selected in the current input session, against which the new trader details will be validated.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates a new trader in the database using the trader information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:AddTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to create the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="ElmCode" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the umbrella element within which you attempted to create the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="ElmLevel" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the umbrella element within which you attempted to create the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeTraderCode">             <xsd:annotation>               <xsd:documentation>The code for the trader which you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this trader in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:AddTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="UpdateTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Trader" type="elm:Trader">             <xsd:annotation>               <xsd:documentation>Contains the information for the trader you want to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Validation" type="elm:Validation">             <xsd:annotation>               <xsd:documentation>Contains the document and media master codes selected in the current input session, against which the updated trader details will be validated.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates a trader in the database using the trader information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:UpdateTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to update the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="ElmCode" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the umbrella element within which you attempted to update the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="ElmLevel" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the umbrella element within which you attempted to update the trader.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeTraderCode">             <xsd:annotation>               <xsd:documentation>The code for the trader which you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this trader in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:UpdateTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:TraderKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the trader you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified trader from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element minOccurs="0" name="Trader" type="elm:Trader">             <xsd:annotation>               <xsd:documentation>Contains the trader information you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="ListTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="elm:TraderDetail">             <xsd:annotation>               <xsd:documentation>A filter that selects the traders to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves extended key information for the specified traders from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:ListTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Keys" type="elm:TraderDetails">             <xsd:annotation>               <xsd:documentation>Contains extended key information for the listed traders.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:ListTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="ListAllTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="elm:AllCmpTraderFilter">             <xsd:annotation>               <xsd:documentation>A filter for selecting all trader codes in the specified company regardless of which umbrella element the traders belong to.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListAllTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Lists all trader codes in the specified company regardless of which umbrella element the traders belong to.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:ListAllTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListAllTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Filter" type="elm:AllCmpTraderFilter">             <xsd:annotation>               <xsd:documentation>The filter sent with the ListAllTraderRequest corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Codes" type="elm:TraderCodes">             <xsd:annotation>               <xsd:documentation>The list of trader codes returned by the ListAllTraderRequest corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListAllTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:ListAllTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="SelectTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="elm:TraderSelectFilter">             <xsd:annotation>               <xsd:documentation>A filter for selecting traders.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Selects traders matching the specified filter.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:SelectTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Filter" type="elm:TraderSelectFilter">             <xsd:annotation>               <xsd:documentation>The filter sent with the SelectTraderRequest corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Details" type="elm:TraderSelectDetails">             <xsd:annotation>               <xsd:documentation>Contains details of the traders selected by the SelectTraderRequest corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SelectTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:SelectTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="PurgeTraderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="LogTitle" type="com:typeLogTitle">             <xsd:annotation>               <xsd:documentation>The title of a log file in which details of the purge trader session are recorded.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Filter" type="elm:TraderSelectFilter">             <xsd:annotation>               <xsd:documentation>A filter for selecting traders.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Keys" type="elm:TraderKeys">             <xsd:annotation>               <xsd:documentation>Contains the keys identifying the traders you want to purge.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PurgeTraderRequestVerb">     <xsd:annotation>       <xsd:documentation>Purges the specified unused traders from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:PurgeTraderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PurgeTraderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="LogTitle" type="com:typeLogTitle">             <xsd:annotation>               <xsd:documentation>The title of a log file in which details of the purge trader session are recorded.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Filter" type="elm:TraderSelectFilter">             <xsd:annotation>               <xsd:documentation>The filter sent with the PurgeTraderRequest corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="PurgeTraderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:PurgeTraderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="TraderRequest">     <xsd:annotation>    <xsd:appinfo build:funcSecValue="330" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain traders.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceRequest">     <xsd:sequence>      <xsd:element minOccurs="0" name="Add" type="elm:AddTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="125" build:readOnly="false"/>               <xsd:documentation>Creates a new trader in the database using the trader information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Update" type="elm:UpdateTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="126" build:readOnly="false"/>               <xsd:documentation>Updates a trader in the database using the trader information you provide.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Get" type="elm:GetTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="127" build:readOnly="true"/>               <xsd:documentation>Retrieves the specified trader from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="List" type="elm:ListTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="129" build:readOnly="true"/>               <xsd:documentation>Retrieves extended key information for the specified traders from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="ListAll" type="elm:ListAllTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="1" build:readOnly="true"/>               <xsd:documentation>Lists all trader codes in the specified company regardless of which umbrella element the traders belong to.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Select" type="elm:SelectTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="2" build:readOnly="true"/>               <xsd:documentation>Selects traders matching the specified filter.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Purge" type="elm:PurgeTraderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="3" build:readOnly="false"/>               <xsd:documentation>Purges the specified unused traders from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="TraderResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain traders.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceResponse">     <xsd:sequence>      <xsd:element minOccurs="0" name="Add" type="elm:AddTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Update" type="elm:UpdateTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Get" type="elm:GetTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="List" type="elm:ListTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="ListAll" type="elm:ListAllTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Select" type="elm:SelectTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Purge" type="elm:PurgeTraderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:element name="TraderRequest" type="elm:TraderRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain traders.</xsd:documentation>     </xsd:annotation>   </xsd:element>  <xsd:element name="TraderResponse" type="elm:TraderResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain traders.</xsd:documentation>     </xsd:annotation>   </xsd:element>               <xsd:complexType name="FinderRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="FinderFilter" type="elm:ElementFinderFilter">             <xsd:annotation>               <xsd:documentation>A filter that selects the element masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FinderRequestVerb">     <xsd:annotation>       <xsd:documentation>Searches the database for the specified element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:FinderRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FinderResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="FinderFilter" type="elm:ElementFinderFilter">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the element masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Keys" type="elm:elmKeyDataNamed">             <xsd:annotation>               <xsd:documentation>Contains the key information for the listed element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FinderResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:FinderResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="FilterRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="efm:ElementFilterKey">             <xsd:annotation>               <xsd:documentation>This element contains key information for specifying an element filter master to use.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="MaxKeys" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The maximum number of element masters to be returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="ReturnNames" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If TRUE, specifies that names should be returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element1" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 1.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element2" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 2.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element3" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 3.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element4" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 4.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element5" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 5.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element6" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 6.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element7" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 7.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element8" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 8.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="EnableMasterSecurityFilter" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If present and TRUE, restricts returned masters to those for which the logged on user has read or read/write master security access.</xsd:documentation>             </xsd:annotation>           </xsd:element>                     <xsd:element minOccurs="0" name="EnableAccountWriteSecurityFilter" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If present and TRUE, restricts returned masters for which the logged on user has write account security access.</xsd:documentation>             </xsd:annotation>           </xsd:element>                     <xsd:element minOccurs="0" name="SearchTerm" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>If present, is used as a wildcard search criteria against the element code and short name (i.e. elements which match either on the code or on the shortname will be returned) for elements selected by the given element filter master. This is an additional filter applied to the list of elements from the filter.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FilterRequestVerb">     <xsd:annotation>       <xsd:documentation>Searches the database for element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:FilterRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FilterResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="efm:ElementFilterKey">             <xsd:annotation>               <xsd:documentation>This element contains key information identifying the filter master sent in the request corresponding to this response.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="MaxKeys" type="xsd:int">             <xsd:annotation>               <xsd:documentation>The maximum number of element masters to be returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="ReturnNames" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If TRUE, specifies that names have been returned.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element1" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 1.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element2" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 2.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element3" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 3.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element4" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 4.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element5" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 5.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element6" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 6.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element7" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 7.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element8" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>Element code at level 8.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="EnableMasterSecurityFilter" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If present and TRUE, restricts returned masters to those for which the logged on user has read or read/write master security access.</xsd:documentation>             </xsd:annotation>           </xsd:element>                     <xsd:element minOccurs="0" name="EnableAccountWriteSecurityFilter" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If present and TRUE, restricts returned masters for which the logged on user has write account security access.</xsd:documentation>             </xsd:annotation>           </xsd:element>                     <xsd:element minOccurs="0" name="SearchTerm" type="com:typeElmCodeB">             <xsd:annotation>               <xsd:documentation>If present, is used as a wildcard search criteria against the element code and short name (i.e. elements which match either on the code or on the shortname will be returned) for elements selected by the given element filter master. This is an additional filter applied to the list of elements from the filter.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Keys" type="elm:elmKeyDataNamed">             <xsd:annotation>               <xsd:documentation>Contains the key information for the listed element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FilterResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:FilterResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="ElementFinderRequest">     <xsd:annotation>    <xsd:appinfo build:funcSecValue="305" build:readOnly="true"/>       <xsd:documentation>This service allows you to search for element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceRequest">     <xsd:sequence>      <xsd:element minOccurs="0" name="Find" type="elm:FinderRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="26" build:readOnly="true"/>               <xsd:documentation>Searches the database for the specified element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Filter" type="elm:FilterRequestVerb">             <xsd:annotation>      <xsd:appinfo build:funcSecValue="509" build:readOnly="true"/>               <xsd:documentation>Searches the database for element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ElementFinderResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you search for element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceResponse">     <xsd:sequence>      <xsd:element minOccurs="0" name="Find" type="elm:FinderResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Filter" type="elm:FilterResponseVerb">             <xsd:annotation>               <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:element name="ElementFinderRequest" type="elm:ElementFinderRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to search for element masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>  <xsd:element name="ElementFinderResponse" type="elm:ElementFinderResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you search for element masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>                <xsd:complexType name="UmbrellaData">     <xsd:annotation>       <xsd:documentation>Holds details of values that may be provided and values that must be provided for temporary suppliers within this umbrella element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="AllowTaxNumber" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that the temporary supplier&apos;s tax number can be provided.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AllowLanguageCode" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that a language code can be provided for the temporary supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AllowCountryCode" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that a country code can be provided for the temporary supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ForceTerms" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that discount terms must be provided if the document master allows terms.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ForceTaxNumber" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that the temporary supplier&apos;s tax number must be provided. When this is TRUE, the tax number must be provided, even if AllowTaxNumber is set to FALSE.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="ForceAddress" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that at least the first line of the temporary supplier&apos;s address must be provided.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Force1099Details" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that the temporary supplier&apos;s federal tax ID or social security number must be provided. When this is TRUE, you must also set Ten99 to TRUE.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType abstract="true" name="Master">   <xsd:sequence>    <xsd:element minOccurs="0" name="TimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxesTimeStamp" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the element master is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The element code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The level at which this element is defined. A number from 1 to 8 inclusive.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The full name for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The abbreviated name for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CurrencyCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>A currency code identifying the currency associated with this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SubAnalyse" type="com:typeCtYesNoSome">         <xsd:annotation>           <xsd:documentation>Indicates whether the element can be subanalysed.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for the tax master for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AccountType" type="com:typeCtPlBal">         <xsd:annotation>           <xsd:documentation>Identifies the account type of accounts which use this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DateAccountOpened" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date on which the element was created.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="StartPeriod" type="com:typePeriod">         <xsd:annotation>           <xsd:documentation>The first period in which documents may be posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EndPeriod" type="com:typePeriod">         <xsd:annotation>           <xsd:documentation>The last period in which documents may be posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CompulsoryDescr" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether users must enter a description in Input against any document line posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="KeepTurnover" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether turnover values are maintained for the element for each period.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AccountSummary" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for the account summary master for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ElementStatus" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The credit status of this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ExternalValidation" type="com:typeDllName">         <xsd:annotation>           <xsd:documentation>The name of the DLL used for extended field validation.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="MemoStatus" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>A reporting field.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="BalancingAccount" type="com:typeAcCodeB">         <xsd:annotation>           <xsd:documentation>The account to which balancing entries are posted. If you are balancing at element level 1, an asterisk represents the first element of the account code. If you are balancing at elements 1 and 2, both these elements are represented by an asterisk.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SubsLevel" type="com:typeElmSubsLevel">         <xsd:annotation>           <xsd:documentation>The level at which the specified element can be inserted in an account code as part of element substitution.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SubsElement" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>The code for the element which can be inserted in an account code as part of element substitution.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Matchable" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether the element is a matchable element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Summary" type="com:typeCtSummary">         <xsd:annotation>           <xsd:documentation>The element level at which payment postings are summarised.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Split" type="com:typeCtSplit">         <xsd:annotation>           <xsd:documentation>The element level to the left of which wildcards are sorted and payments produced for each of the splits.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Settlement" type="com:typeAcCodeB">         <xsd:annotation>           <xsd:documentation>The settlement account for payments for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ForceDisperse" type="com:typeCtForceDisperse">         <xsd:annotation>           <xsd:documentation>Specifies whether a user must select Disperse if this element occurs in a detail line during Matching or Background Matching.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="UserStatus" type="com:typeStatUserB">         <xsd:annotation>           <xsd:documentation>The default user status.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PayStatus" type="com:typeCtStatPayElm">         <xsd:annotation>           <xsd:documentation>The default payment status for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="RecStatus" type="com:typeCtStatRec">         <xsd:annotation>           <xsd:documentation>The reconciliation status of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EnablePay" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether the element can be selected and processed by a Payment and Collection proposal.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DefaultMedia" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for the default media master for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PaperMedia" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether document lines using this element can be paid by paper means such as printed cheques.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ElecMedia" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether document lines using this element can be paid by electronic means.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PayNumber" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The next payment number that will be assigned to this element. This number is read-only.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CustomerSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Identifies elements which represent customers or suppliers.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IsCustomer" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that this Customer/Supplier element is a customer (only).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IsSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates that this Customer/Supplier element is a supplier (only).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DiscountEnable" type="com:typeCtCalcDisc">         <xsd:annotation>           <xsd:documentation>Indicates whether early settlement discount is allowed on document lines posted against the element and if so, whether the discount is net of tax.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxMethod" type="com:typeCtCalcTax">         <xsd:annotation>           <xsd:documentation>Indicates whether tax is gross or net of discount.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Terms" type="com:typeTermB">         <xsd:annotation>           <xsd:documentation>The terms, expressed as a soft date, used to calculate a document&apos;s due date.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxAdjustment" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether tax adjustments are calculated for discounts and write-offs during Pay, Matching, and Background Matching.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxRepESL" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether the element is included on European Sales List reports.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxRepIntra" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether the element is included on Intrastat reports.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="VAT" type="com:typeVATB">         <xsd:annotation>           <xsd:documentation>The VAT number for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Ten99" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether 1099 reporting/processing is required for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="FederalTax" type="com:typeFederalTax">         <xsd:annotation>           <xsd:documentation>The Federal Tax identification number (for tax purposes in the United States).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SocialSecurity" type="com:typeSocialSecurity">         <xsd:annotation>           <xsd:documentation>The Social Security number for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Ten99Code" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for the 1099 master for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SecondTIN" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether a second tax identification notice (TIN) has been sent.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SIC" type="com:typeSIC">         <xsd:annotation>           <xsd:documentation>The Standard Industry Code for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditManager" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>A code identifying the user who is responsible for credit management for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditRating" type="com:typeCrRating">         <xsd:annotation>           <xsd:documentation>The credit rating assigned to the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditRatingDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date on which the current credit rating was assigned to the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditReference" type="com:typeCrRef">         <xsd:annotation>           <xsd:documentation>The credit reference assigned to the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditAgency" type="com:typeCrAgy">         <xsd:annotation>           <xsd:documentation>The credit agency used for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PaymentIndex" type="com:typeCrPayIndex">         <xsd:annotation>           <xsd:documentation>The payment index.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ForceCreditLimit" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether the credit limit is enforced in Input. If True, it is enforced. If False, it is not enforced.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IndirectCode" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>The indirect element code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditLimit" type="com:typeMoneyB">         <xsd:annotation>           <xsd:documentation>The element&apos;s credit limit (matchable elements only).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditLimitDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date on which the credit limit expires.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditLimitCurrency" type="com:typeCtCreditLimitCurrency">         <xsd:annotation>           <xsd:documentation>The currency in which the element&apos;s credit limit is expressed.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ArcRecon" type="com:typeCtARCOptions">         <xsd:annotation>           <xsd:documentation>Indicates the element&apos;s contribution to determining whether an account&apos;s document lines can be archived when unreconciled.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ArcPaid" type="com:typeCtARCOptions">         <xsd:annotation>           <xsd:documentation>Indicates the element&apos;s contribution to determining whether an account&apos;s document lines can be archived when unpaid.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="UmbrellaElementDetails" type="elm:UmbrellaData">         <xsd:annotation>           <xsd:documentation>Holds details of values that may be provided and values that must be provided for temporary suppliers within this umbrella element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Shared" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether the element is shared across more than one company.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostedTo" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether any transactions have been posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PromptForAsset" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Set to TRUE if users will want to create assets when posting to this element. When TRUE, you can specify a value for AssetCategory.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AssetCategory" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default category to use for assets created when posting to this element. This value can only be set if PromptForAsset is TRUE.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Extension" type="com:ExtensionRef">         <xsd:annotation>           <xsd:documentation>The code of the extension master identifying the external routine that will validate the account code during Input.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="LastTransactions" type="elm:LastTransactions">         <xsd:annotation>           <xsd:documentation>Holds details of the last transactions posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="ProcOrders" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default print format to use for purchase orders.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcRequisitions" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default print format to use for requisitions.</xsd:documentation>         </xsd:annotation>       </xsd:element>  <xsd:element minOccurs="0" name="CreateDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date when this element master was created.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ModifyDate" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The date when this element master was last modified.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="User" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The user who last modified this element master (or the user who created this element master if no modify date exists).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReportingCode1" type="com:typeTextAny">         <xsd:annotation>           <xsd:documentation>A reporting code for this element master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReportingCode2" type="com:typeTextAny">         <xsd:annotation>           <xsd:documentation>A reporting code for this element master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReportingCode3" type="com:typeTextAny">         <xsd:annotation>           <xsd:documentation>A reporting code for this element master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code of the user extension master that will invoke the punchout function.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutMarketplace" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this punchout-enabled element should behave as a market place or as a normal punchout supplier. When set to TRUE, the element behaves as a market place.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutUrl" type="com:typeTextAnyB">         <xsd:annotation>           <xsd:documentation>The URL for the supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutDomain" type="com:typeExtRefB">         <xsd:annotation>           <xsd:documentation>The domain for the supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutEncoding" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>The encoding of the data that the punchout Web site will send back to Coda.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutUser" type="com:typeExtRefB">         <xsd:annotation>           <xsd:documentation>The user name for accessing the supplier&apos;s system.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutPassword" type="com:typeExtRefB">         <xsd:annotation>           <xsd:documentation>The password for the user name specified in PunchoutUser.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PunchoutItemDetailsCode" type="com:typeItemCodeB">         <xsd:annotation>           <xsd:documentation>The code for the product from which item details should be copied.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AutoReceipt" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If set, indicates that purchases from this supplier can be receipted automatically.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcStatus" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If set, prevents any further trading with this supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ToleranceCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code of the tolerance master containing the tolerances applicable to this supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="MatchingOffset" type="com:typeMatchingOffsetDays">         <xsd:annotation>           <xsd:documentation>The number of elapsed days between the date of a receipt and when it can be selected for purchase invoice matching.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcTransLimit" type="com:typeMoneyB">         <xsd:annotation>           <xsd:documentation>The maximum value allowed, in home currency, for transactions with this supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcCalloffs" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default print format to use for call-offs.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcGRNs" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default print format to use for GRNs.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcReturns" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The default print format to use for returns.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcEmailSalutation" type="com:typeTextAny">         <xsd:annotation>           <xsd:documentation>The message to be included when transmitting documents by e-mail to this supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ProcEmailSubject" type="com:typeTextAny">         <xsd:annotation>           <xsd:documentation>The text to be displayed in the subject line of all e-mail transmissions.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EUVATCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>Holds the tax code used by Invoice Matching for reporting on EU cross-border service transactions when tax is partly recoverable. This tax code must be defined as partly recoverable and using the reversing method.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Translations" type="elm:Translations">         <xsd:annotation>           <xsd:documentation>Holds details of translated names and short names for this element in various languages.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="LongName" type="com:typeLongNameb">         <xsd:annotation>           <xsd:documentation>The full name of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>The authorisation status of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>  <xsd:element minOccurs="0" name="AuthorisationWorkFlowId" type="com:typeDbGuidb">         <xsd:annotation>           <xsd:documentation>The authorisation workflow of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>  <xsd:element minOccurs="0" name="PrimaryAttachment" type="atc:AttachmentKey">         <xsd:annotation>           <xsd:documentation>This element holds a key to the primary attachment.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Quantities" type="elm:QuantityData">         <xsd:annotation>           <xsd:documentation>Holds details of the element&apos;s quantities.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Discounts" type="elm:DiscountData">         <xsd:annotation>           <xsd:documentation>Holds details of the discounts which the element is allowed.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>     </xsd:complexType>    <xsd:complexType name="QuantityElement">     <xsd:annotation>       <xsd:documentation>Holds details of one of the element&apos;s quantities.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="Used" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this quantity is used.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Title" type="com:typeQtyTitle">         <xsd:annotation>           <xsd:documentation>The title for this quantity.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Mand" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this quantity is mandatory.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="BalCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>A balance master code for this quantity. This field may be blank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Decimals" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The number of decimal places for this quantity when there is no balance code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="QuantityData">     <xsd:annotation>       <xsd:documentation>Holds details of the element&apos;s quantities.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="4" minOccurs="0" name="Quantity" type="elm:QuantityElement">         <xsd:annotation>           <xsd:documentation>Holds details of one of the element&apos;s quantities.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="DiscountData">     <xsd:annotation>       <xsd:documentation>Holds details of the discounts which the element is allowed.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="5" minOccurs="0" name="Discount" type="elm:DiscountElement">         <xsd:annotation>           <xsd:documentation>Holds details of one of the element&apos;s discounts.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="DiscountElement">     <xsd:annotation>       <xsd:documentation>Holds details of one of the element&apos;s discounts.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Terms" type="com:typeTerm">         <xsd:annotation>           <xsd:documentation>A soft date signifying the terms under which the discount is available.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Percentage" type="com:typePercent">         <xsd:annotation>           <xsd:documentation>The discount rate as a percentage.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="BankData">     <xsd:annotation>       <xsd:documentation>This element holds details of the element&apos;s banks.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Bank" type="elm:BankElement">         <xsd:annotation>           <xsd:documentation>Holds details of one of the element&apos;s banks.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="BankElement">     <xsd:annotation>       <xsd:documentation>Holds details of one of the element&apos;s banks.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="DefaultBank" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Indicates whether this is the element&apos;s default bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Tag" type="com:typeUWord">         <xsd:annotation>           <xsd:documentation>The tag for this bank, a number or string which can be used to identify the bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AccountNumber" type="com:typeBankAccNum">         <xsd:annotation>           <xsd:documentation>The bank account number.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="SortCode" type="com:typeBankSort">         <xsd:annotation>           <xsd:documentation>The bank&apos;s sort code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AccountName" type="com:typeBankAccName">         <xsd:annotation>           <xsd:documentation>An account name for the bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="AccountRef" type="com:typeBankAccRef">         <xsd:annotation>           <xsd:documentation>The bank account reference, which is used when making payments or collections by electronic transfer.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="BankName" type="com:typeBankName">         <xsd:annotation>           <xsd:documentation>A name for the person or company at this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The postal code for this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Country" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for a country master for this bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SWIFT" type="com:typeBankSwift">         <xsd:annotation>           <xsd:documentation>The bank&apos;s SWIFT address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntBankName" type="com:typeBankName">         <xsd:annotation>           <xsd:documentation>A name for the person or company at this intermediary bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntAddress6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntPostCode" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>The postal code for this intermediary bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IntCountry" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for a country master for this intermediary bank address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IBAN" type="com:typeIBANB">         <xsd:annotation>           <xsd:documentation>The International Bank Account Number (IBAN) of the bank account.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="SEPAIdentifier" type="com:typeSEPAIdB">         <xsd:annotation>           <xsd:documentation>The SEPA identifier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="LongName" type="com:typeLongNameb">         <xsd:annotation>           <xsd:documentation>The full name of the bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>                    <xsd:element minOccurs="0" name="Mandates" type="elm:MandateData">         <xsd:annotation>           <xsd:documentation>Holds details of the direct debit mandates that you have for this element bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>       </xsd:sequence>     </xsd:complexType>    <xsd:complexType name="MandateData">     <xsd:annotation>       <xsd:documentation>Holds details of the direct debit mandates that you have for this element bank.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Mandate" type="elm:Mandate">         <xsd:annotation>           <xsd:documentation>Holds details of one direct debit mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="Mandate">     <xsd:annotation>       <xsd:documentation>Holds details of one direct debit mandate.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="OwningElement" type="elm:elmFullKey">         <xsd:annotation>           <xsd:documentation>An element key. This key field is optional, but if it is provided, the values in its three fields must match the values in the three element key fields at the top level of the element master structure, or this mandate will be ignored by the server.</xsd:documentation>         </xsd:annotation>       </xsd:element>     <xsd:element minOccurs="0" name="Version" type="xsd:short">         <xsd:annotation>           <xsd:documentation>The version number of this mandate. Normally this is 0, unless you have asked for all mandate versions to be included (see the flag on the GetBanks verb).</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TransactionType" type="com:typeCtSEPATransactionType">         <xsd:annotation>           <xsd:documentation>The SEPA transaction type.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="MandateStatus" type="com:typeCtSEPAMandateStatus">         <xsd:annotation>           <xsd:documentation>The status of this mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="B2BIdentificationScheme" type="com:typeCtSEPAB2BId">         <xsd:annotation>           <xsd:documentation>Identifies which division of the SEPA direct debit scheme this mandate belongs to.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditorBankReferenceForCollection" type="com:typeSEPACreditorBankRef">         <xsd:annotation>           <xsd:documentation>The reference for the collections made under this mandate, as given by the creditor&apos;s bank.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditorReferenceParty" type="com:typeSEPARefParty">         <xsd:annotation>           <xsd:documentation>The identification code of the Creditor Reference Party.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditorReferencePartyName" type="com:typeSEPARefPartyName">         <xsd:annotation>           <xsd:documentation>The name of the Creditor Reference Party.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DebtorReferenceParty" type="com:typeSEPARefParty">         <xsd:annotation>           <xsd:documentation>The identification code of the Debtor Reference Party.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DebtorReferencePartyName" type="com:typeSEPARefPartyName">         <xsd:annotation>           <xsd:documentation>The name of the Debtor Reference Party.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="MandateReference" type="com:typeSEPAMandateRef">         <xsd:annotation>           <xsd:documentation>The unique mandate reference of this mandate. According to the rules for SEPA this reference identifies, for a given creditor, each mandate signed by any debtor for that creditor. Coda enforces the weaker condition that it must be unique within the element. You cannot change this value once you save the element master.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DateOfSigning" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date on which the mandate was signed.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="DateCancelled" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date on which the mandate was cancelled.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ElectronicSignature" type="com:typeSEPASignature">         <xsd:annotation>           <xsd:documentation>This is a placeholder for the information needed for the use of an electronic signature.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReasonAmendment" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The reason for amending the mandate. This is the code of an entity master of type SEPA Amendments Reasons.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReasonCancellation" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The reason for cancelling the mandate. This is the code of an entity master of type SEPA Cancellation Reasons.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ContractIdentification" type="com:typeSEPAContractId">         <xsd:annotation>           <xsd:documentation>The identifier of the underlying contract, as defined by the creditor.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PurposeForCollection" type="com:typeCtPaymentPurposeCode">         <xsd:annotation>           <xsd:documentation>The SEPA purpose.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CategoryPurpose" type="com:typeCtPaymentCategoryPurposeCode">         <xsd:annotation>           <xsd:documentation>The SEPA category purpose.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="IdentifierOriginalCreditor" type="com:typeSEPAId">         <xsd:annotation>           <xsd:documentation>The identifier of the original creditor who issued the mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="OriginalCreditorMandateReference" type="com:typeSEPAMandateRef">         <xsd:annotation>           <xsd:documentation>The unique mandate reference given by the original creditor who issued the mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TypeOfMandate" type="com:typeSepaTypeOfMandate">         <xsd:annotation>           <xsd:documentation>The type of the mandate, either paper or electronic.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="RemittanceReference" type="com:typeSEPARemittanceRef">         <xsd:annotation>           <xsd:documentation>The SEPA remittance information sent by the creditor to the debtor.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PaymentNumber" type="com:typeULong">         <xsd:annotation>           <xsd:documentation>The mandate payment number.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CollectionDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The mandate collection date.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AmendDate" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date this version of the mandate was created, either by amending the previous version or, in the case of version 0, by creating a new mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AmendUser" type="com:typeUserCode">         <xsd:annotation>           <xsd:documentation>The user who created this version of the mandate.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>      <xsd:complexType name="AddressElement">     <xsd:annotation>       <xsd:documentation>Holds details of an address.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="DefaultAddress" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this is the default address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Tag" type="com:typeUWord">         <xsd:annotation>           <xsd:documentation>The tag for this address, a number or string which can be used to identify the address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Name" type="com:typeAddressName">         <xsd:annotation>           <xsd:documentation>A name for the person or company associated with this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address1" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address2" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address3" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address4" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address5" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Address6" type="com:typeAddress">         <xsd:annotation>           <xsd:documentation>An address line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The post code for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Tel" type="com:typeTel">         <xsd:annotation>           <xsd:documentation>The telephone number for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Fax" type="com:typeFax">         <xsd:annotation>           <xsd:documentation>The fax number for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Country" type="com:typeTextB">         <xsd:annotation>           <xsd:documentation>The code for the country master for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Language" type="com:typeLanguage">         <xsd:annotation>           <xsd:documentation>The language used at this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Category" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The code for an entity master of the address category type.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EMail" type="com:typeEMailAddrB">         <xsd:annotation>           <xsd:documentation>The email address for this address.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>     </xsd:complexType>  <xsd:complexType name="AddressData">     <xsd:annotation>       <xsd:documentation>This element holds details of the element&apos;s addresses.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Address" type="elm:AddressElement">         <xsd:annotation>           <xsd:documentation>Holds details of an address.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="ChangeElement">     <xsd:annotation>       <xsd:documentation>Holds details of an element change.</xsd:documentation>     </xsd:annotation>  <xsd:sequence>   <xsd:element name="Vocab" type="com:typeCtOneOfN">          <xsd:annotation>           <xsd:documentation>Specifies the field changed.</xsd:documentation>          </xsd:annotation>        </xsd:element>   <xsd:element name="OldValue" type="xsd:string">          <xsd:annotation>             <xsd:documentation>The previous value of this field.</xsd:documentation>          </xsd:annotation>        </xsd:element>   <xsd:element name="NewValue" type="xsd:string">          <xsd:annotation>             <xsd:documentation>The new value of this field.</xsd:documentation>          </xsd:annotation>        </xsd:element>   <xsd:element name="Row" type="com:typeWord">          <xsd:annotation>             <xsd:documentation>The row number on a list for this field. -1 for non-list fields.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element name="Tag" type="com:typeWord">          <xsd:annotation>             <xsd:documentation>The tag of the bank that a mandate field is linked to. -1 for non-bank mandate list fields.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element name="DeleteRow" type="xsd:boolean">          <xsd:annotation>             <xsd:documentation>Should this row be deleted from the list</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element name="ExtraInformation" type="xsd:string">          <xsd:annotation>             <xsd:documentation>The extra indentifying information about this field.</xsd:documentation>          </xsd:annotation>        </xsd:element>  </xsd:sequence>     </xsd:complexType>    <xsd:complexType name="FFChangeElement">     <xsd:annotation>       <xsd:documentation>Holds details of an element change.</xsd:documentation>     </xsd:annotation>  <xsd:sequence>   <xsd:element name="FFMasCode" type="com:typeCode">          <xsd:annotation>           <xsd:documentation>Specifies flexi field master code of the field changed.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element name="ColumnName" type="com:typeFlexiColumnName">          <xsd:annotation>           <xsd:documentation>Specifies the flexi field column of the field changed.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element minOccurs="0" name="GridRowIndex" type="com:typeULong">          <xsd:annotation>           <xsd:documentation>Specifies index of the flexi field grid of the field changed.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element minOccurs="0" name="ColumnOnGrid" type="com:typeFlexiColumnName">          <xsd:annotation>           <xsd:documentation>Specifies the flexi field grid column of the field changed.</xsd:documentation>          </xsd:annotation>        </xsd:element>        <xsd:element name="DeleteRow" type="xsd:boolean">          <xsd:annotation>             <xsd:documentation>Should this row be deleted from the list</xsd:documentation>          </xsd:annotation>        </xsd:element>   <xsd:element name="OldValue" type="com:typeTextAnyWideb">          <xsd:annotation>             <xsd:documentation>The previous value of this field.</xsd:documentation>          </xsd:annotation>        </xsd:element>   <xsd:element name="NewValue" type="com:typeTextAnyWideb">          <xsd:annotation>             <xsd:documentation>The new value of this field.</xsd:documentation>          </xsd:annotation>        </xsd:element>  </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="ChangeData">     <xsd:annotation>       <xsd:documentation>This element holds details of changes made to the element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>   <xsd:element maxOccurs="unbounded" minOccurs="0" name="Change" type="elm:ChangeElement">          <xsd:annotation>             <xsd:documentation>Holds details of an element change.</xsd:documentation>          </xsd:annotation>        </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="FlexiFieldChangeData">     <xsd:annotation>       <xsd:documentation>This element holds details of changes made to the element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>        <xsd:element maxOccurs="unbounded" minOccurs="0" name="FlexiFieldChange" type="elm:FFChangeElement">          <xsd:annotation>             <xsd:documentation>Holds details of a flexi field change.</xsd:documentation>          </xsd:annotation>        </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="CommentData">     <xsd:annotation>       <xsd:documentation>Holds the element&apos;s comment list.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comment" type="com:typeTextB">         <xsd:annotation>           <xsd:documentation>A comment in the list.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="GroupData">     <xsd:annotation>       <xsd:documentation>Holds the element&apos;s group list, which is a collection of group master codes identifying the groups to which the element belongs.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="GroupCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>A group master code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="MediaData">     <xsd:annotation>       <xsd:documentation>Holds the element&apos;s media list, which is a collection of media master codes identifying the media by which payments are made.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="MediaCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>A media master code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="RuleData">     <xsd:annotation>       <xsd:documentation>Holds a list of the element&apos;s left rules.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Rule" type="elm:RuleElement">         <xsd:annotation>           <xsd:documentation>Holds details of an element rule.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="RuleElement">     <xsd:annotation>       <xsd:documentation>Holds details of an element rule.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Logical" type="com:typeCtRllLogical">         <xsd:annotation>           <xsd:documentation>A value signifying which logical connective is present on the line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="OpenBrackets" type="com:typeOpenBracket">         <xsd:annotation>           <xsd:documentation>A count of the number of opening brackets on the line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Vocabulary" type="com:typeCtRllVocab">         <xsd:annotation>           <xsd:documentation>A value signifying which vocabulary item is present on the line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Function" type="com:typeCtRllOperator">         <xsd:annotation>           <xsd:documentation>A value signifying which function is present on the line.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Value" type="com:typeElmCodeWild">         <xsd:annotation>           <xsd:documentation>The criterion value with which the vocabulary item is compared.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CloseBrackets" type="com:typeCloseBracket">         <xsd:annotation>           <xsd:documentation>A count of the number of closing brackets on the line.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="MnemonicData">     <xsd:annotation>       <xsd:documentation>Holds a list of the element&apos;s mnemonics.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Mnemonic" type="com:typeText">         <xsd:annotation>           <xsd:documentation>A mnemonic for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="PunchoutData">     <xsd:annotation>       <xsd:documentation>Holds the advanced punchout parameters for a supplier.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="PunchoutAdvancedParam" type="elm:PunchoutElement">         <xsd:annotation>           <xsd:documentation>Holds an advanced punchout parameter for a supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="PunchoutElement">     <xsd:annotation>       <xsd:documentation>Holds an advanced punchout parameter for a supplier.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Name" type="com:typeExtRefB">         <xsd:annotation>           <xsd:documentation>The name of the punchout parameter.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Type" type="com:typeCtOneOfN">         <xsd:annotation>           <xsd:documentation>The type of parameter. The possible values are listed below.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Value" type="com:typeExtRefB">         <xsd:annotation>           <xsd:documentation>The parameter value. This is only valid when Type is set to 1973 (Literal).</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="OutputDeviceData">     <xsd:annotation>       <xsd:documentation>This element contains output device data.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="OutputDeviceCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The output device code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="ElmTranslation">     <xsd:annotation>       <xsd:documentation>Holds the translated name and short name for this element in one language.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which this element master is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The code for this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The level at which this element is defined. A number from 1 to 8 inclusive.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Language" type="com:typeLanguage">         <xsd:annotation>           <xsd:documentation>The name for this language.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Name" type="com:typeName">         <xsd:annotation>           <xsd:documentation>The translated name for this element and language.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ShortName" type="com:typeShortName">         <xsd:annotation>           <xsd:documentation>The translated short name for this element and language.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>   <xsd:complexType name="ElmTransList">     <xsd:annotation>       <xsd:documentation>Holds a list of translated names and short names for this element in various languages.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="ElmTranslation" type="elm:ElmTranslation">         <xsd:annotation>           <xsd:documentation>Holds the translated name and short name for this element in one language.</xsd:documentation>         </xsd:annotation>       </xsd:element>      </xsd:sequence>  </xsd:complexType>   <xsd:complexType name="Translations">     <xsd:annotation>       <xsd:documentation>Holds details of translated names and short names for this element in various languages.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="List" type="elm:ElmTransList">         <xsd:annotation>           <xsd:documentation>Holds a list of translated names and short names for this element in various languages.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>   <xsd:complexType name="Element">     <xsd:annotation>       <xsd:documentation>This element holds an element master.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="elm:Master">     <xsd:sequence>      <xsd:element minOccurs="0" name="Addresses" type="elm:AddressData">             <xsd:annotation>               <xsd:documentation>Holds details of the element&apos;s addresses.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Banks" type="elm:BankData">             <xsd:annotation>               <xsd:documentation>Holds details of the element&apos;s banks.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Comments" type="elm:CommentData">             <xsd:annotation>               <xsd:documentation>Holds the element&apos;s comment list.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Groups" type="elm:GroupData">             <xsd:annotation>               <xsd:documentation>Holds the element&apos;s group list, which is a collection of group master codes identifying the groups to which the element belongs.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Medias" type="elm:MediaData">             <xsd:annotation>               <xsd:documentation>Holds the element&apos;s media list, which is a collection of media master codes identifying the media by which payments are made.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="LeftRules" type="elm:RuleData">             <xsd:annotation>               <xsd:documentation>Holds a list of the element&apos;s left rules.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="RightRules" type="elm:RuleData">             <xsd:annotation>               <xsd:documentation>Holds a list of the element&apos;s right rules.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Mnemonics" type="elm:MnemonicData">             <xsd:annotation>               <xsd:documentation>Holds a list of the element&apos;s mnemonics.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="PunchoutAdvancedParams" type="elm:PunchoutData">             <xsd:annotation>               <xsd:documentation>Holds the advanced punchout parameters for a supplier.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="OutputDevices" type="elm:OutputDeviceData">             <xsd:annotation>               <xsd:documentation>This element contains output device data.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="AttachmentsList" type="atc:AttachmentList">             <xsd:annotation>               <xsd:documentation>This element holds a list of attachments.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>     </xsd:complexType>  <xsd:complexType name="elmKey">   <xsd:sequence>    <xsd:element name="Level" type="com:typeElmLevel"/>    <xsd:element name="Code" type="com:typeElmCode"/>   </xsd:sequence>  </xsd:complexType>    <xsd:complexType name="elmFullKey">     <xsd:annotation>       <xsd:documentation>An element key. This key field is optional, but if it is provided, the values in its three fields must match the values in the three element key fields at the top level of the element master structure, or this mandate will be ignored by the server.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="CmpCode" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code for the company in which the element master is being maintained.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The level at which this element is defined. A number from 1 to 8 inclusive.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The element code.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="PrintListKeys">   <xsd:sequence>    <xsd:element name="MaxKeys" type="xsd:int"/>    <xsd:element name="FullWildKey" type="elm:elmFullKey"/>    <xsd:element minOccurs="0" name="LastModifiedFrom" type="com:typeDateB"/>    <xsd:element minOccurs="0" name="LastModifiedTo" type="com:typeDateB"/>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elm_XMLApplyTermsToDateParams">   <xsd:sequence>    <xsd:element name="Key" type="elm:elmFullKey"/>    <xsd:element minOccurs="0" name="BaseDate" type="com:typeDateB"/>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="VocabList">     <xsd:annotation>       <xsd:documentation>Contains the vocabulary items that you want to retrieve for the specified element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="VocabID" type="com:typeCtElmVocabEnum">         <xsd:annotation>           <xsd:documentation>An element vocabulary item that you want to retrieve.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="FetchKey">     <xsd:annotation>       <xsd:documentation>This is an element key used when fetching element information from the database. You specify the element and the information that you want to retrieve.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="elm:elmFullKey">     <xsd:sequence>      <xsd:element name="VocabList" type="elm:VocabList">             <xsd:annotation>               <xsd:documentation>Contains the vocabulary items that you want to retrieve for the specified element.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="elmReqFullKeys">     <xsd:annotation>       <xsd:documentation>This is an element key used when requesting a list of elements, as it incorporates a value for the maximum number of items to return. It also incorporates the company within which the element exists.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="MaxKeys" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The maximum number of items to be returned.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="FullWildKey" type="elm:elmFullKey">         <xsd:annotation>           <xsd:documentation>An element key.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmKeyDataElement">     <xsd:annotation>       <xsd:documentation>Holds the extended key information for one element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The element code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The element&apos;s short name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CustomerSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>A specification of whether the element represents a customer or supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="IsCustomer" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this element is a customer only.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="IsSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether this element is a supplier only.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmKeyData">     <xsd:annotation>       <xsd:documentation>This element contains extended key information for a list of elements.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Key" type="elm:elmKeyDataElement">         <xsd:annotation>           <xsd:documentation>Holds the extended key information for one element.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmTemporaryElmFilter">     <xsd:annotation>       <xsd:documentation>The temporary supplier filter.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="SelectAllTemporaryElmBanksAndAddresses" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>When retrieving bank or address lists for an umbrella element, specifies whether these lists are retrieved for all its temporary elements.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="UseTemporaryID" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether to use the TemporaryID field.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="UseTraderNameCode" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether to use the TraderNameCode field.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="TemporaryID" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The TemporaryID, which identifies a temporary supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="TraderNameCode" type="com:typeTraderCodeB">         <xsd:annotation>           <xsd:documentation>The trader code, which identifies a temporary supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmFullKeyWithTemporaryElmFilter">     <xsd:annotation>       <xsd:documentation>This is an element key that incorporates temporary supplier identifiers.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="FullKey" type="elm:elmFullKey">         <xsd:annotation>           <xsd:documentation>An element key that incorporates the company within which the element exists.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="UsingFilter" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>Specifies whether to use the temporary supplier filter.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TemporaryElmFilter" type="elm:elmTemporaryElmFilter">         <xsd:annotation>           <xsd:documentation>The temporary supplier filter.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="LastTransaction">     <xsd:annotation>       <xsd:documentation>Holds details of the last invoice transaction posted to this element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Code" type="com:typeGeneralCode">         <xsd:annotation>           <xsd:documentation>The code of the document used to post the last invoice transaction.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Number" type="com:typeDocNumAlphaB">         <xsd:annotation>           <xsd:documentation>The number of the document used to post the last invoice transaction.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Date" type="com:typeDate">         <xsd:annotation>           <xsd:documentation>The date when this transaction was posted.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Currency" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The currency of this transaction.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Value" type="com:typeMoneyB">         <xsd:annotation>           <xsd:documentation>The value of this transaction.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PayStatus" type="com:typeCtStatPayDocLine">         <xsd:annotation>           <xsd:documentation>The payment status of this transaction.           Payment status omitted if multiple different values present.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="LastTransactions">     <xsd:annotation>       <xsd:documentation>Holds details of the last transactions posted to this element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element minOccurs="0" name="Invoice" type="elm:LastTransaction">         <xsd:annotation>           <xsd:documentation>Holds details of the last invoice transaction posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Payment" type="elm:LastTransaction">         <xsd:annotation>           <xsd:documentation>Holds details of the last payment transaction posted to this element.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>          <xsd:complexType name="ElementHistoryEvent">       <xsd:annotation>         <xsd:documentation>This is the record of an event that changed this element.</xsd:documentation>       </xsd:annotation>       <xsd:sequence>         <xsd:element name="Action" type="com:typeCtOneOfN">           <xsd:annotation>             <xsd:documentation>The action creating this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element minOccurs="0" name="AuthorisationWorkFlowId" type="com:typeDbGuidb">           <xsd:annotation>             <xsd:documentation>If this event involved an authorisation workflow this will contain the id.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element minOccurs="0" name="Comment" type="com:typeTextB">           <xsd:annotation>             <xsd:documentation>A comment explaining this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element name="User" type="com:typeGeneralCode">           <xsd:annotation>             <xsd:documentation>The user triggering this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element name="Date" type="com:typeDateTime">           <xsd:annotation>             <xsd:documentation>The date and time of this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element name="AuthorisationStatus" type="com:typeCtOneOfN">           <xsd:annotation>             <xsd:documentation>The authorisation status after this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>         <xsd:element name="ChangeSetNumber" type="xsd:int">           <xsd:annotation>             <xsd:documentation>The element changes associated with this event.</xsd:documentation>           </xsd:annotation>         </xsd:element>       </xsd:sequence>  </xsd:complexType>   <xsd:complexType name="ElementHistoryEventList">       <xsd:annotation>         <xsd:documentation>This holds a list of changes made to the element.</xsd:documentation>       </xsd:annotation>    <xsd:sequence>         <xsd:element maxOccurs="unbounded" minOccurs="0" name="HistoryEvent" type="elm:ElementHistoryEvent">           <xsd:annotation>             <xsd:documentation>This is the record of an event that changed this element.</xsd:documentation>           </xsd:annotation>         </xsd:element>       </xsd:sequence>     </xsd:complexType>       <xsd:element name="Element" type="elm:Element">     <xsd:annotation>       <xsd:documentation>This element holds an element master.</xsd:documentation>     </xsd:annotation>   </xsd:element>  <xsd:element name="LastTransactions" type="elm:LastTransactions">     <xsd:annotation>       <xsd:documentation>Holds details of the last transactions posted against the specified element. These details are read-only and are applicable only to customer/supplier elements and umbrella elements.</xsd:documentation>     </xsd:annotation>   </xsd:element>             <xsd:complexType name="ListRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="elm:elmReqFullKeys">             <xsd:annotation>               <xsd:documentation>A filter that selects the elements to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves extended key information for the specified element masters from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:ListRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Filter" type="elm:elmReqFullKeys">             <xsd:annotation>               <xsd:documentation>The filter that was used to select the element masters to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Keys" type="elm:elmKeyData">             <xsd:annotation>               <xsd:documentation>Contains extended key information for the listed element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:ListResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="AddRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Element" type="elm:Element">             <xsd:annotation>               <xsd:documentation>Contains the information for the element master you want to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="FlexiFieldData" type="ffd:FlexiFieldDataMasterDataList">             <xsd:annotation>               <xsd:documentation>Contains flexi-field data.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddRequestVerb">     <xsd:annotation>       <xsd:documentation>Creates new element masters in the database using the element information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyRequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:AddRequest"/>     </xsd:sequence>     <xsd:attribute name="templatecmpcode" type="com:typeGeneralCode" use="optional">           <xsd:annotation>             <xsd:documentation>The code for the company in which the selected template exists.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>     <xsd:attribute name="templatecode" type="com:typeGeneralCode" use="optional">           <xsd:annotation>             <xsd:documentation>The code for the template on which the current element master is being based.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>              <xsd:attribute name="inhibitinitialisationfromtemplate" type="xsd:boolean" use="optional">           <xsd:annotation>             <xsd:documentation>If specified, prevents initialisation from the template.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>              <xsd:attribute name="autogeneratefromtemplate" type="xsd:boolean" use="optional">           <xsd:annotation>             <xsd:documentation>If specified, element codes are set to be automatically generated.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>    </xsd:extension>           </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddResponse">   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyResponse">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to create the element master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to create.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TaxesTimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>             </xsd:annotation>           </xsd:element>                 <xsd:element minOccurs="0" name="AutoGenerateRetry" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If specified, the initial attempt to generate a code failed.</xsd:documentation>             </xsd:annotation>           </xsd:element>                 <xsd:element minOccurs="0" name="AutoGeneratedCode" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>An automatically generated element code.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtOneOfN">           <xsd:annotation>              <xsd:documentation>The authorisation status of the element.</xsd:documentation>           </xsd:annotation>         </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AddResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:AddResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element master you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="UseMnemonic" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>Indicates that the element code specified in the Key for this Request, may (or may not) be a mnemonic.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="IncludeLastTransaction" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>Indicates whether details of the last transaction posted to the specified element(s) are retrieved.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="CheckForPostings" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If set, checks for postings to the specified element masters.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="FlexiFieldMasterCodeList" type="ffd:FlexiFieldDataKeyFlexiFieldMasterCodeList">             <xsd:annotation>               <xsd:documentation>Contains a list of flexi-field master codes.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element masters from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetRequest"/>     </xsd:sequence>    </xsd:extension>       </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company from which you attempted to retrieve the specified element master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to retrieve.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element" type="elm:Element">             <xsd:annotation>               <xsd:documentation>Contains the element master you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="FlexiFieldData" type="ffd:FlexiFieldData">             <xsd:annotation>               <xsd:documentation>Contains flexi-field data.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="DeleteRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element master you want to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified element masters from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:DeleteRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to delete the element master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to delete.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DeleteResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:DeleteResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="FetchRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:FetchKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element information you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FetchRequestVerb">     <xsd:annotation>       <xsd:documentation>Fetches the specified element information from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:FetchRequest"/>     </xsd:sequence>    </xsd:extension>       </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FetchResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company from which you attempted to fetch element information.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element whose information you attempted to fetch.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master whose information you attempted to fetch.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Element" type="elm:Element">             <xsd:annotation>               <xsd:documentation>Contains the element information fetched from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="FetchResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:FetchResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="UpdateRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Element" type="elm:Element">             <xsd:annotation>               <xsd:documentation>Contains the information for the element master you want to update. All XML elements in the element master and all lists must be specified.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="FlexiFieldData" type="ffd:FlexiFieldDataMasterDataList">             <xsd:annotation>               <xsd:documentation>Contains flexi-field data.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateRequestVerb">     <xsd:annotation>       <xsd:documentation>Updates element masters in the database using the element information you provide.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyRequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:UpdateRequest"/>     </xsd:sequence>    </xsd:extension>       </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateResponse">   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyResponse">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to update the element master.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to update.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TaxesTimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtOneOfN">           <xsd:annotation>              <xsd:documentation>The authorisation status of the element.</xsd:documentation>           </xsd:annotation>         </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="UpdateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:UpdateResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="SetRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Element" type="elm:Element">             <xsd:annotation>               <xsd:documentation>Identifies the element master you want to update and the new values for the fields you want to set. Include optional elements only for those fields you want to set. Lists, if specified, are replaced in their entirety.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="FlexiFieldData" type="ffd:FlexiFieldDataMasterDataList">             <xsd:annotation>               <xsd:documentation>Contains flexi-field data.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SetRequestVerb">     <xsd:annotation>       <xsd:documentation>Sets values for specified fields in specified element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyRequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:SetRequest"/>     </xsd:sequence>              <xsd:attribute name="deleteaddressesiflistempty" type="xsd:boolean" use="optional">           <xsd:annotation>             <xsd:documentation>If set, element addresses are deleted when deleting the element.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>         <xsd:attribute name="deletebanksiflistempty" type="xsd:boolean" use="optional">           <xsd:annotation>             <xsd:documentation>If set, element banks are deleted when deleting the element.</xsd:documentation>           </xsd:annotation>         </xsd:attribute>         </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SetResponse">   <xsd:complexContent>    <xsd:extension base="com:MultiCompanyResponse">     <xsd:sequence>      <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to set some of the element master&apos;s values.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master whose values you attempted to set.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master whose values you attempted to set.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="TaxesTimeStamp" type="com:typeWord">             <xsd:annotation>               <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtOneOfN">           <xsd:annotation>              <xsd:documentation>The authorisation status of the element.</xsd:documentation>           </xsd:annotation>         </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="SetResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element minOccurs="0" name="Companies" type="com:Companies">             <xsd:annotation>               <xsd:documentation>Contains the list of additional companies in which you want to set values for the selective fields. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:SetResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetBanksRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element bank you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="IncludeMandateVersions" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If true, specifies that all versions of each direct debit mandate are to be included in the response. If false, specifies that only the current version (that is, version 0) is to be included.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetBanksRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element&apos;s bank information from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetBanksRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetBanksResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element bank you attempted to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="IncludeMandateVersions" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>Contains the value of this flag that was used in the request, and thus indicates whether all versions of each direct debit mandate are to be included in the response or only the current version (that is, version 0).</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Banks" type="elm:BankData">             <xsd:annotation>               <xsd:documentation>Contains the element bank information you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetBanksResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetBanksResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetAddressesRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element address you want to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetAddressesRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element&apos;s address information from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetAddressesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetAddressesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element address you attempted to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Addresses" type="elm:AddressData">             <xsd:annotation>               <xsd:documentation>Contains the element address information you have retrieved from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetAddressesResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetAddressesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="GetChangesRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">                <xsd:annotation>                   <xsd:documentation>Contains the key identifying the element changes you want to retrieve from the database.</xsd:documentation>                </xsd:annotation>              </xsd:element>              <xsd:element minOccurs="0" name="ChangeSetNumber" type="xsd:int">               <xsd:annotation>                 <xsd:documentation>The element changes associated with an event. 0 means current.</xsd:documentation>               </xsd:annotation>            </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetChangesRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element&apos;s changes from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetChangesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetChangesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element changes you attempted to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element minOccurs="0" name="Changes" type="elm:ChangeData">     <xsd:annotation>     <xsd:documentation>Contains the element changes you have retrieved from the database.</xsd:documentation>     </xsd:annotation>    </xsd:element>    <xsd:element minOccurs="0" name="FlexiFieldChanges" type="elm:FlexiFieldChangeData">     <xsd:annotation>     <xsd:documentation>Contains the element flexi field changes you have retrieved from the database.</xsd:documentation>     </xsd:annotation>    </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetChangesResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetChangesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="DiscardChangesRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element changes you want to delete from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DiscardChangesRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified element&apos;s changes from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:DiscardChangesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DiscardChangesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element changes you attempted to discard from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>              <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtOneOfN">             <xsd:annotation>                <xsd:documentation>The authorisation status of the element.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element minOccurs="0" name="TimeStamp" type="com:typeWord">                <xsd:annotation>                   <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>                </xsd:annotation>              </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="DiscardChangesResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:DiscardChangesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>      <xsd:complexType name="CancelledWorkflowUpdateRequest">     <xsd:complexContent>       <xsd:extension base="com:Request">         <xsd:sequence>           <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element changes you want to delete from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="User" type="com:typeGeneralCodeB">    <xsd:annotation>     <xsd:documentation>Contains the new authorisation status.</xsd:documentation>    </xsd:annotation>    </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="CancelledWorkflowUpdateRequestVerb">     <xsd:annotation>       <xsd:documentation>Deletes the specified element&apos;s changes from the database.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:RequestVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" name="Request" type="elm:CancelledWorkflowUpdateRequest"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="CancelledWorkflowUpdateResponse">     <xsd:complexContent>       <xsd:extension base="com:Response">         <xsd:sequence>           <xsd:element name="CmpCode" type="com:typeGeneralCode">             <xsd:annotation>               <xsd:documentation>The code for the company in which you attempted to cancel the element master workflow.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Level" type="com:typeElmLevel">             <xsd:annotation>               <xsd:documentation>The level of the element master that you attempted to cancel the workflow of.</xsd:documentation>             </xsd:annotation>           </xsd:element>           <xsd:element name="Code" type="com:typeElmCode">             <xsd:annotation>               <xsd:documentation>The code for the element master that you attempted to cancel the workflow of.</xsd:documentation>             </xsd:annotation>           </xsd:element>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>   <xsd:complexType name="CancelledWorkflowUpdateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>     <xsd:complexContent>       <xsd:extension base="com:ResponseVerb">         <xsd:sequence>           <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:CancelledWorkflowUpdateResponse"/>         </xsd:sequence>       </xsd:extension>     </xsd:complexContent>   </xsd:complexType>     <xsd:complexType name="ListPunchoutItemCodesRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Filter" type="com:ReqKeys">             <xsd:annotation>               <xsd:documentation>A filter that selects the punchout item codes to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListPunchoutItemCodesRequestVerb">     <xsd:annotation>       <xsd:documentation>Produces a list of punchout product item codes associated with the specified element masters. The punchout item is used as a template for items created by punchout.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:ListPunchoutItemCodesRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListPunchoutItemCodesResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Filter" type="com:ReqKeys">             <xsd:annotation>               <xsd:documentation>A filter that selects the punchout item codes to be listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element name="FoundDb" type="xsd:boolean">             <xsd:annotation>               <xsd:documentation>If set to FALSE, it indicates that the Procurement database, in which the punchout items are held, cannot be accessed. If set to TRUE, the Procurement database has been accessed; this means that if nothing is returned, the element does not contain a list of punchout items.</xsd:documentation>             </xsd:annotation>           </xsd:element>      <xsd:element minOccurs="0" name="Keys" type="com:KeyData">             <xsd:annotation>               <xsd:documentation>Contains the keys for the punchout item codes listed.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ListPunchoutItemCodesResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:ListPunchoutItemCodesResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:complexType name="ApplyElementNormalTermsToDateRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elm_XMLApplyTermsToDateParams">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element the base date you want apply terms to.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ApplyElementNormalTermsToDateRequestVerb">     <xsd:annotation>       <xsd:documentation>Applies the normal terms specified on the element to the supplied date.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:ApplyElementNormalTermsToDateRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ApplyElementNormalTermsToDateResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element minOccurs="0" name="HardDate" type="com:typeDate">             <xsd:annotation>               <xsd:documentation>Contains the hard date constructed from the element terms and the supplied date.</xsd:documentation>             </xsd:annotation>           </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ApplyElementNormalTermsToDateResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:ApplyElementNormalTermsToDateResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>     <xsd:complexType name="AuthoriseRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">       <xsd:annotation>        <xsd:documentation>Contains the key identifying the element you want to authorise or deny.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="AuthorisationStatus" type="com:typeCtOneOfN">       <xsd:annotation>        <xsd:documentation>Contains the new authorisation status.</xsd:documentation>       </xsd:annotation>      </xsd:element>              <xsd:element name="Comment" type="com:typeTextB">                <xsd:annotation>                   <xsd:documentation>Contains the authorisation comment.</xsd:documentation>                </xsd:annotation>              </xsd:element>              <xsd:element name="User" type="com:typeGeneralCodeB">       <xsd:annotation>        <xsd:documentation>Contains the new authorisation status.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AuthoriseRequestVerb">   <xsd:annotation>    <xsd:documentation>Changes the elements authorisation status.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:AuthoriseRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AuthoriseResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">       <xsd:annotation>        <xsd:documentation>Contains the key identifying the element you attempted to authorise or deny.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element name="AuthorisationStatus" type="com:typeCtOneOfN">       <xsd:annotation>        <xsd:documentation>Contains the new authorisation status.</xsd:documentation>       </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="AuthoriseResponseVerb">   <xsd:annotation>    <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>   </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:AuthoriseResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>      <xsd:complexType name="GetHistoryRequest">   <xsd:complexContent>    <xsd:extension base="com:Request">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">                <xsd:annotation>                   <xsd:documentation>Contains the key identifying the element history you want to retrieve from the database.</xsd:documentation>                </xsd:annotation>              </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetHistoryRequestVerb">     <xsd:annotation>       <xsd:documentation>Retrieves the specified element history from the database.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:RequestVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" name="Request" type="elm:GetHistoryRequest"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetHistoryResponse">   <xsd:complexContent>    <xsd:extension base="com:Response">     <xsd:sequence>      <xsd:element name="Key" type="elm:elmFullKey">             <xsd:annotation>               <xsd:documentation>Contains the key identifying the element changes you attempted to retrieve from the database.</xsd:documentation>             </xsd:annotation>           </xsd:element>    <xsd:element name="History" type="elm:ElementHistoryEventList">     <xsd:annotation>     <xsd:documentation>Contains the element history you have retrieved from the database.</xsd:documentation>     </xsd:annotation>    </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="GetHistoryResponseVerb">     <xsd:annotation>       <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ResponseVerb">     <xsd:sequence>      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:GetHistoryResponse"/>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>               <xsd:complexType name="CancelWorkflowRequest">         <xsd:complexContent>             <xsd:extension base="com:Request">                 <xsd:sequence>                     <xsd:element name="Key" type="elm:elmFullKey">                         <xsd:annotation>                             <xsd:documentation>Contains the key identifying the element for which you want to cancel workflow.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                     <xsd:element name="Comment" type="com:typeTextB">                <xsd:annotation>                   <xsd:documentation>Contains the cancel comment.</xsd:documentation>                </xsd:annotation>              </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CancelWorkflowRequestVerb">         <xsd:annotation>             <xsd:documentation>Cancels the specified workflow.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:RequestVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" name="Request" type="elm:CancelWorkflowRequest"/>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CancelWorkflowResponse">         <xsd:complexContent>             <xsd:extension base="com:Response">                 <xsd:sequence>                     <xsd:element name="Key" type="elm:elmFullKey">                         <xsd:annotation>                             <xsd:documentation>Contains the key identifying the element for which you attempted to cancel workflow.</xsd:documentation>                         </xsd:annotation>                     </xsd:element>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>     <xsd:complexType name="CancelWorkflowResponseVerb">         <xsd:annotation>             <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>         </xsd:annotation>         <xsd:complexContent>             <xsd:extension base="com:ResponseVerb">                 <xsd:sequence>                     <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" type="elm:CancelWorkflowResponse"/>                 </xsd:sequence>             </xsd:extension>         </xsd:complexContent>     </xsd:complexType>      <xsd:complexType name="ElementMasterRequest">         <xsd:annotation>             <xsd:appinfo build:funcSecValue="304" build:readOnly="true"/>       <xsd:documentation>This service allows you to maintain element masters.</xsd:documentation>         </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceRequest">     <xsd:sequence>      <xsd:element minOccurs="0" name="List" type="elm:ListRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="14" build:readOnly="true"/>        <xsd:documentation>Retrieves extended key information for the specified element masters from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Add" type="elm:AddRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="16" build:readOnly="false" com:publishEvent="true"/>        <xsd:documentation>Creates new element masters in the database using the element information you provide.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Get" type="elm:GetRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="15" build:readOnly="true"/>        <xsd:documentation>Retrieves the specified element masters from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Update" type="elm:UpdateRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="17" build:readOnly="false" com:publishEvent="true"/>        <xsd:documentation>Updates element masters in the database using the element information you provide.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Set" type="elm:SetRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="18" build:readOnly="false" com:publishEvent="true"/>        <xsd:documentation>Sets values for specified fields in specified element masters.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Delete" type="elm:DeleteRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="122" build:readOnly="false" com:publishEvent="true"/>        <xsd:documentation>Deletes the specified element masters from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="GetBanks" type="elm:GetBanksRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="123" build:readOnly="true"/>        <xsd:documentation>Retrieves the specified element&apos;s bank information from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="GetAddresses" type="elm:GetAddressesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="124" build:readOnly="true"/>        <xsd:documentation>Retrieves the specified element&apos;s address information from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Fetch" type="elm:FetchRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="121" build:readOnly="true"/>        <xsd:documentation>Fetches the specified element information from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="ListPunchoutItemCodes" type="elm:ListPunchoutItemCodesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="125" build:readOnly="true"/>        <xsd:documentation>Produces a list of punchout product item codes associated with the specified element masters. The punchout item is used as a template for items created by punchout.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="ApplyElementNormalTermsToDate" type="elm:ApplyElementNormalTermsToDateRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="126" build:readOnly="true"/>        <xsd:documentation>Applies the normal terms specified on the element to the supplied date.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="Authorise" type="elm:AuthoriseRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="127" build:readOnly="false" com:publishEvent="true"/>        <xsd:documentation>Changes the elements authorisation status.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="GetChanges" type="elm:GetChangesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="128" build:readOnly="true"/>        <xsd:documentation>Retrieves the specified element&apos;s changes from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="DiscardChanges" type="elm:DiscardChangesRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="129" build:readOnly="true"/>        <xsd:documentation>Deletes the specified element&apos;s changes from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>              <xsd:element minOccurs="0" name="CancelledWorkflowUpdate" type="elm:CancelledWorkflowUpdateRequestVerb">                <xsd:annotation>                   <xsd:appinfo build:funcSecValue="130" build:readOnly="false"/>                   <xsd:documentation>Updates the element after a workflow containing it has been cancelled</xsd:documentation>                </xsd:annotation>              </xsd:element>              <xsd:element minOccurs="0" name="GetHistory" type="elm:GetHistoryRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="131" build:readOnly="true"/>        <xsd:documentation>Retrieves the specified element&apos;s history from the database.</xsd:documentation>                         </xsd:annotation>      </xsd:element>                     <xsd:element minOccurs="0" name="CancelWorkflow" type="elm:CancelWorkflowRequestVerb">                         <xsd:annotation>                             <xsd:appinfo build:funcSecValue="132" build:readOnly="true"/>        <xsd:documentation>Cancels the specified element&apos;s workflow.</xsd:documentation>                         </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>  <xsd:complexType name="ElementMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain element masters.</xsd:documentation>     </xsd:annotation>   <xsd:complexContent>    <xsd:extension base="com:ServiceResponse">     <xsd:sequence>      <xsd:element minOccurs="0" name="List" type="elm:ListResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Add" type="elm:AddResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Get" type="elm:GetResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Update" type="elm:UpdateResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Set" type="elm:SetResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Delete" type="elm:DeleteResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="GetBanks" type="elm:GetBanksResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="GetAddresses" type="elm:GetAddressesResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="Fetch" type="elm:FetchResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>        <xsd:element minOccurs="0" name="ListPunchoutItemCodes" type="elm:ListPunchoutItemCodesResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="ApplyElementNormalTermsToDate" type="elm:ApplyElementNormalTermsToDateResponseVerb">      <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>      </xsd:annotation>       </xsd:element>      <xsd:element minOccurs="0" name="Authorise" type="elm:AuthoriseResponseVerb">       <xsd:annotation>        <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>      </xsd:element>      <xsd:element minOccurs="0" name="GetChanges" type="elm:GetChangesResponseVerb">       <xsd:annotation>          <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>        </xsd:element>        <xsd:element minOccurs="0" name="DiscardChanges" type="elm:DiscardChangesResponseVerb">       <xsd:annotation>          <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>        </xsd:element>              <xsd:element minOccurs="0" name="CancelledWorkflowUpdate" type="elm:CancelledWorkflowUpdateResponseVerb">                <xsd:annotation>                   <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>                </xsd:annotation>              </xsd:element>              <xsd:element minOccurs="0" name="GetHistory" type="elm:GetHistoryResponseVerb">       <xsd:annotation>          <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>       </xsd:annotation>        </xsd:element>                     <xsd:element minOccurs="0" name="CancelWorkflow" type="elm:CancelWorkflowResponseVerb">                         <xsd:annotation>                             <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>                         </xsd:annotation>      </xsd:element>     </xsd:sequence>    </xsd:extension>   </xsd:complexContent>  </xsd:complexType>    <xsd:element name="ElementMasterRequest" type="elm:ElementMasterRequest">     <xsd:annotation>       <xsd:documentation>This service allows you to maintain element masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>  <xsd:element name="ElementMasterResponse" type="elm:ElementMasterResponse">     <xsd:annotation>       <xsd:documentation>This is the response that is returned when you maintain element masters.</xsd:documentation>     </xsd:annotation>   </xsd:element>       <xsd:complexType name="ElementFinderNumberRange">     <xsd:annotation>       <xsd:documentation>This element holds parameters for you to specify the number range to search.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Begin" type="xsd:int">         <xsd:annotation>           <xsd:documentation>By default, searching begins at record 1. Enter a value here to skip that number of records before beginning the search.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Extent" type="xsd:int">         <xsd:annotation>           <xsd:documentation>The maximum number of records (element masters) to retrieve.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="ElementFinderFilter">     <xsd:annotation>       <xsd:documentation>This element holds parameters you can specify to find a particular element master.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="NumberRange" type="elm:ElementFinderNumberRange">         <xsd:annotation>           <xsd:documentation>This element holds parameters for you to specify the number range to search.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CompanyCode" type="com:typeCodeWild">         <xsd:annotation>           <xsd:documentation>The company code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Level" type="com:typeElmLevel">         <xsd:annotation>           <xsd:documentation>The element level to which the element master you want to find belongs.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The code for the element master you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The abbreviated name for the element master you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="NameOrShortName" type="com:typeNameB">         <xsd:annotation>           <xsd:documentation>The name or the short name of the element master you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CurrencyCode" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>The currency code of the element master you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ElementGroup" type="com:typeGeneralCodeB">         <xsd:annotation>           <xsd:documentation>An element group to which the required element master belongs.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Mnemonic" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The mnemonic of the element master you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="PostCode" type="com:typePostCode">         <xsd:annotation>           <xsd:documentation>The post code of the element you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AccNum" type="com:typeBankAccNum">         <xsd:annotation>           <xsd:documentation>The bank account number of the element you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Matchable" type="com:typeCtYesNoEither">         <xsd:annotation>           <xsd:documentation>Specifies whether or not the required element master is matchable.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CustomerSupplier" type="com:typeCtYesNoEither">         <xsd:annotation>           <xsd:documentation>Specifies whether or not the required element master is a customer or supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CustomerSupplierExt" type="com:typeCtCustSuppExt">         <xsd:annotation>           <xsd:documentation>Specifies the element customer or supplier status.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Umbrella" type="com:typeCtYesNoEither">         <xsd:annotation>           <xsd:documentation>Specifies whether or not the required element master is for an umbrella element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EnableMasterSecurityFilter" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If present and TRUE, restricts returned masters to those for which the logged on user has read or read/write master security access.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="EnableAccountWriteSecurityFilter" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If present and TRUE, restricts returned masters for which the logged on user has write account security access.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CodeRangeEndCode" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The code for the element master at the end of the selection range.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="LastModifiedFrom" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The start date of a date range for selecting element masters that were last modified within this date range.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="LastModifiedTo" type="com:typeDateB">         <xsd:annotation>           <xsd:documentation>The end date of a date range for selecting element masters that were last modified within this date range.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Fax" type="com:typeFax">         <xsd:annotation>           <xsd:documentation>The fax number of the element you want to find. All addresses on the element are searched for this fax number.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Telephone" type="com:typeTel">         <xsd:annotation>           <xsd:documentation>The telephone number of the element you want to find. All addresses on the element are searched for this telephone number.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TaxNumber" type="com:typeVATB">         <xsd:annotation>           <xsd:documentation>The tax number of the element you want to find.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ReturnNames" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that element master names should be returned.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element1" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 1.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element2" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 2.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element3" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 3.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element4" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 4.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element5" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 5.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element6" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 6.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element7" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 7.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Element8" type="com:typeElmCodeB">         <xsd:annotation>           <xsd:documentation>Element code at level 8.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Language" type="com:typeLanguageb">         <xsd:annotation>           <xsd:documentation>The language to use for the name and short name of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="TypeAheadSearch" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If true, when searching for elements that match the search criteria, the target values for the element code and element short name are combined with a logical OR for a type-ahead search. If false, target values are combined with a logical AND for a normal search.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="CreditManager" type="com:typeCodeB">         <xsd:annotation>           <xsd:documentation>A code identifying the user who is responsible for credit management for the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>       <xsd:element minOccurs="0" name="IBAN" type="com:typeIBANB">         <xsd:annotation>           <xsd:documentation>The International Bank Account Number (IBAN) of the bank account.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="AuthorisationStatus" type="com:typeCtElementAuthorisationAll">         <xsd:annotation>           <xsd:documentation>The authorisation status of the element.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmKeyDataElementNamed">     <xsd:annotation>       <xsd:documentation>The key to an element.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element name="Code" type="com:typeElmCode">         <xsd:annotation>           <xsd:documentation>The element code.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="Name" type="com:typeNameB">         <xsd:annotation>           <xsd:documentation>The element name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element minOccurs="0" name="ShortName" type="com:typeShortNameB">         <xsd:annotation>           <xsd:documentation>The element short name.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="CustomerSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that this element is a customer and a supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="IsCustomer" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that this element is a customer.</xsd:documentation>         </xsd:annotation>       </xsd:element>    <xsd:element name="IsSupplier" type="xsd:boolean">         <xsd:annotation>           <xsd:documentation>If TRUE, specifies that this element is a supplier.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType>  <xsd:complexType name="elmKeyDataNamed">     <xsd:annotation>       <xsd:documentation>This element holds element key data.</xsd:documentation>     </xsd:annotation>   <xsd:sequence>    <xsd:element maxOccurs="unbounded" minOccurs="0" name="Key" type="elm:elmKeyDataElementNamed">         <xsd:annotation>           <xsd:documentation>The key to an element.</xsd:documentation>         </xsd:annotation>       </xsd:element>   </xsd:sequence>  </xsd:complexType> </xsd:schema>